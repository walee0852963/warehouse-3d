{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/waleed/Desktop/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"children\", \"range\", \"limit\"],\n  _excluded2 = [\"children\"],\n  _excluded3 = [\"children\", \"positions\", \"colors\", \"sizes\", \"stride\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nconst _inverseMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _ray = /* @__PURE__ */new THREE.Ray();\nconst _sphere = /* @__PURE__ */new THREE.Sphere();\nconst _position = /* @__PURE__ */new THREE.Vector3();\nclass PositionPoint extends THREE.Group {\n  constructor() {\n    super();\n    this.size = 0;\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  }\n\n  // This will allow the virtual instance have bounds\n  get geometry() {\n    var _this$instance$curren;\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  }\n  raycast(raycaster, intersects) {\n    var _raycaster$params$Poi, _raycaster$params$Poi2;\n    const parent = this.instance.current;\n    if (!parent || !parent.geometry) return;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey);\n    // If the instance wasn't found or exceeds the parents draw range, bail out\n    if (instanceId === -1 || instanceId > parent.geometry.drawRange.count) return;\n    const threshold = (_raycaster$params$Poi = (_raycaster$params$Poi2 = raycaster.params.Points) == null ? void 0 : _raycaster$params$Poi2.threshold) !== null && _raycaster$params$Poi !== void 0 ? _raycaster$params$Poi : 1;\n    _sphere.set(this.getWorldPosition(_position), threshold);\n    if (raycaster.ray.intersectsSphere(_sphere) === false) return;\n    _inverseMatrix.copy(parent.matrixWorld).invert();\n    _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n    const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n    const localThresholdSq = localThreshold * localThreshold;\n    const rayPointDistanceSq = _ray.distanceSqToPoint(this.position);\n    if (rayPointDistanceSq < localThresholdSq) {\n      const intersectPoint = new THREE.Vector3();\n      _ray.closestPointToPoint(this.position, intersectPoint);\n      intersectPoint.applyMatrix4(this.matrixWorld);\n      const distance = raycaster.ray.origin.distanceTo(intersectPoint);\n      if (distance < raycaster.near || distance > raycaster.far) return;\n      intersects.push({\n        distance: distance,\n        distanceToRay: Math.sqrt(rayPointDistanceSq),\n        point: intersectPoint,\n        index: instanceId,\n        face: null,\n        object: this\n      });\n    }\n  }\n}\nlet i, positionRef;\nconst context = /* @__PURE__ */React.createContext(null);\nconst parentMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst position = /* @__PURE__ */new THREE.Vector3();\n\n/**\n * Instance implementation, relies on react + context to update the attributes based on the children of this component\n */\nconst PointsInstances = /* @__PURE__ */React.forwardRef((_ref, ref) => {\n  let {\n      children,\n      range,\n      limit = 1000\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const parentRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => parentRef.current, []);\n  const [refs, setRefs] = React.useState([]);\n  const [[positions, colors, sizes]] = React.useState(() => [new Float32Array(limit * 3), Float32Array.from({\n    length: limit * 3\n  }, () => 1), Float32Array.from({\n    length: limit\n  }, () => 1)]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.geometry.attributes.position.needsUpdate = true;\n  });\n  useFrame(() => {\n    parentRef.current.updateMatrix();\n    parentRef.current.updateMatrixWorld();\n    parentMatrix.copy(parentRef.current.matrixWorld).invert();\n    parentRef.current.geometry.drawRange.count = Math.min(limit, range !== undefined ? range : limit, refs.length);\n    for (i = 0; i < refs.length; i++) {\n      positionRef = refs[i].current;\n      positionRef.getWorldPosition(position).applyMatrix4(parentMatrix);\n      position.toArray(positions, i * 3);\n      parentRef.current.geometry.attributes.position.needsUpdate = true;\n      positionRef.matrixWorldNeedsUpdate = true;\n      positionRef.color.toArray(colors, i * 3);\n      parentRef.current.geometry.attributes.color.needsUpdate = true;\n      sizes.set([positionRef.size], i);\n      parentRef.current.geometry.attributes.size.needsUpdate = true;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setRefs(refs => [...refs, ref]);\n      return () => setRefs(refs => refs.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    userData: {\n      instances: refs\n    },\n    matrixAutoUpdate: false,\n    ref: parentRef,\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    args: [positions, 3],\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    args: [colors, 3],\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    args: [sizes, 1],\n    usage: THREE.DynamicDrawUsage\n  })), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\nconst Point = /* @__PURE__ */React.forwardRef((_ref2, ref) => {\n  let {\n      children\n    } = _ref2,\n    props = _objectWithoutProperties(_ref2, _excluded2);\n  React.useMemo(() => extend({\n    PositionPoint\n  }), []);\n  const group = React.useRef(null);\n  React.useImperativeHandle(ref, () => group.current, []);\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionPoint\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: group\n  }, props), children);\n});\n\n/**\n * Buffer implementation, relies on complete buffers of the correct number, leaves it to the user to update them\n */\n\nconst PointsBuffer = /* @__PURE__ */React.forwardRef((_ref3, forwardedRef) => {\n  let {\n      children,\n      positions,\n      colors,\n      sizes,\n      stride = 3\n    } = _ref3,\n    props = _objectWithoutProperties(_ref3, _excluded3);\n  const pointsRef = React.useRef(null);\n  React.useImperativeHandle(forwardedRef, () => pointsRef.current, []);\n  useFrame(() => {\n    const attr = pointsRef.current.geometry.attributes;\n    attr.position.needsUpdate = true;\n    if (colors) attr.color.needsUpdate = true;\n    if (sizes) attr.size.needsUpdate = true;\n  });\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    ref: pointsRef\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    args: [positions, stride],\n    usage: THREE.DynamicDrawUsage\n  }), colors && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    args: [colors, stride],\n    count: colors.length / stride,\n    usage: THREE.DynamicDrawUsage\n  }), sizes && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    args: [sizes, 1],\n    count: sizes.length / stride,\n    usage: THREE.DynamicDrawUsage\n  })), children);\n});\nconst Points = /* @__PURE__ */React.forwardRef((props, forwardedRef) => {\n  if (props.positions instanceof Float32Array) {\n    return /*#__PURE__*/React.createElement(PointsBuffer, _extends({}, props, {\n      ref: forwardedRef\n    }));\n  } else return /*#__PURE__*/React.createElement(PointsInstances, _extends({}, props, {\n    ref: forwardedRef\n  }));\n});\nexport { Point, Points, PointsBuffer, PositionPoint };","map":{"version":3,"names":["_extends","THREE","React","extend","useFrame","_inverseMatrix","Matrix4","_ray","Ray","_sphere","Sphere","_position","Vector3","PositionPoint","Group","constructor","size","color","Color","instance","current","undefined","instanceKey","geometry","_this$instance$curren","raycast","raycaster","intersects","_raycaster$params$Poi","_raycaster$params$Poi2","parent","instanceId","userData","instances","indexOf","drawRange","count","threshold","params","Points","set","getWorldPosition","ray","intersectsSphere","copy","matrixWorld","invert","applyMatrix4","localThreshold","scale","x","y","z","localThresholdSq","rayPointDistanceSq","distanceSqToPoint","position","intersectPoint","closestPointToPoint","distance","origin","distanceTo","near","far","push","distanceToRay","Math","sqrt","point","index","face","object","i","positionRef","context","createContext","parentMatrix","PointsInstances","forwardRef","_ref","ref","children","range","limit","props","_objectWithoutProperties","_excluded","parentRef","useRef","useImperativeHandle","refs","setRefs","useState","positions","colors","sizes","Float32Array","from","length","useEffect","attributes","needsUpdate","updateMatrix","updateMatrixWorld","min","toArray","matrixWorldNeedsUpdate","api","useMemo","getParent","subscribe","filter","item","createElement","matrixAutoUpdate","attach","args","usage","DynamicDrawUsage","Provider","value","Point","_ref2","_excluded2","group","useContext","useLayoutEffect","PointsBuffer","_ref3","forwardedRef","stride","_excluded3","pointsRef","attr"],"sources":["C:/Users/waleed/Desktop/node_modules/@react-three/drei/core/Points.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\n\nconst _inverseMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _ray = /* @__PURE__ */new THREE.Ray();\nconst _sphere = /* @__PURE__ */new THREE.Sphere();\nconst _position = /* @__PURE__ */new THREE.Vector3();\nclass PositionPoint extends THREE.Group {\n  constructor() {\n    super();\n    this.size = 0;\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  }\n\n  // This will allow the virtual instance have bounds\n  get geometry() {\n    var _this$instance$curren;\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  }\n  raycast(raycaster, intersects) {\n    var _raycaster$params$Poi, _raycaster$params$Poi2;\n    const parent = this.instance.current;\n    if (!parent || !parent.geometry) return;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey);\n    // If the instance wasn't found or exceeds the parents draw range, bail out\n    if (instanceId === -1 || instanceId > parent.geometry.drawRange.count) return;\n    const threshold = (_raycaster$params$Poi = (_raycaster$params$Poi2 = raycaster.params.Points) == null ? void 0 : _raycaster$params$Poi2.threshold) !== null && _raycaster$params$Poi !== void 0 ? _raycaster$params$Poi : 1;\n    _sphere.set(this.getWorldPosition(_position), threshold);\n    if (raycaster.ray.intersectsSphere(_sphere) === false) return;\n    _inverseMatrix.copy(parent.matrixWorld).invert();\n    _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n    const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n    const localThresholdSq = localThreshold * localThreshold;\n    const rayPointDistanceSq = _ray.distanceSqToPoint(this.position);\n    if (rayPointDistanceSq < localThresholdSq) {\n      const intersectPoint = new THREE.Vector3();\n      _ray.closestPointToPoint(this.position, intersectPoint);\n      intersectPoint.applyMatrix4(this.matrixWorld);\n      const distance = raycaster.ray.origin.distanceTo(intersectPoint);\n      if (distance < raycaster.near || distance > raycaster.far) return;\n      intersects.push({\n        distance: distance,\n        distanceToRay: Math.sqrt(rayPointDistanceSq),\n        point: intersectPoint,\n        index: instanceId,\n        face: null,\n        object: this\n      });\n    }\n  }\n}\nlet i, positionRef;\nconst context = /* @__PURE__ */React.createContext(null);\nconst parentMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst position = /* @__PURE__ */new THREE.Vector3();\n\n/**\n * Instance implementation, relies on react + context to update the attributes based on the children of this component\n */\nconst PointsInstances = /* @__PURE__ */React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  ...props\n}, ref) => {\n  const parentRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => parentRef.current, []);\n  const [refs, setRefs] = React.useState([]);\n  const [[positions, colors, sizes]] = React.useState(() => [new Float32Array(limit * 3), Float32Array.from({\n    length: limit * 3\n  }, () => 1), Float32Array.from({\n    length: limit\n  }, () => 1)]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.geometry.attributes.position.needsUpdate = true;\n  });\n  useFrame(() => {\n    parentRef.current.updateMatrix();\n    parentRef.current.updateMatrixWorld();\n    parentMatrix.copy(parentRef.current.matrixWorld).invert();\n    parentRef.current.geometry.drawRange.count = Math.min(limit, range !== undefined ? range : limit, refs.length);\n    for (i = 0; i < refs.length; i++) {\n      positionRef = refs[i].current;\n      positionRef.getWorldPosition(position).applyMatrix4(parentMatrix);\n      position.toArray(positions, i * 3);\n      parentRef.current.geometry.attributes.position.needsUpdate = true;\n      positionRef.matrixWorldNeedsUpdate = true;\n      positionRef.color.toArray(colors, i * 3);\n      parentRef.current.geometry.attributes.color.needsUpdate = true;\n      sizes.set([positionRef.size], i);\n      parentRef.current.geometry.attributes.size.needsUpdate = true;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setRefs(refs => [...refs, ref]);\n      return () => setRefs(refs => refs.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    userData: {\n      instances: refs\n    },\n    matrixAutoUpdate: false,\n    ref: parentRef,\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    args: [positions, 3],\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    args: [colors, 3],\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    args: [sizes, 1],\n    usage: THREE.DynamicDrawUsage\n  })), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\nconst Point = /* @__PURE__ */React.forwardRef(({\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    PositionPoint\n  }), []);\n  const group = React.useRef(null);\n  React.useImperativeHandle(ref, () => group.current, []);\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionPoint\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: group\n  }, props), children);\n});\n\n/**\n * Buffer implementation, relies on complete buffers of the correct number, leaves it to the user to update them\n */\n\nconst PointsBuffer = /* @__PURE__ */React.forwardRef(({\n  children,\n  positions,\n  colors,\n  sizes,\n  stride = 3,\n  ...props\n}, forwardedRef) => {\n  const pointsRef = React.useRef(null);\n  React.useImperativeHandle(forwardedRef, () => pointsRef.current, []);\n  useFrame(() => {\n    const attr = pointsRef.current.geometry.attributes;\n    attr.position.needsUpdate = true;\n    if (colors) attr.color.needsUpdate = true;\n    if (sizes) attr.size.needsUpdate = true;\n  });\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    ref: pointsRef\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    args: [positions, stride],\n    usage: THREE.DynamicDrawUsage\n  }), colors && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    args: [colors, stride],\n    count: colors.length / stride,\n    usage: THREE.DynamicDrawUsage\n  }), sizes && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    args: [sizes, 1],\n    count: sizes.length / stride,\n    usage: THREE.DynamicDrawUsage\n  })), children);\n});\nconst Points = /* @__PURE__ */React.forwardRef((props, forwardedRef) => {\n  if (props.positions instanceof Float32Array) {\n    return /*#__PURE__*/React.createElement(PointsBuffer, _extends({}, props, {\n      ref: forwardedRef\n    }));\n  } else return /*#__PURE__*/React.createElement(PointsInstances, _extends({}, props, {\n    ref: forwardedRef\n  }));\n});\n\nexport { Point, Points, PointsBuffer, PositionPoint };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}