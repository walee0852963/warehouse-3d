{"ast":null,"code":"import _objectSpread from \"C:/Users/waleed/Desktop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/waleed/Desktop/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"context\", \"children\"],\n  _excluded2 = [\"context\", \"children\", \"range\", \"limit\", \"frames\"],\n  _excluded3 = [\"meshes\", \"children\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport { setUpdateRange } from '../helpers/deprecated.js';\nfunction isFunctionChild(value) {\n  return typeof value === 'function';\n}\nconst _instanceLocalMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _instanceWorldMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _instanceIntersects = [];\nconst _mesh = /* @__PURE__ */new THREE.Mesh();\nclass PositionMesh extends THREE.Group {\n  constructor() {\n    super();\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  }\n\n  // This will allow the virtual instance have bounds\n  get geometry() {\n    var _this$instance$curren;\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  }\n\n  // And this will allow the virtual instance to receive events\n  raycast(raycaster, intersects) {\n    const parent = this.instance.current;\n    if (!parent) return;\n    if (!parent.geometry || !parent.material) return;\n    _mesh.geometry = parent.geometry;\n    const matrixWorld = parent.matrixWorld;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey);\n    // If the instance wasn't found or exceeds the parents draw range, bail out\n    if (instanceId === -1 || instanceId > parent.count) return;\n    // calculate the world matrix for each instance\n    parent.getMatrixAt(instanceId, _instanceLocalMatrix);\n    _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix);\n    // the mesh represents this single instance\n    _mesh.matrixWorld = _instanceWorldMatrix;\n    // raycast side according to instance material\n    if (parent.material instanceof THREE.Material) _mesh.material.side = parent.material.side;else _mesh.material.side = parent.material[0].side;\n    _mesh.raycast(raycaster, _instanceIntersects);\n    // process the result of raycast\n    for (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n      const intersect = _instanceIntersects[i];\n      intersect.instanceId = instanceId;\n      intersect.object = this;\n      intersects.push(intersect);\n    }\n    _instanceIntersects.length = 0;\n  }\n}\nconst globalContext = /* @__PURE__ */React.createContext(null);\nconst parentMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst instanceMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst tempMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst translation = /* @__PURE__ */new THREE.Vector3();\nconst rotation = /* @__PURE__ */new THREE.Quaternion();\nconst scale = /* @__PURE__ */new THREE.Vector3();\nconst isInstancedBufferAttribute = attr => attr.isInstancedBufferAttribute;\nconst Instance = /* @__PURE__ */React.forwardRef((_ref, ref) => {\n  let {\n      context,\n      children\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  React.useMemo(() => extend({\n    PositionMesh\n  }), []);\n  const group = React.useRef(null);\n  React.useImperativeHandle(ref, () => group.current, []);\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionMesh\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: group\n  }, props), children);\n});\nconst Instances = /* @__PURE__ */React.forwardRef((_ref2, ref) => {\n  let {\n      context,\n      children,\n      range,\n      limit = 1000,\n      frames = Infinity\n    } = _ref2,\n    props = _objectWithoutProperties(_ref2, _excluded2);\n  const [{\n    localContext,\n    instance\n  }] = React.useState(() => {\n    const localContext = /*#__PURE__*/React.createContext(null);\n    return {\n      localContext,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: localContext\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => parentRef.current, []);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n    for (let i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let iterations = 0;\n  let count = 0;\n  const attributes = React.useRef([]);\n  React.useLayoutEffect(() => {\n    attributes.current = Object.entries(parentRef.current.geometry.attributes).filter(_ref3 => {\n      let [_name, value] = _ref3;\n      return isInstancedBufferAttribute(value);\n    });\n  });\n  useFrame(() => {\n    if (frames === Infinity || iterations < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n      parentRef.current.count = count;\n      setUpdateRange(parentRef.current.instanceMatrix, {\n        start: 0,\n        count: count * 16\n      });\n      setUpdateRange(parentRef.current.instanceColor, {\n        start: 0,\n        count: count * 3\n      });\n      for (let i = 0; i < instances.length; i++) {\n        const instance = instances[i].current;\n        // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n        instance.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        instanceMatrix.toArray(matrices, i * 16);\n        parentRef.current.instanceMatrix.needsUpdate = true;\n        instance.color.toArray(colors, i * 3);\n        parentRef.current.instanceColor.needsUpdate = true;\n      }\n      iterations++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances,\n      limit,\n      frames\n    },\n    matrixAutoUpdate: false,\n    ref: parentRef,\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    args: [matrices, 16],\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    args: [colors, 3],\n    usage: THREE.DynamicDrawUsage\n  }), isFunctionChild(children) ? /*#__PURE__*/React.createElement(localContext.Provider, {\n    value: api\n  }, children(instance)) : context ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\n// TODO: make this non-recursive and type-safe\nconst Merged = /* @__PURE__ */React.forwardRef(function Merged(_ref4, ref) {\n  let {\n      meshes,\n      children\n    } = _ref4,\n    props = _objectWithoutProperties(_ref4, _excluded3);\n  const isArray = Array.isArray(meshes);\n  // Filter out meshes from collections, which may contain non-meshes\n  // @ts-expect-error\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  const render = args => isArray ?\n  // @ts-expect-error\n  children(...args) : children(\n  // @ts-expect-error\n  Object.keys(meshes)\n  // @ts-expect-error\n  .filter(key => meshes[key].isMesh).reduce((acc, key, i) => _objectSpread(_objectSpread({}, acc), {}, {\n    [key]: args[i]\n  }), {}));\n\n  // @ts-expect-error\n  const components = (isArray ? meshes : Object.values(meshes)).map(_ref5 => {\n    let {\n      geometry,\n      material\n    } = _ref5;\n    return /*#__PURE__*/React.createElement(Instances, _extends({\n      key: geometry.uuid,\n      geometry: geometry,\n      material: material\n    }, props));\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, renderRecursive(render, components));\n});\n\n// https://github.com/jamesplease/react-composer\nfunction renderRecursive(render, components) {\n  let results = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  // Once components is exhausted, we can render out the results array.\n  if (!components[0]) {\n    return render(results);\n  }\n\n  // Continue recursion for remaining items.\n  // results.concat([value]) ensures [...results, value] instead of [...results, ...value]\n  function nextRender(value) {\n    return renderRecursive(render, components.slice(1), results.concat([value]));\n  }\n\n  // Each props.components entry is either an element or function [element factory]\n  return typeof components[0] === 'function' ?\n  // When it is a function, produce an element by invoking it with \"render component values\".\n  components[0]({\n    results,\n    render: nextRender\n  }) : /*#__PURE__*/\n  // When it is an element, enhance the element's props with the render prop.\n  React.cloneElement(components[0], {\n    children: nextRender\n  });\n}\n\n/** Idea and implementation for global instances and instanced attributes by\n/*  Matias Gonzalez Fernandez https://x.com/matiNotFound\n/*  and Paul Henschel https://x.com/0xca0a\n*/\nfunction createInstances() {\n  const context = /*#__PURE__*/React.createContext(null);\n  return [/*#__PURE__*/React.forwardRef((props, fref) => /*#__PURE__*/React.createElement(Instances, _extends({\n    ref: fref,\n    context: context\n  }, props))), /*#__PURE__*/React.forwardRef((props, fref) => /*#__PURE__*/React.createElement(Instance, _extends({\n    ref: fref,\n    context: context\n  }, props)))];\n}\nconst InstancedAttribute = /*#__PURE__*/React.forwardRef((_ref6, fref) => {\n  let {\n    name,\n    defaultValue,\n    normalized,\n    usage = THREE.DynamicDrawUsage\n  } = _ref6;\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    const parent = ref.current.__r3f.parent.object;\n    parent.geometry.attributes[name] = ref.current;\n    const value = Array.isArray(defaultValue) ? defaultValue : [defaultValue];\n    const array = Array.from({\n      length: parent.userData.limit\n    }, () => value).flat();\n    ref.current.array = new Float32Array(array);\n    ref.current.itemSize = value.length;\n    // @ts-expect-error\n    ref.current.count = array.length / ref.current.itemSize;\n    return () => {\n      delete parent.geometry.attributes[name];\n    };\n  }, [name]);\n  let iterations = 0;\n  useFrame(() => {\n    const parent = ref.current.__r3f.parent.object;\n    if (parent.userData.frames === Infinity || iterations < parent.userData.frames) {\n      for (let i = 0; i < parent.userData.instances.length; i++) {\n        const instance = parent.userData.instances[i].current;\n        const value = instance[name];\n        if (value !== undefined) {\n          ref.current.set(Array.isArray(value) ? value : typeof value.toArray === 'function' ? value.toArray() : [value], i * ref.current.itemSize);\n          ref.current.needsUpdate = true;\n        }\n      }\n      iterations++;\n    }\n  });\n  // @ts-expect-error we're abusing three API here by mutating immutable args\n  return /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    ref: ref,\n    usage: usage,\n    normalized: normalized\n  });\n});\nexport { Instance, InstancedAttribute, Instances, Merged, PositionMesh, createInstances };","map":{"version":3,"names":["_extends","THREE","React","extend","useFrame","setUpdateRange","isFunctionChild","value","_instanceLocalMatrix","Matrix4","_instanceWorldMatrix","_instanceIntersects","_mesh","Mesh","PositionMesh","Group","constructor","color","Color","instance","current","undefined","instanceKey","geometry","_this$instance$curren","raycast","raycaster","intersects","parent","material","matrixWorld","instanceId","userData","instances","indexOf","count","getMatrixAt","multiplyMatrices","Material","side","i","l","length","intersect","object","push","globalContext","createContext","parentMatrix","instanceMatrix","tempMatrix","translation","Vector3","rotation","Quaternion","scale","isInstancedBufferAttribute","attr","Instance","forwardRef","_ref","ref","context","children","props","_objectWithoutProperties","_excluded","useMemo","group","useRef","useImperativeHandle","subscribe","getParent","useContext","useLayoutEffect","createElement","Instances","_ref2","range","limit","frames","Infinity","_excluded2","localContext","useState","parentRef","setInstances","matrices","colors","mArray","Float32Array","identity","toArray","Array","map","useEffect","needsUpdate","iterations","attributes","Object","entries","filter","_ref3","_name","updateMatrix","updateMatrixWorld","copy","invert","Math","min","start","instanceColor","decompose","compose","premultiply","api","item","matrixAutoUpdate","args","attach","usage","DynamicDrawUsage","Provider","Merged","_ref4","meshes","_excluded3","isArray","key","keys","isMesh","render","reduce","acc","_objectSpread","components","values","_ref5","uuid","renderRecursive","results","arguments","nextRender","slice","concat","cloneElement","createInstances","fref","InstancedAttribute","_ref6","name","defaultValue","normalized","__r3f","array","from","flat","itemSize","set"],"sources":["C:/Users/waleed/Desktop/node_modules/@react-three/drei/core/Instances.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport { setUpdateRange } from '../helpers/deprecated.js';\n\nfunction isFunctionChild(value) {\n  return typeof value === 'function';\n}\nconst _instanceLocalMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _instanceWorldMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _instanceIntersects = [];\nconst _mesh = /* @__PURE__ */new THREE.Mesh();\nclass PositionMesh extends THREE.Group {\n  constructor() {\n    super();\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  }\n\n  // This will allow the virtual instance have bounds\n  get geometry() {\n    var _this$instance$curren;\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  }\n\n  // And this will allow the virtual instance to receive events\n  raycast(raycaster, intersects) {\n    const parent = this.instance.current;\n    if (!parent) return;\n    if (!parent.geometry || !parent.material) return;\n    _mesh.geometry = parent.geometry;\n    const matrixWorld = parent.matrixWorld;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey);\n    // If the instance wasn't found or exceeds the parents draw range, bail out\n    if (instanceId === -1 || instanceId > parent.count) return;\n    // calculate the world matrix for each instance\n    parent.getMatrixAt(instanceId, _instanceLocalMatrix);\n    _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix);\n    // the mesh represents this single instance\n    _mesh.matrixWorld = _instanceWorldMatrix;\n    // raycast side according to instance material\n    if (parent.material instanceof THREE.Material) _mesh.material.side = parent.material.side;else _mesh.material.side = parent.material[0].side;\n    _mesh.raycast(raycaster, _instanceIntersects);\n    // process the result of raycast\n    for (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n      const intersect = _instanceIntersects[i];\n      intersect.instanceId = instanceId;\n      intersect.object = this;\n      intersects.push(intersect);\n    }\n    _instanceIntersects.length = 0;\n  }\n}\nconst globalContext = /* @__PURE__ */React.createContext(null);\nconst parentMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst instanceMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst tempMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst translation = /* @__PURE__ */new THREE.Vector3();\nconst rotation = /* @__PURE__ */new THREE.Quaternion();\nconst scale = /* @__PURE__ */new THREE.Vector3();\nconst isInstancedBufferAttribute = attr => attr.isInstancedBufferAttribute;\nconst Instance = /* @__PURE__ */React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    PositionMesh\n  }), []);\n  const group = React.useRef(null);\n  React.useImperativeHandle(ref, () => group.current, []);\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionMesh\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: group\n  }, props), children);\n});\nconst Instances = /* @__PURE__ */React.forwardRef(({\n  context,\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    localContext,\n    instance\n  }] = React.useState(() => {\n    const localContext = /*#__PURE__*/React.createContext(null);\n    return {\n      localContext,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: localContext\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => parentRef.current, []);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n    for (let i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let iterations = 0;\n  let count = 0;\n  const attributes = React.useRef([]);\n  React.useLayoutEffect(() => {\n    attributes.current = Object.entries(parentRef.current.geometry.attributes).filter(([_name, value]) => isInstancedBufferAttribute(value));\n  });\n  useFrame(() => {\n    if (frames === Infinity || iterations < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n      parentRef.current.count = count;\n      setUpdateRange(parentRef.current.instanceMatrix, {\n        start: 0,\n        count: count * 16\n      });\n      setUpdateRange(parentRef.current.instanceColor, {\n        start: 0,\n        count: count * 3\n      });\n      for (let i = 0; i < instances.length; i++) {\n        const instance = instances[i].current;\n        // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n        instance.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        instanceMatrix.toArray(matrices, i * 16);\n        parentRef.current.instanceMatrix.needsUpdate = true;\n        instance.color.toArray(colors, i * 3);\n        parentRef.current.instanceColor.needsUpdate = true;\n      }\n      iterations++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances,\n      limit,\n      frames\n    },\n    matrixAutoUpdate: false,\n    ref: parentRef,\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    args: [matrices, 16],\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    args: [colors, 3],\n    usage: THREE.DynamicDrawUsage\n  }), isFunctionChild(children) ? /*#__PURE__*/React.createElement(localContext.Provider, {\n    value: api\n  }, children(instance)) : context ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\n// TODO: make this non-recursive and type-safe\nconst Merged = /* @__PURE__ */React.forwardRef(function Merged({\n  meshes,\n  children,\n  ...props\n}, ref) {\n  const isArray = Array.isArray(meshes);\n  // Filter out meshes from collections, which may contain non-meshes\n  // @ts-expect-error\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  const render = args => isArray ?\n  // @ts-expect-error\n  children(...args) : children(\n  // @ts-expect-error\n  Object.keys(meshes)\n  // @ts-expect-error\n  .filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({\n    ...acc,\n    [key]: args[i]\n  }), {}));\n\n  // @ts-expect-error\n  const components = (isArray ? meshes : Object.values(meshes)).map(({\n    geometry,\n    material\n  }) => /*#__PURE__*/React.createElement(Instances, _extends({\n    key: geometry.uuid,\n    geometry: geometry,\n    material: material\n  }, props)));\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, renderRecursive(render, components));\n});\n\n// https://github.com/jamesplease/react-composer\nfunction renderRecursive(render, components, results = []) {\n  // Once components is exhausted, we can render out the results array.\n  if (!components[0]) {\n    return render(results);\n  }\n\n  // Continue recursion for remaining items.\n  // results.concat([value]) ensures [...results, value] instead of [...results, ...value]\n  function nextRender(value) {\n    return renderRecursive(render, components.slice(1), results.concat([value]));\n  }\n\n  // Each props.components entry is either an element or function [element factory]\n  return typeof components[0] === 'function' ?\n  // When it is a function, produce an element by invoking it with \"render component values\".\n  components[0]({\n    results,\n    render: nextRender\n  }) :\n  /*#__PURE__*/\n  // When it is an element, enhance the element's props with the render prop.\n  React.cloneElement(components[0], {\n    children: nextRender\n  });\n}\n\n/** Idea and implementation for global instances and instanced attributes by\n/*  Matias Gonzalez Fernandez https://x.com/matiNotFound\n/*  and Paul Henschel https://x.com/0xca0a\n*/\nfunction createInstances() {\n  const context = /*#__PURE__*/React.createContext(null);\n  return [/*#__PURE__*/React.forwardRef((props, fref) => /*#__PURE__*/React.createElement(Instances, _extends({\n    ref: fref,\n    context: context\n  }, props))), /*#__PURE__*/React.forwardRef((props, fref) => /*#__PURE__*/React.createElement(Instance, _extends({\n    ref: fref,\n    context: context\n  }, props)))];\n}\nconst InstancedAttribute = /*#__PURE__*/React.forwardRef(({\n  name,\n  defaultValue,\n  normalized,\n  usage = THREE.DynamicDrawUsage\n}, fref) => {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    const parent = ref.current.__r3f.parent.object;\n    parent.geometry.attributes[name] = ref.current;\n    const value = Array.isArray(defaultValue) ? defaultValue : [defaultValue];\n    const array = Array.from({\n      length: parent.userData.limit\n    }, () => value).flat();\n    ref.current.array = new Float32Array(array);\n    ref.current.itemSize = value.length;\n    // @ts-expect-error\n    ref.current.count = array.length / ref.current.itemSize;\n    return () => {\n      delete parent.geometry.attributes[name];\n    };\n  }, [name]);\n  let iterations = 0;\n  useFrame(() => {\n    const parent = ref.current.__r3f.parent.object;\n    if (parent.userData.frames === Infinity || iterations < parent.userData.frames) {\n      for (let i = 0; i < parent.userData.instances.length; i++) {\n        const instance = parent.userData.instances[i].current;\n        const value = instance[name];\n        if (value !== undefined) {\n          ref.current.set(Array.isArray(value) ? value : typeof value.toArray === 'function' ? value.toArray() : [value], i * ref.current.itemSize);\n          ref.current.needsUpdate = true;\n        }\n      }\n      iterations++;\n    }\n  });\n  // @ts-expect-error we're abusing three API here by mutating immutable args\n  return /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    ref: ref,\n    usage: usage,\n    normalized: normalized\n  });\n});\n\nexport { Instance, InstancedAttribute, Instances, Merged, PositionMesh, createInstances };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}