{"ast":null,"code":"import { LatheGeometry, Path } from \"three\";\nconst CapsuleGeometry = /* @__PURE__ */(() => {\n  class CapsuleGeometry2 extends LatheGeometry {\n    constructor() {\n      let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      let length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      let capSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;\n      let radialSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;\n      const path = new Path();\n      path.absarc(0, -length / 2, radius, Math.PI * 1.5, 0);\n      path.absarc(0, length / 2, radius, 0, Math.PI * 0.5);\n      super(path.getPoints(capSegments), radialSegments);\n      this.type = \"CapsuleGeometry\";\n      this.parameters = {\n        radius,\n        height: length,\n        capSegments,\n        radialSegments\n      };\n    }\n    static fromJSON(data) {\n      return new CapsuleGeometry2(data.radius, data.length, data.capSegments, data.radialSegments);\n    }\n  }\n  return CapsuleGeometry2;\n})();\nexport { CapsuleGeometry };","map":{"version":3,"names":["CapsuleGeometry","CapsuleGeometry2","LatheGeometry","constructor","radius","arguments","length","undefined","capSegments","radialSegments","path","Path","absarc","Math","PI","getPoints","type","parameters","height","fromJSON","data"],"sources":["C:\\Users\\waleed\\Desktop\\node_modules\\src\\_polyfill\\CapsuleGeometry.js"],"sourcesContent":["import { Path, LatheGeometry } from 'three'\n\nconst CapsuleGeometry = /* @__PURE__ */ (() => {\n  class CapsuleGeometry extends LatheGeometry {\n    constructor(radius = 1, length = 1, capSegments = 4, radialSegments = 8) {\n      const path = new Path()\n      path.absarc(0, -length / 2, radius, Math.PI * 1.5, 0)\n      path.absarc(0, length / 2, radius, 0, Math.PI * 0.5)\n\n      super(path.getPoints(capSegments), radialSegments)\n\n      this.type = 'CapsuleGeometry'\n\n      this.parameters = {\n        radius: radius,\n        height: length,\n        capSegments: capSegments,\n        radialSegments: radialSegments,\n      }\n    }\n\n    static fromJSON(data) {\n      return new CapsuleGeometry(data.radius, data.length, data.capSegments, data.radialSegments)\n    }\n  }\n\n  return CapsuleGeometry\n})()\n\nexport { CapsuleGeometry }\n"],"mappings":";AAEK,MAACA,eAAA,GAAmC,sBAAM;EAC7C,MAAMC,gBAAA,SAAwBC,aAAA,CAAc;IAC1CC,YAAA,EAAyE;MAAA,IAA7DC,MAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAS;MAAA,IAAGC,MAAA,GAAAD,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAS;MAAA,IAAGG,WAAA,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAc;MAAA,IAAGI,cAAA,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB;MACpE,MAAMK,IAAA,GAAO,IAAIC,IAAA,CAAM;MACvBD,IAAA,CAAKE,MAAA,CAAO,GAAG,CAACN,MAAA,GAAS,GAAGF,MAAA,EAAQS,IAAA,CAAKC,EAAA,GAAK,KAAK,CAAC;MACpDJ,IAAA,CAAKE,MAAA,CAAO,GAAGN,MAAA,GAAS,GAAGF,MAAA,EAAQ,GAAGS,IAAA,CAAKC,EAAA,GAAK,GAAG;MAEnD,MAAMJ,IAAA,CAAKK,SAAA,CAAUP,WAAW,GAAGC,cAAc;MAEjD,KAAKO,IAAA,GAAO;MAEZ,KAAKC,UAAA,GAAa;QAChBb,MAAA;QACAc,MAAA,EAAQZ,MAAA;QACRE,WAAA;QACAC;MACD;IACF;IAED,OAAOU,SAASC,IAAA,EAAM;MACpB,OAAO,IAAInB,gBAAA,CAAgBmB,IAAA,CAAKhB,MAAA,EAAQgB,IAAA,CAAKd,MAAA,EAAQc,IAAA,CAAKZ,WAAA,EAAaY,IAAA,CAAKX,cAAc;IAC3F;EACF;EAED,OAAOR,gBAAA;AACT,GAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}