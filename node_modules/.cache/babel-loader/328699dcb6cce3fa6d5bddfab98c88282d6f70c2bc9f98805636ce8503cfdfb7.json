{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/waleed/Desktop/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"aberrationStrength\", \"fastChroma\", \"envMap\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useRef, useMemo, useLayoutEffect } from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { MeshBVHUniformStruct, MeshBVH, SAH } from 'three-mesh-bvh';\nimport { MeshRefractionMaterial as MeshRefractionMaterial$1 } from '../materials/MeshRefractionMaterial.js';\nconst isCubeTexture = def => def && def.isCubeTexture;\nfunction MeshRefractionMaterial(_ref2) {\n  let {\n      aberrationStrength = 0,\n      fastChroma = true,\n      envMap\n    } = _ref2,\n    props = _objectWithoutProperties(_ref2, _excluded);\n  extend({\n    MeshRefractionMaterial: MeshRefractionMaterial$1\n  });\n  const material = useRef(null);\n  const {\n    size\n  } = useThree();\n  const defines = useMemo(() => {\n    var _ref, _envMap$image$;\n    const temp = {};\n    // Sampler2D and SamplerCube need different defines\n    const isCubeMap = isCubeTexture(envMap);\n    const w = (_ref = isCubeMap ? (_envMap$image$ = envMap.image[0]) == null ? void 0 : _envMap$image$.width : envMap.image.width) !== null && _ref !== void 0 ? _ref : 1024;\n    const cubeSize = w / 4;\n    const _lodMax = Math.floor(Math.log2(cubeSize));\n    const _cubeSize = Math.pow(2, _lodMax);\n    const width = 3 * Math.max(_cubeSize, 16 * 7);\n    const height = 4 * _cubeSize;\n    if (isCubeMap) temp.ENVMAP_TYPE_CUBEM = '';\n    temp.CUBEUV_TEXEL_WIDTH = \"\".concat(1.0 / width);\n    temp.CUBEUV_TEXEL_HEIGHT = \"\".concat(1.0 / height);\n    temp.CUBEUV_MAX_MIP = \"\".concat(_lodMax, \".0\");\n    // Add defines from chromatic aberration\n    if (aberrationStrength > 0) temp.CHROMATIC_ABERRATIONS = '';\n    if (fastChroma) temp.FAST_CHROMA = '';\n    return temp;\n  }, [aberrationStrength, fastChroma]);\n  useLayoutEffect(() => {\n    var _material$current;\n    // Get the geometry of this materials parent\n    const geometry = (_material$current = material.current) == null || (_material$current = _material$current.__r3f) == null || (_material$current = _material$current.parent) == null || (_material$current = _material$current.object) == null ? void 0 : _material$current.geometry;\n    // Update the BVH\n    if (geometry) {\n      material.current.bvh = new MeshBVHUniformStruct();\n      material.current.bvh.updateFrom(new MeshBVH(geometry.clone().toNonIndexed(), {\n        strategy: SAH\n      }));\n    }\n  }, []);\n  useFrame(_ref3 => {\n    let {\n      camera\n    } = _ref3;\n    material.current.viewMatrixInverse = camera.matrixWorld;\n    material.current.projectionMatrixInverse = camera.projectionMatrixInverse;\n  });\n  return /*#__PURE__*/React.createElement(\"meshRefractionMaterial\", _extends({\n    // @ts-ignore\n    key: JSON.stringify(defines)\n    // @ts-ignore\n    ,\n\n    defines: defines,\n    ref: material,\n    resolution: [size.width, size.height],\n    aberrationStrength: aberrationStrength,\n    envMap: envMap\n  }, props));\n}\nexport { MeshRefractionMaterial };","map":{"version":3,"names":["_extends","React","useRef","useMemo","useLayoutEffect","extend","useThree","useFrame","MeshBVHUniformStruct","MeshBVH","SAH","MeshRefractionMaterial","MeshRefractionMaterial$1","isCubeTexture","def","_ref2","aberrationStrength","fastChroma","envMap","props","_objectWithoutProperties","_excluded","material","size","defines","_ref","_envMap$image$","temp","isCubeMap","w","image","width","cubeSize","_lodMax","Math","floor","log2","_cubeSize","pow","max","height","ENVMAP_TYPE_CUBEM","CUBEUV_TEXEL_WIDTH","concat","CUBEUV_TEXEL_HEIGHT","CUBEUV_MAX_MIP","CHROMATIC_ABERRATIONS","FAST_CHROMA","_material$current","geometry","current","__r3f","parent","object","bvh","updateFrom","clone","toNonIndexed","strategy","_ref3","camera","viewMatrixInverse","matrixWorld","projectionMatrixInverse","createElement","key","JSON","stringify","ref","resolution"],"sources":["C:/Users/waleed/Desktop/node_modules/@react-three/drei/core/MeshRefractionMaterial.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useRef, useMemo, useLayoutEffect } from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { MeshBVHUniformStruct, MeshBVH, SAH } from 'three-mesh-bvh';\nimport { MeshRefractionMaterial as MeshRefractionMaterial$1 } from '../materials/MeshRefractionMaterial.js';\n\nconst isCubeTexture = def => def && def.isCubeTexture;\nfunction MeshRefractionMaterial({\n  aberrationStrength = 0,\n  fastChroma = true,\n  envMap,\n  ...props\n}) {\n  extend({\n    MeshRefractionMaterial: MeshRefractionMaterial$1\n  });\n  const material = useRef(null);\n  const {\n    size\n  } = useThree();\n  const defines = useMemo(() => {\n    var _ref, _envMap$image$;\n    const temp = {};\n    // Sampler2D and SamplerCube need different defines\n    const isCubeMap = isCubeTexture(envMap);\n    const w = (_ref = isCubeMap ? (_envMap$image$ = envMap.image[0]) == null ? void 0 : _envMap$image$.width : envMap.image.width) !== null && _ref !== void 0 ? _ref : 1024;\n    const cubeSize = w / 4;\n    const _lodMax = Math.floor(Math.log2(cubeSize));\n    const _cubeSize = Math.pow(2, _lodMax);\n    const width = 3 * Math.max(_cubeSize, 16 * 7);\n    const height = 4 * _cubeSize;\n    if (isCubeMap) temp.ENVMAP_TYPE_CUBEM = '';\n    temp.CUBEUV_TEXEL_WIDTH = `${1.0 / width}`;\n    temp.CUBEUV_TEXEL_HEIGHT = `${1.0 / height}`;\n    temp.CUBEUV_MAX_MIP = `${_lodMax}.0`;\n    // Add defines from chromatic aberration\n    if (aberrationStrength > 0) temp.CHROMATIC_ABERRATIONS = '';\n    if (fastChroma) temp.FAST_CHROMA = '';\n    return temp;\n  }, [aberrationStrength, fastChroma]);\n  useLayoutEffect(() => {\n    var _material$current;\n    // Get the geometry of this materials parent\n    const geometry = (_material$current = material.current) == null || (_material$current = _material$current.__r3f) == null || (_material$current = _material$current.parent) == null || (_material$current = _material$current.object) == null ? void 0 : _material$current.geometry;\n    // Update the BVH\n    if (geometry) {\n      material.current.bvh = new MeshBVHUniformStruct();\n      material.current.bvh.updateFrom(new MeshBVH(geometry.clone().toNonIndexed(), {\n        strategy: SAH\n      }));\n    }\n  }, []);\n  useFrame(({\n    camera\n  }) => {\n    material.current.viewMatrixInverse = camera.matrixWorld;\n    material.current.projectionMatrixInverse = camera.projectionMatrixInverse;\n  });\n  return /*#__PURE__*/React.createElement(\"meshRefractionMaterial\", _extends({\n    // @ts-ignore\n    key: JSON.stringify(defines)\n    // @ts-ignore\n    ,\n    defines: defines,\n    ref: material,\n    resolution: [size.width, size.height],\n    aberrationStrength: aberrationStrength,\n    envMap: envMap\n  }, props));\n}\n\nexport { MeshRefractionMaterial };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}