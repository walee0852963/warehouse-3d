{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/waleed/Desktop/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"children\", \"material\", \"texture\", \"range\", \"limit\", \"frustumCulled\"],\n  _excluded2 = [\"opacity\", \"speed\", \"bounds\", \"segments\", \"color\", \"fade\", \"volume\", \"smallestVolume\", \"distribute\", \"growth\", \"concentrate\", \"seed\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { REVISION, Quaternion, Vector3, DynamicDrawUsage, MeshLambertMaterial, Matrix4, Color } from 'three';\nimport { extend, useFrame, applyProps } from '@react-three/fiber';\nimport { useTexture } from './Texture.js';\nimport { setUpdateRange } from '../helpers/deprecated.js';\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\nconst parentMatrix = /* @__PURE__ */new Matrix4();\nconst translation = /* @__PURE__ */new Vector3();\nconst rotation = /* @__PURE__ */new Quaternion();\nconst cpos = /* @__PURE__ */new Vector3();\nconst cquat = /* @__PURE__ */new Quaternion();\nconst scale = /* @__PURE__ */new Vector3();\nconst context = /* @__PURE__ */React.createContext(null);\nconst Clouds = /* @__PURE__ */React.forwardRef((_ref, fref) => {\n  let {\n      children,\n      material = MeshLambertMaterial,\n      texture = CLOUD_URL,\n      range,\n      limit = 200,\n      frustumCulled\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _image$width, _image$height;\n  const CloudMaterial = React.useMemo(() => {\n    return class extends material {\n      constructor() {\n        super();\n        const opaque_fragment = parseInt(REVISION.replace(/\\D+/g, '')) >= 154 ? 'opaque_fragment' : 'output_fragment';\n        this.onBeforeCompile = shader => {\n          shader.vertexShader = \"attribute float cloudOpacity;\\n               varying float vOpacity;\\n              \" + shader.vertexShader.replace('#include <fog_vertex>', \"#include <fog_vertex>\\n                 vOpacity = cloudOpacity;\\n                \");\n          shader.fragmentShader = \"varying float vOpacity;\\n              \" + shader.fragmentShader.replace(\"#include <\".concat(opaque_fragment, \">\"), \"#include <\".concat(opaque_fragment, \">\\n                 gl_FragColor = vec4(outgoingLight, diffuseColor.a * vOpacity);\\n                \"));\n        };\n      }\n    };\n  }, [material]);\n  extend({\n    CloudMaterial\n  });\n  const instance = React.useRef(null);\n  const clouds = React.useRef([]);\n  const opacities = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => 1)), [limit]);\n  const colors = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => [1, 1, 1]).flat()), [limit]);\n  const cloudTexture = useTexture(texture);\n  let t = 0;\n  let index = 0;\n  let config;\n  const qat = new Quaternion();\n  const dir = new Vector3(0, 0, 1);\n  const pos = new Vector3();\n  useFrame((state, delta) => {\n    t = state.clock.elapsedTime;\n    parentMatrix.copy(instance.current.matrixWorld).invert();\n    state.camera.matrixWorld.decompose(cpos, cquat, scale);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      config.ref.current.matrixWorld.decompose(translation, rotation, scale);\n      translation.add(pos.copy(config.position).applyQuaternion(rotation).multiply(scale));\n      rotation.copy(cquat).multiply(qat.setFromAxisAngle(dir, config.rotation += delta * config.rotationFactor));\n      scale.multiplyScalar(config.volume + (1 + Math.sin(t * config.density * config.speed)) / 2 * config.growth);\n      config.matrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n      config.dist = translation.distanceTo(cpos);\n    }\n\n    // Depth-sort. Instances have no specific draw order, w/o sorting z would be random\n    clouds.current.sort((a, b) => b.dist - a.dist);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      opacities[index] = config.opacity * (config.dist < config.fade - 1 ? config.dist / config.fade : 1);\n      instance.current.setMatrixAt(index, config.matrix);\n      instance.current.setColorAt(index, config.color);\n    }\n\n    // Update instance\n    instance.current.geometry.attributes.cloudOpacity.needsUpdate = true;\n    instance.current.instanceMatrix.needsUpdate = true;\n    if (instance.current.instanceColor) instance.current.instanceColor.needsUpdate = true;\n  });\n  React.useLayoutEffect(() => {\n    const count = Math.min(limit, range !== undefined ? range : limit, clouds.current.length);\n    instance.current.count = count;\n    setUpdateRange(instance.current.instanceMatrix, {\n      start: 0,\n      count: count * 16\n    });\n    if (instance.current.instanceColor) {\n      setUpdateRange(instance.current.instanceColor, {\n        start: 0,\n        count: count * 3\n      });\n    }\n    setUpdateRange(instance.current.geometry.attributes.cloudOpacity, {\n      start: 0,\n      count: count\n    });\n  });\n  let imageBounds = [(_image$width = cloudTexture.image.width) !== null && _image$width !== void 0 ? _image$width : 1, (_image$height = cloudTexture.image.height) !== null && _image$height !== void 0 ? _image$height : 1];\n  const max = Math.max(imageBounds[0], imageBounds[1]);\n  imageBounds = [imageBounds[0] / max, imageBounds[1] / max];\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: fref\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: clouds\n  }, children, /*#__PURE__*/React.createElement(\"instancedMesh\", {\n    matrixAutoUpdate: false,\n    ref: instance,\n    args: [null, null, limit],\n    frustumCulled: frustumCulled\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"instanceColor\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [...imageBounds]\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"attributes-cloudOpacity\",\n    args: [opacities, 1]\n  })), /*#__PURE__*/React.createElement(\"cloudMaterial\", {\n    key: material.name,\n    map: cloudTexture,\n    transparent: true,\n    depthWrite: false\n  }))));\n});\nconst CloudInstance = /* @__PURE__ */React.forwardRef((_ref2, fref) => {\n  let {\n      opacity = 1,\n      speed = 0,\n      bounds = [5, 1, 1],\n      segments = 20,\n      color = '#ffffff',\n      fade = 10,\n      volume = 6,\n      smallestVolume = 0.25,\n      distribute = null,\n      growth = 4,\n      concentrate = 'inside',\n      seed = Math.random()\n    } = _ref2,\n    props = _objectWithoutProperties(_ref2, _excluded2);\n  function random() {\n    const x = Math.sin(seed++) * 10000;\n    return x - Math.floor(x);\n  }\n  const parent = React.useContext(context);\n  const ref = React.useRef(null);\n  const uuid = React.useId();\n  const clouds = React.useMemo(() => {\n    return [...new Array(segments)].map((_, index) => ({\n      segments,\n      bounds: new Vector3(1, 1, 1),\n      position: new Vector3(),\n      uuid,\n      index,\n      ref,\n      dist: 0,\n      matrix: new Matrix4(),\n      color: new Color(),\n      rotation: index * (Math.PI / segments)\n    }));\n  }, [segments, uuid]);\n  React.useLayoutEffect(() => {\n    clouds.forEach((cloud, index) => {\n      applyProps(cloud, {\n        volume,\n        color,\n        speed,\n        growth,\n        opacity,\n        fade,\n        bounds,\n        density: Math.max(0.5, random()),\n        rotationFactor: Math.max(0.2, 0.5 * random()) * speed\n      });\n      // Only distribute randomly if there are multiple segments\n\n      const distributed = distribute == null ? void 0 : distribute(cloud, index);\n      if (distributed || segments > 1) {\n        var _distributed$point;\n        cloud.position.copy(cloud.bounds).multiply((_distributed$point = distributed == null ? void 0 : distributed.point) !== null && _distributed$point !== void 0 ? _distributed$point : {\n          x: random() * 2 - 1,\n          y: random() * 2 - 1,\n          z: random() * 2 - 1\n        });\n      }\n      const xDiff = Math.abs(cloud.position.x);\n      const yDiff = Math.abs(cloud.position.y);\n      const zDiff = Math.abs(cloud.position.z);\n      const max = Math.max(xDiff, yDiff, zDiff);\n      cloud.length = 1;\n      if (xDiff === max) cloud.length -= xDiff / cloud.bounds.x;\n      if (yDiff === max) cloud.length -= yDiff / cloud.bounds.y;\n      if (zDiff === max) cloud.length -= zDiff / cloud.bounds.z;\n      cloud.volume = ((distributed == null ? void 0 : distributed.volume) !== undefined ? distributed.volume : Math.max(Math.max(0, smallestVolume), concentrate === 'random' ? random() : concentrate === 'inside' ? cloud.length : 1 - cloud.length)) * volume;\n    });\n  }, [concentrate, bounds, fade, color, opacity, growth, volume, seed, segments, speed]);\n  React.useLayoutEffect(() => {\n    const temp = clouds;\n    parent.current = [...parent.current, ...temp];\n    return () => {\n      parent.current = parent.current.filter(item => item.uuid !== uuid);\n    };\n  }, [clouds]);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n});\nconst Cloud = /* @__PURE__ */React.forwardRef((props, fref) => {\n  const parent = React.useContext(context);\n  if (parent) return /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props));\n  return /*#__PURE__*/React.createElement(Clouds, null, /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props)));\n});\nexport { Cloud, CloudInstance, Clouds };","map":{"version":3,"names":["_extends","React","REVISION","Quaternion","Vector3","DynamicDrawUsage","MeshLambertMaterial","Matrix4","Color","extend","useFrame","applyProps","useTexture","setUpdateRange","CLOUD_URL","parentMatrix","translation","rotation","cpos","cquat","scale","context","createContext","Clouds","forwardRef","_ref","fref","children","material","texture","range","limit","frustumCulled","props","_objectWithoutProperties","_excluded","_image$width","_image$height","CloudMaterial","useMemo","constructor","opaque_fragment","parseInt","replace","onBeforeCompile","shader","vertexShader","fragmentShader","concat","instance","useRef","clouds","opacities","Float32Array","Array","from","length","colors","flat","cloudTexture","t","index","config","qat","dir","pos","state","delta","clock","elapsedTime","copy","current","matrixWorld","invert","camera","decompose","ref","add","position","applyQuaternion","multiply","setFromAxisAngle","rotationFactor","multiplyScalar","volume","Math","sin","density","speed","growth","matrix","compose","premultiply","dist","distanceTo","sort","a","b","opacity","fade","setMatrixAt","setColorAt","color","geometry","attributes","cloudOpacity","needsUpdate","instanceMatrix","instanceColor","useLayoutEffect","count","min","undefined","start","imageBounds","image","width","height","max","createElement","Provider","value","matrixAutoUpdate","args","usage","attach","key","name","map","transparent","depthWrite","CloudInstance","_ref2","bounds","segments","smallestVolume","distribute","concentrate","seed","random","_excluded2","x","floor","parent","useContext","uuid","useId","_","PI","forEach","cloud","distributed","_distributed$point","point","y","z","xDiff","abs","yDiff","zDiff","temp","filter","item","useImperativeHandle","Cloud"],"sources":["C:/Users/waleed/Desktop/node_modules/@react-three/drei/core/Cloud.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { REVISION, Quaternion, Vector3, DynamicDrawUsage, MeshLambertMaterial, Matrix4, Color } from 'three';\nimport { extend, useFrame, applyProps } from '@react-three/fiber';\nimport { useTexture } from './Texture.js';\nimport { setUpdateRange } from '../helpers/deprecated.js';\n\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\nconst parentMatrix = /* @__PURE__ */new Matrix4();\nconst translation = /* @__PURE__ */new Vector3();\nconst rotation = /* @__PURE__ */new Quaternion();\nconst cpos = /* @__PURE__ */new Vector3();\nconst cquat = /* @__PURE__ */new Quaternion();\nconst scale = /* @__PURE__ */new Vector3();\nconst context = /* @__PURE__ */React.createContext(null);\nconst Clouds = /* @__PURE__ */React.forwardRef(({\n  children,\n  material = MeshLambertMaterial,\n  texture = CLOUD_URL,\n  range,\n  limit = 200,\n  frustumCulled,\n  ...props\n}, fref) => {\n  var _image$width, _image$height;\n  const CloudMaterial = React.useMemo(() => {\n    return class extends material {\n      constructor() {\n        super();\n        const opaque_fragment = parseInt(REVISION.replace(/\\D+/g, '')) >= 154 ? 'opaque_fragment' : 'output_fragment';\n        this.onBeforeCompile = shader => {\n          shader.vertexShader = `attribute float cloudOpacity;\n               varying float vOpacity;\n              ` + shader.vertexShader.replace('#include <fog_vertex>', `#include <fog_vertex>\n                 vOpacity = cloudOpacity;\n                `);\n          shader.fragmentShader = `varying float vOpacity;\n              ` + shader.fragmentShader.replace(`#include <${opaque_fragment}>`, `#include <${opaque_fragment}>\n                 gl_FragColor = vec4(outgoingLight, diffuseColor.a * vOpacity);\n                `);\n        };\n      }\n    };\n  }, [material]);\n  extend({\n    CloudMaterial\n  });\n  const instance = React.useRef(null);\n  const clouds = React.useRef([]);\n  const opacities = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => 1)), [limit]);\n  const colors = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => [1, 1, 1]).flat()), [limit]);\n  const cloudTexture = useTexture(texture);\n  let t = 0;\n  let index = 0;\n  let config;\n  const qat = new Quaternion();\n  const dir = new Vector3(0, 0, 1);\n  const pos = new Vector3();\n  useFrame((state, delta) => {\n    t = state.clock.elapsedTime;\n    parentMatrix.copy(instance.current.matrixWorld).invert();\n    state.camera.matrixWorld.decompose(cpos, cquat, scale);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      config.ref.current.matrixWorld.decompose(translation, rotation, scale);\n      translation.add(pos.copy(config.position).applyQuaternion(rotation).multiply(scale));\n      rotation.copy(cquat).multiply(qat.setFromAxisAngle(dir, config.rotation += delta * config.rotationFactor));\n      scale.multiplyScalar(config.volume + (1 + Math.sin(t * config.density * config.speed)) / 2 * config.growth);\n      config.matrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n      config.dist = translation.distanceTo(cpos);\n    }\n\n    // Depth-sort. Instances have no specific draw order, w/o sorting z would be random\n    clouds.current.sort((a, b) => b.dist - a.dist);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      opacities[index] = config.opacity * (config.dist < config.fade - 1 ? config.dist / config.fade : 1);\n      instance.current.setMatrixAt(index, config.matrix);\n      instance.current.setColorAt(index, config.color);\n    }\n\n    // Update instance\n    instance.current.geometry.attributes.cloudOpacity.needsUpdate = true;\n    instance.current.instanceMatrix.needsUpdate = true;\n    if (instance.current.instanceColor) instance.current.instanceColor.needsUpdate = true;\n  });\n  React.useLayoutEffect(() => {\n    const count = Math.min(limit, range !== undefined ? range : limit, clouds.current.length);\n    instance.current.count = count;\n    setUpdateRange(instance.current.instanceMatrix, {\n      start: 0,\n      count: count * 16\n    });\n    if (instance.current.instanceColor) {\n      setUpdateRange(instance.current.instanceColor, {\n        start: 0,\n        count: count * 3\n      });\n    }\n    setUpdateRange(instance.current.geometry.attributes.cloudOpacity, {\n      start: 0,\n      count: count\n    });\n  });\n  let imageBounds = [(_image$width = cloudTexture.image.width) !== null && _image$width !== void 0 ? _image$width : 1, (_image$height = cloudTexture.image.height) !== null && _image$height !== void 0 ? _image$height : 1];\n  const max = Math.max(imageBounds[0], imageBounds[1]);\n  imageBounds = [imageBounds[0] / max, imageBounds[1] / max];\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: fref\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: clouds\n  }, children, /*#__PURE__*/React.createElement(\"instancedMesh\", {\n    matrixAutoUpdate: false,\n    ref: instance,\n    args: [null, null, limit],\n    frustumCulled: frustumCulled\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"instanceColor\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [...imageBounds]\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"attributes-cloudOpacity\",\n    args: [opacities, 1]\n  })), /*#__PURE__*/React.createElement(\"cloudMaterial\", {\n    key: material.name,\n    map: cloudTexture,\n    transparent: true,\n    depthWrite: false\n  }))));\n});\nconst CloudInstance = /* @__PURE__ */React.forwardRef(({\n  opacity = 1,\n  speed = 0,\n  bounds = [5, 1, 1],\n  segments = 20,\n  color = '#ffffff',\n  fade = 10,\n  volume = 6,\n  smallestVolume = 0.25,\n  distribute = null,\n  growth = 4,\n  concentrate = 'inside',\n  seed = Math.random(),\n  ...props\n}, fref) => {\n  function random() {\n    const x = Math.sin(seed++) * 10000;\n    return x - Math.floor(x);\n  }\n  const parent = React.useContext(context);\n  const ref = React.useRef(null);\n  const uuid = React.useId();\n  const clouds = React.useMemo(() => {\n    return [...new Array(segments)].map((_, index) => ({\n      segments,\n      bounds: new Vector3(1, 1, 1),\n      position: new Vector3(),\n      uuid,\n      index,\n      ref,\n      dist: 0,\n      matrix: new Matrix4(),\n      color: new Color(),\n      rotation: index * (Math.PI / segments)\n    }));\n  }, [segments, uuid]);\n  React.useLayoutEffect(() => {\n    clouds.forEach((cloud, index) => {\n      applyProps(cloud, {\n        volume,\n        color,\n        speed,\n        growth,\n        opacity,\n        fade,\n        bounds,\n        density: Math.max(0.5, random()),\n        rotationFactor: Math.max(0.2, 0.5 * random()) * speed\n      });\n      // Only distribute randomly if there are multiple segments\n\n      const distributed = distribute == null ? void 0 : distribute(cloud, index);\n      if (distributed || segments > 1) {\n        var _distributed$point;\n        cloud.position.copy(cloud.bounds).multiply((_distributed$point = distributed == null ? void 0 : distributed.point) !== null && _distributed$point !== void 0 ? _distributed$point : {\n          x: random() * 2 - 1,\n          y: random() * 2 - 1,\n          z: random() * 2 - 1\n        });\n      }\n      const xDiff = Math.abs(cloud.position.x);\n      const yDiff = Math.abs(cloud.position.y);\n      const zDiff = Math.abs(cloud.position.z);\n      const max = Math.max(xDiff, yDiff, zDiff);\n      cloud.length = 1;\n      if (xDiff === max) cloud.length -= xDiff / cloud.bounds.x;\n      if (yDiff === max) cloud.length -= yDiff / cloud.bounds.y;\n      if (zDiff === max) cloud.length -= zDiff / cloud.bounds.z;\n      cloud.volume = ((distributed == null ? void 0 : distributed.volume) !== undefined ? distributed.volume : Math.max(Math.max(0, smallestVolume), concentrate === 'random' ? random() : concentrate === 'inside' ? cloud.length : 1 - cloud.length)) * volume;\n    });\n  }, [concentrate, bounds, fade, color, opacity, growth, volume, seed, segments, speed]);\n  React.useLayoutEffect(() => {\n    const temp = clouds;\n    parent.current = [...parent.current, ...temp];\n    return () => {\n      parent.current = parent.current.filter(item => item.uuid !== uuid);\n    };\n  }, [clouds]);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n});\nconst Cloud = /* @__PURE__ */React.forwardRef((props, fref) => {\n  const parent = React.useContext(context);\n  if (parent) return /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props));\n  return /*#__PURE__*/React.createElement(Clouds, null, /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props)));\n});\n\nexport { Cloud, CloudInstance, Clouds };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}