{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/waleed/Desktop/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/Users/waleed/Desktop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nconst _excluded = [\"params\"],\n  _excluded2 = [\"events\", \"size\"];\nimport * as React from 'react';\nimport { DefaultEventPriority, ContinuousEventPriority, DiscreteEventPriority, ConcurrentRoot } from 'react-reconciler/constants';\nimport * as THREE from 'three';\nimport { createWithEqualityFn } from 'zustand/traditional';\nimport { suspend, preload, clear } from 'suspend-react';\nimport Reconciler from 'react-reconciler';\nimport { unstable_scheduleCallback, unstable_IdlePriority } from 'scheduler';\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useFiber, useContextBridge, traverseFiber } from 'its-fine';\nvar threeTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null\n});\n\n/**\r\n * Returns the instance's initial (outmost) root.\r\n */\nfunction findInitialRoot(instance) {\n  let root = instance.root;\n  while (root.getState().previousRoot) root = root.getState().previousRoot;\n  return root;\n}\n/**\r\n * Safely flush async effects when testing, simulating a legacy root.\r\n * @deprecated Import from React instead. import { act } from 'react'\r\n */\n// Reference with computed key to break Webpack static analysis\n// https://github.com/webpack/webpack/issues/14814\nconst act = React['act' + ''];\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\nconst isRef = obj => obj && obj.hasOwnProperty('current');\nconst isColorRepresentation = value => value != null && (typeof value === 'string' || typeof value === 'number' || value.isColor);\n\n/**\r\n * An SSR-friendly useLayoutEffect.\r\n *\r\n * React currently throws a warning when using useLayoutEffect on the server.\r\n * To get around it, we can conditionally useEffect on the server (no-op) and\r\n * useLayoutEffect elsewhere.\r\n *\r\n * @see https://github.com/facebook/react/issues/14927\r\n */\nconst useIsomorphicLayoutEffect = /* @__PURE__ */((_window$document, _window$navigator) => typeof window !== 'undefined' && (((_window$document = window.document) == null ? void 0 : _window$document.createElement) || ((_window$navigator = window.navigator) == null ? void 0 : _window$navigator.product) === 'ReactNative'))() ? React.useLayoutEffect : React.useEffect;\nfunction useMutableCallback(fn) {\n  const ref = React.useRef(fn);\n  useIsomorphicLayoutEffect(() => void (ref.current = fn), [fn]);\n  return ref;\n}\n/**\r\n * Bridges renderer Context and StrictMode from a primary renderer.\r\n */\nfunction useBridge() {\n  const fiber = useFiber();\n  const ContextBridge = useContextBridge();\n  return React.useMemo(() => _ref => {\n    let {\n      children\n    } = _ref;\n    const strict = !!traverseFiber(fiber, true, node => node.type === React.StrictMode);\n    const Root = strict ? React.StrictMode : React.Fragment;\n    return /*#__PURE__*/jsx(Root, {\n      children: /*#__PURE__*/jsx(ContextBridge, {\n        children: children\n      })\n    });\n  }, [fiber, ContextBridge]);\n}\nfunction Block(_ref2) {\n  let {\n    set\n  } = _ref2;\n  useIsomorphicLayoutEffect(() => {\n    set(new Promise(() => null));\n    return () => set(false);\n  }, [set]);\n  return null;\n}\n\n// NOTE: static members get down-level transpiled to mutations which break tree-shaking\nconst ErrorBoundary = /* @__PURE__ */(_ErrorBoundary => (_ErrorBoundary = class ErrorBoundary extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      error: false\n    };\n  }\n  componentDidCatch(err) {\n    this.props.set(err);\n  }\n  render() {\n    return this.state.error ? null : this.props.children;\n  }\n}, _ErrorBoundary.getDerivedStateFromError = () => ({\n  error: true\n}), _ErrorBoundary))();\nfunction calculateDpr(dpr) {\n  var _window$devicePixelRa;\n  // Err on the side of progress by assuming 2x dpr if we can't detect it\n  // This will happen in workers where window is defined but dpr isn't.\n  const target = typeof window !== 'undefined' ? (_window$devicePixelRa = window.devicePixelRatio) != null ? _window$devicePixelRa : 2 : 1;\n  return Array.isArray(dpr) ? Math.min(Math.max(dpr[0], target), dpr[1]) : dpr;\n}\n\n/**\r\n * Returns instance root state\r\n */\nfunction getRootState(obj) {\n  var _r3f;\n  return (_r3f = obj.__r3f) == null ? void 0 : _r3f.root.getState();\n}\n// A collection of compare functions\nconst is = {\n  obj: a => a === Object(a) && !is.arr(a) && typeof a !== 'function',\n  fun: a => typeof a === 'function',\n  str: a => typeof a === 'string',\n  num: a => typeof a === 'number',\n  boo: a => typeof a === 'boolean',\n  und: a => a === void 0,\n  nul: a => a === null,\n  arr: a => Array.isArray(a),\n  equ(a, b) {\n    let {\n      arrays = 'shallow',\n      objects = 'reference',\n      strict = true\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    // Wrong type or one of the two undefined, doesn't match\n    if (typeof a !== typeof b || !!a !== !!b) return false;\n    // Atomic, just compare a against b\n    if (is.str(a) || is.num(a) || is.boo(a)) return a === b;\n    const isObj = is.obj(a);\n    if (isObj && objects === 'reference') return a === b;\n    const isArr = is.arr(a);\n    if (isArr && arrays === 'reference') return a === b;\n    // Array or Object, shallow compare first to see if it's a match\n    if ((isArr || isObj) && a === b) return true;\n    // Last resort, go through keys\n    let i;\n    // Check if a has all the keys of b\n    for (i in a) if (!(i in b)) return false;\n    // Check if values between keys match\n    if (isObj && arrays === 'shallow' && objects === 'shallow') {\n      for (i in strict ? b : a) if (!is.equ(a[i], b[i], {\n        strict,\n        objects: 'reference'\n      })) return false;\n    } else {\n      for (i in strict ? b : a) if (a[i] !== b[i]) return false;\n    }\n    // If i is undefined\n    if (is.und(i)) {\n      // If both arrays are empty we consider them equal\n      if (isArr && a.length === 0 && b.length === 0) return true;\n      // If both objects are empty we consider them equal\n      if (isObj && Object.keys(a).length === 0 && Object.keys(b).length === 0) return true;\n      // Otherwise match them by value\n      if (a !== b) return false;\n    }\n    return true;\n  }\n};\n\n// Collects nodes and materials from a THREE.Object3D\nfunction buildGraph(object) {\n  const data = {\n    nodes: {},\n    materials: {},\n    meshes: {}\n  };\n  if (object) {\n    object.traverse(obj => {\n      if (obj.name) data.nodes[obj.name] = obj;\n      if (obj.material && !data.materials[obj.material.name]) data.materials[obj.material.name] = obj.material;\n      if (obj.isMesh && !data.meshes[obj.name]) data.meshes[obj.name] = obj;\n    });\n  }\n  return data;\n}\n// Disposes an object and all its properties\nfunction dispose(obj) {\n  if (obj.type !== 'Scene') obj.dispose == null ? void 0 : obj.dispose();\n  for (const p in obj) {\n    const prop = obj[p];\n    if ((prop == null ? void 0 : prop.type) !== 'Scene') prop == null ? void 0 : prop.dispose == null ? void 0 : prop.dispose();\n  }\n}\nconst REACT_INTERNAL_PROPS = ['children', 'key', 'ref'];\n\n// Gets only instance props from reconciler fibers\nfunction getInstanceProps(queue) {\n  const props = {};\n  for (const key in queue) {\n    if (!REACT_INTERNAL_PROPS.includes(key)) props[key] = queue[key];\n  }\n  return props;\n}\n\n// Each object in the scene carries a small LocalState descriptor\nfunction prepare(target, root, type, props) {\n  const object = target;\n\n  // Create instance descriptor\n  let instance = object == null ? void 0 : object.__r3f;\n  if (!instance) {\n    instance = {\n      root,\n      type,\n      parent: null,\n      children: [],\n      props: getInstanceProps(props),\n      object,\n      eventCount: 0,\n      handlers: {},\n      isHidden: false\n    };\n    if (object) object.__r3f = instance;\n  }\n  return instance;\n}\nfunction resolve(root, key) {\n  let target = root[key];\n  if (!key.includes('-')) return {\n    root,\n    key,\n    target\n  };\n\n  // Resolve pierced target\n  target = root;\n  for (const part of key.split('-')) {\n    var _target;\n    key = part;\n    root = target;\n    target = (_target = target) == null ? void 0 : _target[key];\n  }\n\n  // TODO: change key to 'foo-bar' if target is undefined?\n\n  return {\n    root,\n    key,\n    target\n  };\n}\n\n// Checks if a dash-cased string ends with an integer\nconst INDEX_REGEX = /-\\d+$/;\nfunction attach(parent, child) {\n  if (is.str(child.props.attach)) {\n    // If attaching into an array (foo-0), create one\n    if (INDEX_REGEX.test(child.props.attach)) {\n      const index = child.props.attach.replace(INDEX_REGEX, '');\n      const {\n        root,\n        key\n      } = resolve(parent.object, index);\n      if (!Array.isArray(root[key])) root[key] = [];\n    }\n    const {\n      root,\n      key\n    } = resolve(parent.object, child.props.attach);\n    child.previousAttach = root[key];\n    root[key] = child.object;\n  } else if (is.fun(child.props.attach)) {\n    child.previousAttach = child.props.attach(parent.object, child.object);\n  }\n}\nfunction detach(parent, child) {\n  if (is.str(child.props.attach)) {\n    const {\n      root,\n      key\n    } = resolve(parent.object, child.props.attach);\n    const previous = child.previousAttach;\n    // When the previous value was undefined, it means the value was never set to begin with\n    if (previous === undefined) delete root[key];\n    // Otherwise set the previous value\n    else root[key] = previous;\n  } else {\n    child.previousAttach == null ? void 0 : child.previousAttach(parent.object, child.object);\n  }\n  delete child.previousAttach;\n}\nconst RESERVED_PROPS = [...REACT_INTERNAL_PROPS,\n// Instance props\n'args', 'dispose', 'attach', 'object', 'onUpdate',\n// Behavior flags\n'dispose'];\nconst MEMOIZED_PROTOTYPES = new Map();\nfunction getMemoizedPrototype(root) {\n  let ctor = MEMOIZED_PROTOTYPES.get(root.constructor);\n  try {\n    if (!ctor) {\n      ctor = new root.constructor();\n      MEMOIZED_PROTOTYPES.set(root.constructor, ctor);\n    }\n  } catch (e) {\n    // ...\n  }\n  return ctor;\n}\n\n// This function prepares a set of changes to be applied to the instance\nfunction diffProps(instance, newProps) {\n  const changedProps = {};\n\n  // Sort through props\n  for (const prop in newProps) {\n    // Skip reserved keys\n    if (RESERVED_PROPS.includes(prop)) continue;\n    // Skip if props match\n    if (is.equ(newProps[prop], instance.props[prop])) continue;\n\n    // Props changed, add them\n    changedProps[prop] = newProps[prop];\n\n    // Reset pierced props\n    for (const other in newProps) {\n      if (other.startsWith(\"\".concat(prop, \"-\"))) changedProps[other] = newProps[other];\n    }\n  }\n\n  // Reset removed props for HMR\n  for (const prop in instance.props) {\n    if (RESERVED_PROPS.includes(prop) || newProps.hasOwnProperty(prop)) continue;\n    const {\n      root,\n      key\n    } = resolve(instance.object, prop);\n\n    // https://github.com/mrdoob/three.js/issues/21209\n    // HMR/fast-refresh relies on the ability to cancel out props, but threejs\n    // has no means to do this. Hence we curate a small collection of value-classes\n    // with their respective constructor/set arguments\n    // For removed props, try to set default values, if possible\n    if (root.constructor && root.constructor.length === 0) {\n      // create a blank slate of the instance and copy the particular parameter.\n      const ctor = getMemoizedPrototype(root);\n      if (!is.und(ctor)) changedProps[key] = ctor[key];\n    } else {\n      // instance does not have constructor, just set it to 0\n      changedProps[key] = 0;\n    }\n  }\n  return changedProps;\n}\n\n// https://github.com/mrdoob/three.js/pull/27042\n// https://github.com/mrdoob/three.js/pull/22748\nconst colorMaps = ['map', 'emissiveMap', 'sheenColorMap', 'specularColorMap', 'envMap'];\nconst EVENT_REGEX = /^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/;\n// This function applies a set of changes to the instance\nfunction applyProps(object, props) {\n  var _instance$object;\n  const instance = object.__r3f;\n  const rootState = instance && findInitialRoot(instance).getState();\n  const prevHandlers = instance == null ? void 0 : instance.eventCount;\n  for (const prop in props) {\n    let value = props[prop];\n\n    // Don't mutate reserved keys\n    if (RESERVED_PROPS.includes(prop)) continue;\n\n    // Deal with pointer events, including removing them if undefined\n    if (instance && EVENT_REGEX.test(prop)) {\n      if (typeof value === 'function') instance.handlers[prop] = value;else delete instance.handlers[prop];\n      instance.eventCount = Object.keys(instance.handlers).length;\n      continue;\n    }\n\n    // Ignore setting undefined props\n    // https://github.com/pmndrs/react-three-fiber/issues/274\n    if (value === undefined) continue;\n    let {\n      root,\n      key,\n      target\n    } = resolve(object, prop);\n\n    // Layers must be written to the mask property\n    if (target instanceof THREE.Layers && value instanceof THREE.Layers) {\n      target.mask = value.mask;\n    }\n    // Set colors if valid color representation for automatic conversion (copy)\n    else if (target instanceof THREE.Color && isColorRepresentation(value)) {\n      target.set(value);\n    }\n    // Copy if properties match signatures and implement math interface (likely read-only)\n    else if (target !== null && typeof target === 'object' && typeof target.set === 'function' && typeof target.copy === 'function' && value != null && value.constructor && target.constructor === value.constructor) {\n      target.copy(value);\n    }\n    // Set array types\n    else if (target !== null && typeof target === 'object' && typeof target.set === 'function' && Array.isArray(value)) {\n      if (typeof target.fromArray === 'function') target.fromArray(value);else target.set(...value);\n    }\n    // Set literal types\n    else if (target !== null && typeof target === 'object' && typeof target.set === 'function' && typeof value === 'number') {\n      // Allow setting array scalars\n      if (typeof target.setScalar === 'function') target.setScalar(value);\n      // Otherwise just set single value\n      else target.set(value);\n    }\n    // Else, just overwrite the value\n    else {\n      var _root$key;\n      root[key] = value;\n\n      // Auto-convert sRGB texture parameters for built-in materials\n      // https://github.com/pmndrs/react-three-fiber/issues/344\n      // https://github.com/mrdoob/three.js/pull/25857\n      if (rootState && !rootState.linear && colorMaps.includes(key) && (_root$key = root[key]) != null && _root$key.isTexture &&\n      // sRGB textures must be RGBA8 since r137 https://github.com/mrdoob/three.js/pull/23129\n      root[key].format === THREE.RGBAFormat && root[key].type === THREE.UnsignedByteType) {\n        // NOTE: this cannot be set from the renderer (e.g. sRGB source textures rendered to P3)\n        root[key].colorSpace = THREE.SRGBColorSpace;\n      }\n    }\n  }\n\n  // Register event handlers\n  if (instance != null && instance.parent && rootState != null && rootState.internal && (_instance$object = instance.object) != null && _instance$object.isObject3D && prevHandlers !== instance.eventCount) {\n    const object = instance.object;\n    // Pre-emptively remove the instance from the interaction manager\n    const index = rootState.internal.interaction.indexOf(object);\n    if (index > -1) rootState.internal.interaction.splice(index, 1);\n    // Add the instance to the interaction manager only when it has handlers\n    if (instance.eventCount && object.raycast !== null) {\n      rootState.internal.interaction.push(object);\n    }\n  }\n\n  // Auto-attach geometries and materials\n  if (instance && instance.props.attach === undefined) {\n    if (instance.object.isBufferGeometry) instance.props.attach = 'geometry';else if (instance.object.isMaterial) instance.props.attach = 'material';\n  }\n\n  // Instance was updated, request a frame\n  if (instance) invalidateInstance(instance);\n  return object;\n}\nfunction invalidateInstance(instance) {\n  var _instance$root;\n  if (!instance.parent) return;\n  instance.props.onUpdate == null ? void 0 : instance.props.onUpdate(instance.object);\n  const state = (_instance$root = instance.root) == null ? void 0 : _instance$root.getState == null ? void 0 : _instance$root.getState();\n  if (state && state.internal.frames === 0) state.invalidate();\n}\nfunction updateCamera(camera, size) {\n  // Do not mess with the camera if it belongs to the user\n  // https://github.com/pmndrs/react-three-fiber/issues/92\n  if (camera.manual) return;\n  if (isOrthographicCamera(camera)) {\n    camera.left = size.width / -2;\n    camera.right = size.width / 2;\n    camera.top = size.height / 2;\n    camera.bottom = size.height / -2;\n  } else {\n    camera.aspect = size.width / size.height;\n  }\n  camera.updateProjectionMatrix();\n}\nconst isObject3D = object => object == null ? void 0 : object.isObject3D;\nfunction makeId(event) {\n  return (event.eventObject || event.object).uuid + '/' + event.index + event.instanceId;\n}\n\n/**\r\n * Release pointer captures.\r\n * This is called by releasePointerCapture in the API, and when an object is removed.\r\n */\nfunction releaseInternalPointerCapture(capturedMap, obj, captures, pointerId) {\n  const captureData = captures.get(obj);\n  if (captureData) {\n    captures.delete(obj);\n    // If this was the last capturing object for this pointer\n    if (captures.size === 0) {\n      capturedMap.delete(pointerId);\n      captureData.target.releasePointerCapture(pointerId);\n    }\n  }\n}\nfunction removeInteractivity(store, object) {\n  const {\n    internal\n  } = store.getState();\n  // Removes every trace of an object from the data store\n  internal.interaction = internal.interaction.filter(o => o !== object);\n  internal.initialHits = internal.initialHits.filter(o => o !== object);\n  internal.hovered.forEach((value, key) => {\n    if (value.eventObject === object || value.object === object) {\n      // Clear out intersects, they are outdated by now\n      internal.hovered.delete(key);\n    }\n  });\n  internal.capturedMap.forEach((captures, pointerId) => {\n    releaseInternalPointerCapture(internal.capturedMap, object, captures, pointerId);\n  });\n}\nfunction createEvents(store) {\n  /** Calculates delta */\n  function calculateDistance(event) {\n    const {\n      internal\n    } = store.getState();\n    const dx = event.offsetX - internal.initialClick[0];\n    const dy = event.offsetY - internal.initialClick[1];\n    return Math.round(Math.sqrt(dx * dx + dy * dy));\n  }\n\n  /** Returns true if an instance has a valid pointer-event registered, this excludes scroll, clicks etc */\n  function filterPointerEvents(objects) {\n    return objects.filter(obj => ['Move', 'Over', 'Enter', 'Out', 'Leave'].some(name => {\n      var _r3f;\n      return (_r3f = obj.__r3f) == null ? void 0 : _r3f.handlers['onPointer' + name];\n    }));\n  }\n  function intersect(event, filter) {\n    const state = store.getState();\n    const duplicates = new Set();\n    const intersections = [];\n    // Allow callers to eliminate event objects\n    const eventsObjects = filter ? filter(state.internal.interaction) : state.internal.interaction;\n    // Reset all raycaster cameras to undefined\n    for (let i = 0; i < eventsObjects.length; i++) {\n      const state = getRootState(eventsObjects[i]);\n      if (state) {\n        state.raycaster.camera = undefined;\n      }\n    }\n    if (!state.previousRoot) {\n      // Make sure root-level pointer and ray are set up\n      state.events.compute == null ? void 0 : state.events.compute(event, state);\n    }\n    function handleRaycast(obj) {\n      const state = getRootState(obj);\n      // Skip event handling when noEvents is set, or when the raycasters camera is null\n      if (!state || !state.events.enabled || state.raycaster.camera === null) return [];\n\n      // When the camera is undefined we have to call the event layers update function\n      if (state.raycaster.camera === undefined) {\n        var _state$previousRoot;\n        state.events.compute == null ? void 0 : state.events.compute(event, state, (_state$previousRoot = state.previousRoot) == null ? void 0 : _state$previousRoot.getState());\n        // If the camera is still undefined we have to skip this layer entirely\n        if (state.raycaster.camera === undefined) state.raycaster.camera = null;\n      }\n\n      // Intersect object by object\n      return state.raycaster.camera ? state.raycaster.intersectObject(obj, true) : [];\n    }\n\n    // Collect events\n    let hits = eventsObjects\n    // Intersect objects\n    .flatMap(handleRaycast)\n    // Sort by event priority and distance\n    .sort((a, b) => {\n      const aState = getRootState(a.object);\n      const bState = getRootState(b.object);\n      if (!aState || !bState) return a.distance - b.distance;\n      return bState.events.priority - aState.events.priority || a.distance - b.distance;\n    })\n    // Filter out duplicates\n    .filter(item => {\n      const id = makeId(item);\n      if (duplicates.has(id)) return false;\n      duplicates.add(id);\n      return true;\n    });\n\n    // https://github.com/mrdoob/three.js/issues/16031\n    // Allow custom userland intersect sort order, this likely only makes sense on the root filter\n    if (state.events.filter) hits = state.events.filter(hits, state);\n\n    // Bubble up the events, find the event source (eventObject)\n    for (const hit of hits) {\n      let eventObject = hit.object;\n      // Bubble event up\n      while (eventObject) {\n        var _r3f2;\n        if ((_r3f2 = eventObject.__r3f) != null && _r3f2.eventCount) intersections.push(_objectSpread(_objectSpread({}, hit), {}, {\n          eventObject\n        }));\n        eventObject = eventObject.parent;\n      }\n    }\n\n    // If the interaction is captured, make all capturing targets part of the intersect.\n    if ('pointerId' in event && state.internal.capturedMap.has(event.pointerId)) {\n      for (let captureData of state.internal.capturedMap.get(event.pointerId).values()) {\n        if (!duplicates.has(makeId(captureData.intersection))) intersections.push(captureData.intersection);\n      }\n    }\n    return intersections;\n  }\n\n  /**  Handles intersections by forwarding them to handlers */\n  function handleIntersects(intersections, event, delta, callback) {\n    // If anything has been found, forward it to the event listeners\n    if (intersections.length) {\n      const localState = {\n        stopped: false\n      };\n      for (const hit of intersections) {\n        let state = getRootState(hit.object);\n\n        // If the object is not managed by R3F, it might be parented to an element which is.\n        // Traverse upwards until we find a managed parent and use its state instead.\n        if (!state) {\n          hit.object.traverseAncestors(obj => {\n            const parentState = getRootState(obj);\n            if (parentState) {\n              state = parentState;\n              return false;\n            }\n          });\n        }\n        if (state) {\n          const {\n            raycaster,\n            pointer,\n            camera,\n            internal\n          } = state;\n          const unprojectedPoint = new THREE.Vector3(pointer.x, pointer.y, 0).unproject(camera);\n          const hasPointerCapture = id => {\n            var _internal$capturedMap, _internal$capturedMap2;\n            return (_internal$capturedMap = (_internal$capturedMap2 = internal.capturedMap.get(id)) == null ? void 0 : _internal$capturedMap2.has(hit.eventObject)) != null ? _internal$capturedMap : false;\n          };\n          const setPointerCapture = id => {\n            const captureData = {\n              intersection: hit,\n              target: event.target\n            };\n            if (internal.capturedMap.has(id)) {\n              // if the pointerId was previously captured, we add the hit to the\n              // event capturedMap.\n              internal.capturedMap.get(id).set(hit.eventObject, captureData);\n            } else {\n              // if the pointerId was not previously captured, we create a map\n              // containing the hitObject, and the hit. hitObject is used for\n              // faster access.\n              internal.capturedMap.set(id, new Map([[hit.eventObject, captureData]]));\n            }\n            event.target.setPointerCapture(id);\n          };\n          const releasePointerCapture = id => {\n            const captures = internal.capturedMap.get(id);\n            if (captures) {\n              releaseInternalPointerCapture(internal.capturedMap, hit.eventObject, captures, id);\n            }\n          };\n\n          // Add native event props\n          let extractEventProps = {};\n          // This iterates over the event's properties including the inherited ones. Native PointerEvents have most of their props as getters which are inherited, but polyfilled PointerEvents have them all as their own properties (i.e. not inherited). We can't use Object.keys() or Object.entries() as they only return \"own\" properties; nor Object.getPrototypeOf(event) as that *doesn't* return \"own\" properties, only inherited ones.\n          for (let prop in event) {\n            let property = event[prop];\n            // Only copy over atomics, leave functions alone as these should be\n            // called as event.nativeEvent.fn()\n            if (typeof property !== 'function') extractEventProps[prop] = property;\n          }\n          let raycastEvent = _objectSpread(_objectSpread(_objectSpread({}, hit), extractEventProps), {}, {\n            pointer,\n            intersections,\n            stopped: localState.stopped,\n            delta,\n            unprojectedPoint,\n            ray: raycaster.ray,\n            camera: camera,\n            // Hijack stopPropagation, which just sets a flag\n            stopPropagation() {\n              // https://github.com/pmndrs/react-three-fiber/issues/596\n              // Events are not allowed to stop propagation if the pointer has been captured\n              const capturesForPointer = 'pointerId' in event && internal.capturedMap.get(event.pointerId);\n\n              // We only authorize stopPropagation...\n              if (\n              // ...if this pointer hasn't been captured\n              !capturesForPointer ||\n              // ... or if the hit object is capturing the pointer\n              capturesForPointer.has(hit.eventObject)) {\n                raycastEvent.stopped = localState.stopped = true;\n                // Propagation is stopped, remove all other hover records\n                // An event handler is only allowed to flush other handlers if it is hovered itself\n                if (internal.hovered.size && Array.from(internal.hovered.values()).find(i => i.eventObject === hit.eventObject)) {\n                  // Objects cannot flush out higher up objects that have already caught the event\n                  const higher = intersections.slice(0, intersections.indexOf(hit));\n                  cancelPointer([...higher, hit]);\n                }\n              }\n            },\n            // there should be a distinction between target and currentTarget\n            target: {\n              hasPointerCapture,\n              setPointerCapture,\n              releasePointerCapture\n            },\n            currentTarget: {\n              hasPointerCapture,\n              setPointerCapture,\n              releasePointerCapture\n            },\n            nativeEvent: event\n          });\n\n          // Call subscribers\n          callback(raycastEvent);\n          // Event bubbling may be interrupted by stopPropagation\n          if (localState.stopped === true) break;\n        }\n      }\n    }\n    return intersections;\n  }\n  function cancelPointer(intersections) {\n    const {\n      internal\n    } = store.getState();\n    for (const hoveredObj of internal.hovered.values()) {\n      // When no objects were hit or the the hovered object wasn't found underneath the cursor\n      // we call onPointerOut and delete the object from the hovered-elements map\n      if (!intersections.length || !intersections.find(hit => hit.object === hoveredObj.object && hit.index === hoveredObj.index && hit.instanceId === hoveredObj.instanceId)) {\n        const eventObject = hoveredObj.eventObject;\n        const instance = eventObject.__r3f;\n        internal.hovered.delete(makeId(hoveredObj));\n        if (instance != null && instance.eventCount) {\n          const handlers = instance.handlers;\n          // Clear out intersects, they are outdated by now\n          const data = _objectSpread(_objectSpread({}, hoveredObj), {}, {\n            intersections\n          });\n          handlers.onPointerOut == null ? void 0 : handlers.onPointerOut(data);\n          handlers.onPointerLeave == null ? void 0 : handlers.onPointerLeave(data);\n        }\n      }\n    }\n  }\n  function pointerMissed(event, objects) {\n    for (let i = 0; i < objects.length; i++) {\n      const instance = objects[i].__r3f;\n      instance == null ? void 0 : instance.handlers.onPointerMissed == null ? void 0 : instance.handlers.onPointerMissed(event);\n    }\n  }\n  function handlePointer(name) {\n    // Deal with cancelation\n    switch (name) {\n      case 'onPointerLeave':\n      case 'onPointerCancel':\n        return () => cancelPointer([]);\n      case 'onLostPointerCapture':\n        return event => {\n          const {\n            internal\n          } = store.getState();\n          if ('pointerId' in event && internal.capturedMap.has(event.pointerId)) {\n            // If the object event interface had onLostPointerCapture, we'd call it here on every\n            // object that's getting removed. We call it on the next frame because onLostPointerCapture\n            // fires before onPointerUp. Otherwise pointerUp would never be called if the event didn't\n            // happen in the object it originated from, leaving components in a in-between state.\n            requestAnimationFrame(() => {\n              // Only release if pointer-up didn't do it already\n              if (internal.capturedMap.has(event.pointerId)) {\n                internal.capturedMap.delete(event.pointerId);\n                cancelPointer([]);\n              }\n            });\n          }\n        };\n    }\n\n    // Any other pointer goes here ...\n    return function handleEvent(event) {\n      const {\n        onPointerMissed,\n        internal\n      } = store.getState();\n\n      // prepareRay(event)\n      internal.lastEvent.current = event;\n\n      // Get fresh intersects\n      const isPointerMove = name === 'onPointerMove';\n      const isClickEvent = name === 'onClick' || name === 'onContextMenu' || name === 'onDoubleClick';\n      const filter = isPointerMove ? filterPointerEvents : undefined;\n      const hits = intersect(event, filter);\n      const delta = isClickEvent ? calculateDistance(event) : 0;\n\n      // Save initial coordinates on pointer-down\n      if (name === 'onPointerDown') {\n        internal.initialClick = [event.offsetX, event.offsetY];\n        internal.initialHits = hits.map(hit => hit.eventObject);\n      }\n\n      // If a click yields no results, pass it back to the user as a miss\n      // Missed events have to come first in order to establish user-land side-effect clean up\n      if (isClickEvent && !hits.length) {\n        if (delta <= 2) {\n          pointerMissed(event, internal.interaction);\n          if (onPointerMissed) onPointerMissed(event);\n        }\n      }\n      // Take care of unhover\n      if (isPointerMove) cancelPointer(hits);\n      function onIntersect(data) {\n        const eventObject = data.eventObject;\n        const instance = eventObject.__r3f;\n\n        // Check presence of handlers\n        if (!(instance != null && instance.eventCount)) return;\n        const handlers = instance.handlers;\n\n        /*\r\n        MAYBE TODO, DELETE IF NOT: \r\n          Check if the object is captured, captured events should not have intersects running in parallel\r\n          But wouldn't it be better to just replace capturedMap with a single entry?\r\n          Also, are we OK with straight up making picking up multiple objects impossible?\r\n          \r\n        const pointerId = (data as ThreeEvent<PointerEvent>).pointerId        \r\n        if (pointerId !== undefined) {\r\n          const capturedMeshSet = internal.capturedMap.get(pointerId)\r\n          if (capturedMeshSet) {\r\n            const captured = capturedMeshSet.get(eventObject)\r\n            if (captured && captured.localState.stopped) return\r\n          }\r\n        }*/\n\n        if (isPointerMove) {\n          // Move event ...\n          if (handlers.onPointerOver || handlers.onPointerEnter || handlers.onPointerOut || handlers.onPointerLeave) {\n            // When enter or out is present take care of hover-state\n            const id = makeId(data);\n            const hoveredItem = internal.hovered.get(id);\n            if (!hoveredItem) {\n              // If the object wasn't previously hovered, book it and call its handler\n              internal.hovered.set(id, data);\n              handlers.onPointerOver == null ? void 0 : handlers.onPointerOver(data);\n              handlers.onPointerEnter == null ? void 0 : handlers.onPointerEnter(data);\n            } else if (hoveredItem.stopped) {\n              // If the object was previously hovered and stopped, we shouldn't allow other items to proceed\n              data.stopPropagation();\n            }\n          }\n          // Call mouse move\n          handlers.onPointerMove == null ? void 0 : handlers.onPointerMove(data);\n        } else {\n          // All other events ...\n          const handler = handlers[name];\n          if (handler) {\n            // Forward all events back to their respective handlers with the exception of click events,\n            // which must use the initial target\n            if (!isClickEvent || internal.initialHits.includes(eventObject)) {\n              // Missed events have to come first\n              pointerMissed(event, internal.interaction.filter(object => !internal.initialHits.includes(object)));\n              // Now call the handler\n              handler(data);\n            }\n          } else {\n            // Trigger onPointerMissed on all elements that have pointer over/out handlers, but not click and weren't hit\n            if (isClickEvent && internal.initialHits.includes(eventObject)) {\n              pointerMissed(event, internal.interaction.filter(object => !internal.initialHits.includes(object)));\n            }\n          }\n        }\n      }\n      handleIntersects(hits, event, delta, onIntersect);\n    };\n  }\n  return {\n    handlePointer\n  };\n}\nconst isRenderer = def => !!(def != null && def.render);\nconst context = /* @__PURE__ */React.createContext(null);\nconst createStore = (invalidate, advance) => {\n  const rootStore = createWithEqualityFn((set, get) => {\n    const position = new THREE.Vector3();\n    const defaultTarget = new THREE.Vector3();\n    const tempTarget = new THREE.Vector3();\n    function getCurrentViewport() {\n      let camera = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : get().camera;\n      let target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultTarget;\n      let size = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : get().size;\n      const {\n        width,\n        height,\n        top,\n        left\n      } = size;\n      const aspect = width / height;\n      if (target.isVector3) tempTarget.copy(target);else tempTarget.set(...target);\n      const distance = camera.getWorldPosition(position).distanceTo(tempTarget);\n      if (isOrthographicCamera(camera)) {\n        return {\n          width: width / camera.zoom,\n          height: height / camera.zoom,\n          top,\n          left,\n          factor: 1,\n          distance,\n          aspect\n        };\n      } else {\n        const fov = camera.fov * Math.PI / 180; // convert vertical fov to radians\n        const h = 2 * Math.tan(fov / 2) * distance; // visible height\n        const w = h * (width / height);\n        return {\n          width: w,\n          height: h,\n          top,\n          left,\n          factor: width / w,\n          distance,\n          aspect\n        };\n      }\n    }\n    let performanceTimeout = undefined;\n    const setPerformanceCurrent = current => set(state => ({\n      performance: _objectSpread(_objectSpread({}, state.performance), {}, {\n        current\n      })\n    }));\n    const pointer = new THREE.Vector2();\n    const rootState = {\n      set,\n      get,\n      // Mock objects that have to be configured\n      gl: null,\n      camera: null,\n      raycaster: null,\n      events: {\n        priority: 1,\n        enabled: true,\n        connected: false\n      },\n      scene: null,\n      xr: null,\n      invalidate: function () {\n        let frames = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return invalidate(get(), frames);\n      },\n      advance: (timestamp, runGlobalEffects) => advance(timestamp, runGlobalEffects, get()),\n      legacy: false,\n      linear: false,\n      flat: false,\n      controls: null,\n      clock: new THREE.Clock(),\n      pointer,\n      mouse: pointer,\n      frameloop: 'always',\n      onPointerMissed: undefined,\n      performance: {\n        current: 1,\n        min: 0.5,\n        max: 1,\n        debounce: 200,\n        regress: () => {\n          const state = get();\n          // Clear timeout\n          if (performanceTimeout) clearTimeout(performanceTimeout);\n          // Set lower bound performance\n          if (state.performance.current !== state.performance.min) setPerformanceCurrent(state.performance.min);\n          // Go back to upper bound performance after a while unless something regresses meanwhile\n          performanceTimeout = setTimeout(() => setPerformanceCurrent(get().performance.max), state.performance.debounce);\n        }\n      },\n      size: {\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0\n      },\n      viewport: {\n        initialDpr: 0,\n        dpr: 0,\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        aspect: 0,\n        distance: 0,\n        factor: 0,\n        getCurrentViewport\n      },\n      setEvents: events => set(state => _objectSpread(_objectSpread({}, state), {}, {\n        events: _objectSpread(_objectSpread({}, state.events), events)\n      })),\n      setSize: function (width, height) {\n        let top = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        let left = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n        const camera = get().camera;\n        const size = {\n          width,\n          height,\n          top,\n          left\n        };\n        set(state => ({\n          size,\n          viewport: _objectSpread(_objectSpread({}, state.viewport), getCurrentViewport(camera, defaultTarget, size))\n        }));\n      },\n      setDpr: dpr => set(state => {\n        const resolved = calculateDpr(dpr);\n        return {\n          viewport: _objectSpread(_objectSpread({}, state.viewport), {}, {\n            dpr: resolved,\n            initialDpr: state.viewport.initialDpr || resolved\n          })\n        };\n      }),\n      setFrameloop: function () {\n        let frameloop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'always';\n        const clock = get().clock;\n\n        // if frameloop === \"never\" clock.elapsedTime is updated using advance(timestamp)\n        clock.stop();\n        clock.elapsedTime = 0;\n        if (frameloop !== 'never') {\n          clock.start();\n          clock.elapsedTime = 0;\n        }\n        set(() => ({\n          frameloop\n        }));\n      },\n      previousRoot: undefined,\n      internal: {\n        // Events\n        interaction: [],\n        hovered: new Map(),\n        subscribers: [],\n        initialClick: [0, 0],\n        initialHits: [],\n        capturedMap: new Map(),\n        lastEvent: /*#__PURE__*/React.createRef(),\n        // Updates\n        active: false,\n        frames: 0,\n        priority: 0,\n        subscribe: (ref, priority, store) => {\n          const internal = get().internal;\n          // If this subscription was given a priority, it takes rendering into its own hands\n          // For that reason we switch off automatic rendering and increase the manual flag\n          // As long as this flag is positive there can be no internal rendering at all\n          // because there could be multiple render subscriptions\n          internal.priority = internal.priority + (priority > 0 ? 1 : 0);\n          internal.subscribers.push({\n            ref,\n            priority,\n            store\n          });\n          // Register subscriber and sort layers from lowest to highest, meaning,\n          // highest priority renders last (on top of the other frames)\n          internal.subscribers = internal.subscribers.sort((a, b) => a.priority - b.priority);\n          return () => {\n            const internal = get().internal;\n            if (internal != null && internal.subscribers) {\n              // Decrease manual flag if this subscription had a priority\n              internal.priority = internal.priority - (priority > 0 ? 1 : 0);\n              // Remove subscriber from list\n              internal.subscribers = internal.subscribers.filter(s => s.ref !== ref);\n            }\n          };\n        }\n      }\n    };\n    return rootState;\n  });\n  const state = rootStore.getState();\n  let oldSize = state.size;\n  let oldDpr = state.viewport.dpr;\n  let oldCamera = state.camera;\n  rootStore.subscribe(() => {\n    const {\n      camera,\n      size,\n      viewport,\n      gl,\n      set\n    } = rootStore.getState();\n\n    // Resize camera and renderer on changes to size and pixelratio\n    if (size.width !== oldSize.width || size.height !== oldSize.height || viewport.dpr !== oldDpr) {\n      oldSize = size;\n      oldDpr = viewport.dpr;\n      // Update camera & renderer\n      updateCamera(camera, size);\n      if (viewport.dpr > 0) gl.setPixelRatio(viewport.dpr);\n      const updateStyle = typeof HTMLCanvasElement !== 'undefined' && gl.domElement instanceof HTMLCanvasElement;\n      gl.setSize(size.width, size.height, updateStyle);\n    }\n\n    // Update viewport once the camera changes\n    if (camera !== oldCamera) {\n      oldCamera = camera;\n      // Update viewport\n      set(state => ({\n        viewport: _objectSpread(_objectSpread({}, state.viewport), state.viewport.getCurrentViewport(camera))\n      }));\n    }\n  });\n\n  // Invalidate on any change\n  rootStore.subscribe(state => invalidate(state));\n\n  // Return root state\n  return rootStore;\n};\n\n/**\r\n * Exposes an object's {@link Instance}.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#useInstanceHandle\r\n *\r\n * **Note**: this is an escape hatch to react-internal fields. Expect this to change significantly between versions.\r\n */\nfunction useInstanceHandle(ref) {\n  const instance = React.useRef(null);\n  React.useImperativeHandle(instance, () => ref.current.__r3f, [ref]);\n  return instance;\n}\n\n/**\r\n * Returns the R3F Canvas' Zustand store. Useful for [transient updates](https://github.com/pmndrs/zustand#transient-updates-for-often-occurring-state-changes).\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#usestore\r\n */\nfunction useStore() {\n  const store = React.useContext(context);\n  if (!store) throw new Error('R3F: Hooks can only be used within the Canvas component!');\n  return store;\n}\n\n/**\r\n * Accesses R3F's internal state, containing renderer, canvas, scene, etc.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#usethree\r\n */\nfunction useThree() {\n  let selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : state => state;\n  let equalityFn = arguments.length > 1 ? arguments[1] : undefined;\n  return useStore()(selector, equalityFn);\n}\n\n/**\r\n * Executes a callback before render in a shared frame loop.\r\n * Can order effects with render priority or manually render with a positive priority.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#useframe\r\n */\nfunction useFrame(callback) {\n  let renderPriority = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const store = useStore();\n  const subscribe = store.getState().internal.subscribe;\n  // Memoize ref\n  const ref = useMutableCallback(callback);\n  // Subscribe on mount, unsubscribe on unmount\n  useIsomorphicLayoutEffect(() => subscribe(ref, renderPriority, store), [renderPriority, subscribe, store]);\n  return null;\n}\n\n/**\r\n * Returns a node graph of an object with named nodes & materials.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#usegraph\r\n */\nfunction useGraph(object) {\n  return React.useMemo(() => buildGraph(object), [object]);\n}\nconst memoizedLoaders = new WeakMap();\nconst isConstructor$1 = value => {\n  var _value$prototype;\n  return typeof value === 'function' && (value == null ? void 0 : (_value$prototype = value.prototype) == null ? void 0 : _value$prototype.constructor) === value;\n};\nfunction loadingFn(extensions, onProgress) {\n  return function (Proto) {\n    let loader;\n\n    // Construct and cache loader if constructor was passed\n    if (isConstructor$1(Proto)) {\n      loader = memoizedLoaders.get(Proto);\n      if (!loader) {\n        loader = new Proto();\n        memoizedLoaders.set(Proto, loader);\n      }\n    } else {\n      loader = Proto;\n    }\n\n    // Apply loader extensions\n    if (extensions) extensions(loader);\n\n    // Go through the urls and load them\n    for (var _len = arguments.length, input = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      input[_key - 1] = arguments[_key];\n    }\n    return Promise.all(input.map(input => new Promise((res, reject) => loader.load(input, data => {\n      if (isObject3D(data == null ? void 0 : data.scene)) Object.assign(data, buildGraph(data.scene));\n      res(data);\n    }, onProgress, error => reject(new Error(\"Could not load \".concat(input, \": \").concat(error == null ? void 0 : error.message)))))));\n  };\n}\n\n/**\r\n * Synchronously loads and caches assets with a three loader.\r\n *\r\n * Note: this hook's caller must be wrapped with `React.Suspense`\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#useloader\r\n */\nfunction useLoader(loader, input, extensions, onProgress) {\n  // Use suspense to load async assets\n  const keys = Array.isArray(input) ? input : [input];\n  const results = suspend(loadingFn(extensions, onProgress), [loader, ...keys], {\n    equal: is.equ\n  });\n  // Return the object(s)\n  return Array.isArray(input) ? results : results[0];\n}\n\n/**\r\n * Preloads an asset into cache as a side-effect.\r\n */\nuseLoader.preload = function (loader, input, extensions) {\n  const keys = Array.isArray(input) ? input : [input];\n  return preload(loadingFn(extensions), [loader, ...keys]);\n};\n\n/**\r\n * Removes a loaded asset from cache.\r\n */\nuseLoader.clear = function (loader, input) {\n  const keys = Array.isArray(input) ? input : [input];\n  return clear([loader, ...keys]);\n};\nfunction createReconciler(config) {\n  const reconciler = Reconciler(config);\n  reconciler.injectIntoDevTools({\n    bundleType: typeof process !== 'undefined' && process.env.NODE_ENV !== 'production' ? 1 : 0,\n    rendererPackageName: '@react-three/fiber',\n    version: React.version\n  });\n  return reconciler;\n}\nconst NoEventPriority = 0;\n\n// TODO: handle constructor overloads\n// https://github.com/pmndrs/react-three-fiber/pull/2931\n// https://github.com/microsoft/TypeScript/issues/37079\n\nconst catalogue = {};\nconst PREFIX_REGEX = /^three(?=[A-Z])/;\nconst toPascalCase = type => \"\".concat(type[0].toUpperCase()).concat(type.slice(1));\nlet i = 0;\nconst isConstructor = object => typeof object === 'function';\nfunction extend(objects) {\n  if (isConstructor(objects)) {\n    const Component = \"\".concat(i++);\n    catalogue[Component] = objects;\n    return Component;\n  } else {\n    Object.assign(catalogue, objects);\n  }\n}\nfunction validateInstance(type, props) {\n  // Get target from catalogue\n  const name = toPascalCase(type);\n  const target = catalogue[name];\n\n  // Validate element target\n  if (type !== 'primitive' && !target) throw new Error(\"R3F: \".concat(name, \" is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively\"));\n\n  // Validate primitives\n  if (type === 'primitive' && !props.object) throw new Error(\"R3F: Primitives without 'object' are invalid!\");\n\n  // Throw if an object or literal was passed for args\n  if (props.args !== undefined && !Array.isArray(props.args)) throw new Error('R3F: The args prop must be an array!');\n}\nfunction createInstance(type, props, root) {\n  var _props$object;\n  // Remove three* prefix from elements if native element not present\n  type = toPascalCase(type) in catalogue ? type : type.replace(PREFIX_REGEX, '');\n  validateInstance(type, props);\n\n  // Regenerate the R3F instance for primitives to simulate a new object\n  if (type === 'primitive' && (_props$object = props.object) != null && _props$object.__r3f) delete props.object.__r3f;\n  return prepare(props.object, root, type, props);\n}\nfunction hideInstance(instance) {\n  if (!instance.isHidden) {\n    var _instance$parent;\n    if (instance.props.attach && (_instance$parent = instance.parent) != null && _instance$parent.object) {\n      detach(instance.parent, instance);\n    } else if (isObject3D(instance.object)) {\n      instance.object.visible = false;\n    }\n    instance.isHidden = true;\n    invalidateInstance(instance);\n  }\n}\nfunction unhideInstance(instance) {\n  if (instance.isHidden) {\n    var _instance$parent2;\n    if (instance.props.attach && (_instance$parent2 = instance.parent) != null && _instance$parent2.object) {\n      attach(instance.parent, instance);\n    } else if (isObject3D(instance.object) && instance.props.visible !== false) {\n      instance.object.visible = true;\n    }\n    instance.isHidden = false;\n    invalidateInstance(instance);\n  }\n}\n\n// https://github.com/facebook/react/issues/20271\n// This will make sure events and attach are only handled once when trees are complete\nfunction handleContainerEffects(parent, child, beforeChild) {\n  // Bail if tree isn't mounted or parent is not a container.\n  // This ensures that the tree is finalized and React won't discard results to Suspense\n  const state = child.root.getState();\n  if (!parent.parent && parent.object !== state.scene) return;\n\n  // Create & link object on first run\n  if (!child.object) {\n    var _child$props$object, _child$props$args;\n    // Get target from catalogue\n    const target = catalogue[toPascalCase(child.type)];\n\n    // Create object\n    child.object = (_child$props$object = child.props.object) != null ? _child$props$object : new target(...((_child$props$args = child.props.args) != null ? _child$props$args : []));\n    child.object.__r3f = child;\n  }\n\n  // Set initial props\n  applyProps(child.object, child.props);\n\n  // Append instance\n  if (child.props.attach) {\n    attach(parent, child);\n  } else if (isObject3D(child.object) && isObject3D(parent.object)) {\n    const childIndex = parent.object.children.indexOf(beforeChild == null ? void 0 : beforeChild.object);\n    if (beforeChild && childIndex !== -1) {\n      // If the child is already in the parent's children array, move it to the new position\n      // Otherwise, just insert it at the target position\n      const existingIndex = parent.object.children.indexOf(child.object);\n      if (existingIndex !== -1) {\n        parent.object.children.splice(existingIndex, 1);\n        const adjustedIndex = existingIndex < childIndex ? childIndex - 1 : childIndex;\n        parent.object.children.splice(adjustedIndex, 0, child.object);\n      } else {\n        child.object.parent = parent.object;\n        parent.object.children.splice(childIndex, 0, child.object);\n        child.object.dispatchEvent({\n          type: 'added'\n        });\n        parent.object.dispatchEvent({\n          type: 'childadded',\n          child: child.object\n        });\n      }\n    } else {\n      parent.object.add(child.object);\n    }\n  }\n\n  // Link subtree\n  for (const childInstance of child.children) handleContainerEffects(child, childInstance);\n\n  // Tree was updated, request a frame\n  invalidateInstance(child);\n}\nfunction appendChild(parent, child) {\n  if (!child) return;\n\n  // Link instances\n  child.parent = parent;\n  parent.children.push(child);\n\n  // Attach tree once complete\n  handleContainerEffects(parent, child);\n}\nfunction insertBefore(parent, child, beforeChild) {\n  if (!child || !beforeChild) return;\n\n  // Link instances\n  child.parent = parent;\n  const childIndex = parent.children.indexOf(beforeChild);\n  if (childIndex !== -1) parent.children.splice(childIndex, 0, child);else parent.children.push(child);\n\n  // Attach tree once complete\n  handleContainerEffects(parent, child, beforeChild);\n}\nfunction disposeOnIdle(object) {\n  if (typeof object.dispose === 'function') {\n    const handleDispose = () => {\n      try {\n        object.dispose();\n      } catch (_unused) {\n        // no-op\n      }\n    };\n\n    // In a testing environment, cleanup immediately\n    if (typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined') handleDispose();\n    // Otherwise, using a real GPU so schedule cleanup to prevent stalls\n    else unstable_scheduleCallback(unstable_IdlePriority, handleDispose);\n  }\n}\nfunction removeChild(parent, child, dispose) {\n  if (!child) return;\n\n  // Unlink instances\n  child.parent = null;\n  const childIndex = parent.children.indexOf(child);\n  if (childIndex !== -1) parent.children.splice(childIndex, 1);\n\n  // Eagerly tear down tree\n  if (child.props.attach) {\n    detach(parent, child);\n  } else if (isObject3D(child.object) && isObject3D(parent.object)) {\n    parent.object.remove(child.object);\n    removeInteractivity(findInitialRoot(child), child.object);\n  }\n\n  // Allow objects to bail out of unmount disposal with dispose={null}\n  const shouldDispose = child.props.dispose !== null && dispose !== false;\n\n  // Recursively remove instance children\n  for (let i = child.children.length - 1; i >= 0; i--) {\n    const node = child.children[i];\n    removeChild(child, node, shouldDispose);\n  }\n  child.children.length = 0;\n\n  // Unlink instance object\n  delete child.object.__r3f;\n\n  // Dispose object whenever the reconciler feels like it.\n  // Never dispose of primitives because their state may be kept outside of React!\n  // In order for an object to be able to dispose it\n  //   - has a dispose method\n  //   - cannot be a <primitive object={...} />\n  //   - cannot be a THREE.Scene, because three has broken its own API\n  if (shouldDispose && child.type !== 'primitive' && child.object.type !== 'Scene') {\n    disposeOnIdle(child.object);\n  }\n\n  // Tree was updated, request a frame for top-level instance\n  if (dispose === undefined) invalidateInstance(child);\n}\nfunction setFiberRef(fiber, publicInstance) {\n  for (const _fiber of [fiber, fiber.alternate]) {\n    if (_fiber !== null) {\n      if (typeof _fiber.ref === 'function') {\n        _fiber.refCleanup == null ? void 0 : _fiber.refCleanup();\n        const cleanup = _fiber.ref(publicInstance);\n        if (typeof cleanup === 'function') _fiber.refCleanup = cleanup;\n      } else if (_fiber.ref) {\n        _fiber.ref.current = publicInstance;\n      }\n    }\n  }\n}\nconst reconstructed = [];\nfunction swapInstances() {\n  // Detach instance\n  for (const [instance] of reconstructed) {\n    const parent = instance.parent;\n    if (parent) {\n      if (instance.props.attach) {\n        detach(parent, instance);\n      } else if (isObject3D(instance.object) && isObject3D(parent.object)) {\n        parent.object.remove(instance.object);\n      }\n      for (const child of instance.children) {\n        if (child.props.attach) {\n          detach(instance, child);\n        } else if (isObject3D(child.object) && isObject3D(instance.object)) {\n          instance.object.remove(child.object);\n        }\n      }\n    }\n\n    // If the old instance is hidden, we need to unhide it.\n    // React assumes it can discard instances since they're pure for DOM.\n    // This isn't true for us since our lifetimes are impure and longliving.\n    // So, we manually check if an instance was hidden and unhide it.\n    if (instance.isHidden) unhideInstance(instance);\n\n    // Dispose of old object if able\n    if (instance.object.__r3f) delete instance.object.__r3f;\n    if (instance.type !== 'primitive') disposeOnIdle(instance.object);\n  }\n\n  // Update instance\n  for (const [instance, props, fiber] of reconstructed) {\n    instance.props = props;\n    const parent = instance.parent;\n    if (parent) {\n      var _instance$props$objec, _instance$props$args;\n      // Get target from catalogue\n      const target = catalogue[toPascalCase(instance.type)];\n\n      // Create object\n      instance.object = (_instance$props$objec = instance.props.object) != null ? _instance$props$objec : new target(...((_instance$props$args = instance.props.args) != null ? _instance$props$args : []));\n      instance.object.__r3f = instance;\n      setFiberRef(fiber, instance.object);\n\n      // Set initial props\n      applyProps(instance.object, instance.props);\n      if (instance.props.attach) {\n        attach(parent, instance);\n      } else if (isObject3D(instance.object) && isObject3D(parent.object)) {\n        parent.object.add(instance.object);\n      }\n      for (const child of instance.children) {\n        if (child.props.attach) {\n          attach(instance, child);\n        } else if (isObject3D(child.object) && isObject3D(instance.object)) {\n          instance.object.add(child.object);\n        }\n      }\n\n      // Tree was updated, request a frame\n      invalidateInstance(instance);\n    }\n  }\n  reconstructed.length = 0;\n}\n\n// Don't handle text instances, make it no-op\nconst handleTextInstance = () => {};\nconst NO_CONTEXT = {};\nlet currentUpdatePriority = NoEventPriority;\n\n// https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberFlags.js\nconst NoFlags = 0;\nconst Update = 4;\nconst reconciler = /* @__PURE__ */createReconciler({\n  isPrimaryRenderer: false,\n  warnsIfNotActing: false,\n  supportsMutation: true,\n  supportsPersistence: false,\n  supportsHydration: false,\n  createInstance,\n  removeChild,\n  appendChild,\n  appendInitialChild: appendChild,\n  insertBefore,\n  appendChildToContainer(container, child) {\n    const scene = container.getState().scene.__r3f;\n    if (!child || !scene) return;\n    appendChild(scene, child);\n  },\n  removeChildFromContainer(container, child) {\n    const scene = container.getState().scene.__r3f;\n    if (!child || !scene) return;\n    removeChild(scene, child);\n  },\n  insertInContainerBefore(container, child, beforeChild) {\n    const scene = container.getState().scene.__r3f;\n    if (!child || !beforeChild || !scene) return;\n    insertBefore(scene, child, beforeChild);\n  },\n  getRootHostContext: () => NO_CONTEXT,\n  getChildHostContext: () => NO_CONTEXT,\n  commitUpdate(instance, type, oldProps, newProps, fiber) {\n    var _newProps$args, _oldProps$args, _newProps$args2;\n    validateInstance(type, newProps);\n    let reconstruct = false;\n\n    // Reconstruct primitives if object prop changes\n    if (instance.type === 'primitive' && oldProps.object !== newProps.object) reconstruct = true;\n    // Reconstruct instance if args were added or removed\n    else if (((_newProps$args = newProps.args) == null ? void 0 : _newProps$args.length) !== ((_oldProps$args = oldProps.args) == null ? void 0 : _oldProps$args.length)) reconstruct = true;\n    // Reconstruct instance if args were changed\n    else if ((_newProps$args2 = newProps.args) != null && _newProps$args2.some((value, index) => {\n      var _oldProps$args2;\n      return value !== ((_oldProps$args2 = oldProps.args) == null ? void 0 : _oldProps$args2[index]);\n    })) reconstruct = true;\n\n    // Reconstruct when args or <primitive object={...} have changes\n    if (reconstruct) {\n      reconstructed.push([instance, _objectSpread({}, newProps), fiber]);\n    } else {\n      // Create a diff-set, flag if there are any changes\n      const changedProps = diffProps(instance, newProps);\n      if (Object.keys(changedProps).length) {\n        Object.assign(instance.props, changedProps);\n        applyProps(instance.object, changedProps);\n      }\n    }\n\n    // Flush reconstructed siblings when we hit the last updated child in a sequence\n    const isTailSibling = fiber.sibling === null || (fiber.flags & Update) === NoFlags;\n    if (isTailSibling) swapInstances();\n  },\n  finalizeInitialChildren: () => false,\n  commitMount() {},\n  getPublicInstance: instance => instance == null ? void 0 : instance.object,\n  prepareForCommit: () => null,\n  preparePortalMount: container => prepare(container.getState().scene, container, '', {}),\n  resetAfterCommit: () => {},\n  shouldSetTextContent: () => false,\n  clearContainer: () => false,\n  hideInstance,\n  unhideInstance,\n  createTextInstance: handleTextInstance,\n  hideTextInstance: handleTextInstance,\n  unhideTextInstance: handleTextInstance,\n  scheduleTimeout: typeof setTimeout === 'function' ? setTimeout : undefined,\n  cancelTimeout: typeof clearTimeout === 'function' ? clearTimeout : undefined,\n  noTimeout: -1,\n  getInstanceFromNode: () => null,\n  beforeActiveInstanceBlur() {},\n  afterActiveInstanceBlur() {},\n  detachDeletedInstance() {},\n  prepareScopeUpdate() {},\n  getInstanceFromScope: () => null,\n  shouldAttemptEagerTransition: () => false,\n  trackSchedulerEvent: () => {},\n  resolveEventType: () => null,\n  resolveEventTimeStamp: () => -1.1,\n  requestPostPaintCallback() {},\n  maySuspendCommit: () => false,\n  preloadInstance: () => true,\n  // true indicates already loaded\n  startSuspendingCommit() {},\n  suspendInstance() {},\n  waitForCommitToBeReady: () => null,\n  NotPendingTransition: null,\n  // The reconciler types use the internal ReactContext with all the hidden properties\n  // so we have to cast from the public React.Context type\n  HostTransitionContext: /* @__PURE__ */React.createContext(null),\n  setCurrentUpdatePriority(newPriority) {\n    currentUpdatePriority = newPriority;\n  },\n  getCurrentUpdatePriority() {\n    return currentUpdatePriority;\n  },\n  resolveUpdatePriority() {\n    var _window$event;\n    if (currentUpdatePriority !== NoEventPriority) return currentUpdatePriority;\n    switch (typeof window !== 'undefined' && ((_window$event = window.event) == null ? void 0 : _window$event.type)) {\n      case 'click':\n      case 'contextmenu':\n      case 'dblclick':\n      case 'pointercancel':\n      case 'pointerdown':\n      case 'pointerup':\n        return DiscreteEventPriority;\n      case 'pointermove':\n      case 'pointerout':\n      case 'pointerover':\n      case 'pointerenter':\n      case 'pointerleave':\n      case 'wheel':\n        return ContinuousEventPriority;\n      default:\n        return DefaultEventPriority;\n    }\n  },\n  resetFormInstance() {}\n});\nconst _roots = new Map();\nconst shallowLoose = {\n  objects: 'shallow',\n  strict: false\n};\nfunction computeInitialSize(canvas, size) {\n  if (!size && typeof HTMLCanvasElement !== 'undefined' && canvas instanceof HTMLCanvasElement && canvas.parentElement) {\n    const {\n      width,\n      height,\n      top,\n      left\n    } = canvas.parentElement.getBoundingClientRect();\n    return {\n      width,\n      height,\n      top,\n      left\n    };\n  } else if (!size && typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return {\n      width: canvas.width,\n      height: canvas.height,\n      top: 0,\n      left: 0\n    };\n  }\n  return _objectSpread({\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0\n  }, size);\n}\nfunction createRoot(canvas) {\n  // Check against mistaken use of createRoot\n  const prevRoot = _roots.get(canvas);\n  const prevFiber = prevRoot == null ? void 0 : prevRoot.fiber;\n  const prevStore = prevRoot == null ? void 0 : prevRoot.store;\n  if (prevRoot) console.warn('R3F.createRoot should only be called once!');\n\n  // Report when an error was detected in a previous render\n  // https://github.com/pmndrs/react-three-fiber/pull/2261\n  const logRecoverableError = typeof reportError === 'function' ?\n  // In modern browsers, reportError will dispatch an error event,\n  // emulating an uncaught JavaScript error.\n  reportError :\n  // In older browsers and test environments, fallback to console.error.\n  console.error;\n\n  // Create store\n  const store = prevStore || createStore(invalidate, advance);\n  // Create renderer\n  const fiber = prevFiber || reconciler.createContainer(store,\n  // container\n  ConcurrentRoot,\n  // tag\n  null,\n  // hydration callbacks\n  false,\n  // isStrictMode\n  null,\n  // concurrentUpdatesByDefaultOverride\n  '',\n  // identifierPrefix\n  logRecoverableError,\n  // onUncaughtError\n  logRecoverableError,\n  // onCaughtError\n  logRecoverableError,\n  // onRecoverableError\n  null // transitionCallbacks\n  );\n  // Map it\n  if (!prevRoot) _roots.set(canvas, {\n    fiber,\n    store\n  });\n\n  // Locals\n  let onCreated;\n  let lastCamera;\n  let configured = false;\n  let pending = null;\n  return {\n    async configure() {\n      let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      let resolve;\n      pending = new Promise(_resolve => resolve = _resolve);\n      let {\n        gl: glConfig,\n        size: propsSize,\n        scene: sceneOptions,\n        events,\n        onCreated: onCreatedCallback,\n        shadows = false,\n        linear = false,\n        flat = false,\n        legacy = false,\n        orthographic = false,\n        frameloop = 'always',\n        dpr = [1, 2],\n        performance,\n        raycaster: raycastOptions,\n        camera: cameraOptions,\n        onPointerMissed\n      } = props;\n      let state = store.getState();\n\n      // Set up renderer (one time only!)\n      let gl = state.gl;\n      if (!state.gl) {\n        const defaultProps = {\n          canvas: canvas,\n          powerPreference: 'high-performance',\n          antialias: true,\n          alpha: true\n        };\n        const customRenderer = typeof glConfig === 'function' ? await glConfig(defaultProps) : glConfig;\n        if (isRenderer(customRenderer)) {\n          gl = customRenderer;\n        } else {\n          gl = new THREE.WebGLRenderer(_objectSpread(_objectSpread({}, defaultProps), glConfig));\n        }\n        state.set({\n          gl\n        });\n      }\n\n      // Set up raycaster (one time only!)\n      let raycaster = state.raycaster;\n      if (!raycaster) state.set({\n        raycaster: raycaster = new THREE.Raycaster()\n      });\n\n      // Set raycaster options\n      const _ref3 = raycastOptions || {},\n        {\n          params\n        } = _ref3,\n        options = _objectWithoutProperties(_ref3, _excluded);\n      if (!is.equ(options, raycaster, shallowLoose)) applyProps(raycaster, _objectSpread({}, options));\n      if (!is.equ(params, raycaster.params, shallowLoose)) applyProps(raycaster, {\n        params: _objectSpread(_objectSpread({}, raycaster.params), params)\n      });\n\n      // Create default camera, don't overwrite any user-set state\n      if (!state.camera || state.camera === lastCamera && !is.equ(lastCamera, cameraOptions, shallowLoose)) {\n        lastCamera = cameraOptions;\n        const isCamera = cameraOptions == null ? void 0 : cameraOptions.isCamera;\n        const camera = isCamera ? cameraOptions : orthographic ? new THREE.OrthographicCamera(0, 0, 0, 0, 0.1, 1000) : new THREE.PerspectiveCamera(75, 0, 0.1, 1000);\n        if (!isCamera) {\n          camera.position.z = 5;\n          if (cameraOptions) {\n            applyProps(camera, cameraOptions);\n            // Preserve user-defined frustum if possible\n            // https://github.com/pmndrs/react-three-fiber/issues/3160\n            if (!camera.manual) {\n              if ('aspect' in cameraOptions || 'left' in cameraOptions || 'right' in cameraOptions || 'bottom' in cameraOptions || 'top' in cameraOptions) {\n                camera.manual = true;\n                camera.updateProjectionMatrix();\n              }\n            }\n          }\n          // Always look at center by default\n          if (!state.camera && !(cameraOptions != null && cameraOptions.rotation)) camera.lookAt(0, 0, 0);\n        }\n        state.set({\n          camera\n        });\n\n        // Configure raycaster\n        // https://github.com/pmndrs/react-xr/issues/300\n        raycaster.camera = camera;\n      }\n\n      // Set up scene (one time only!)\n      if (!state.scene) {\n        let scene;\n        if (sceneOptions != null && sceneOptions.isScene) {\n          scene = sceneOptions;\n          prepare(scene, store, '', {});\n        } else {\n          scene = new THREE.Scene();\n          prepare(scene, store, '', {});\n          if (sceneOptions) applyProps(scene, sceneOptions);\n        }\n        state.set({\n          scene\n        });\n      }\n\n      // Store events internally\n      if (events && !state.events.handlers) state.set({\n        events: events(store)\n      });\n      // Check size, allow it to take on container bounds initially\n      const size = computeInitialSize(canvas, propsSize);\n      if (!is.equ(size, state.size, shallowLoose)) {\n        state.setSize(size.width, size.height, size.top, size.left);\n      }\n      // Check pixelratio\n      if (dpr && state.viewport.dpr !== calculateDpr(dpr)) state.setDpr(dpr);\n      // Check frameloop\n      if (state.frameloop !== frameloop) state.setFrameloop(frameloop);\n      // Check pointer missed\n      if (!state.onPointerMissed) state.set({\n        onPointerMissed\n      });\n      // Check performance\n      if (performance && !is.equ(performance, state.performance, shallowLoose)) state.set(state => ({\n        performance: _objectSpread(_objectSpread({}, state.performance), performance)\n      }));\n\n      // Set up XR (one time only!)\n      if (!state.xr) {\n        var _gl$xr;\n        // Handle frame behavior in WebXR\n        const handleXRFrame = (timestamp, frame) => {\n          const state = store.getState();\n          if (state.frameloop === 'never') return;\n          advance(timestamp, true, state, frame);\n        };\n\n        // Toggle render switching on session\n        const handleSessionChange = () => {\n          const state = store.getState();\n          state.gl.xr.enabled = state.gl.xr.isPresenting;\n          state.gl.xr.setAnimationLoop(state.gl.xr.isPresenting ? handleXRFrame : null);\n          if (!state.gl.xr.isPresenting) invalidate(state);\n        };\n\n        // WebXR session manager\n        const xr = {\n          connect() {\n            const gl = store.getState().gl;\n            gl.xr.addEventListener('sessionstart', handleSessionChange);\n            gl.xr.addEventListener('sessionend', handleSessionChange);\n          },\n          disconnect() {\n            const gl = store.getState().gl;\n            gl.xr.removeEventListener('sessionstart', handleSessionChange);\n            gl.xr.removeEventListener('sessionend', handleSessionChange);\n          }\n        };\n\n        // Subscribe to WebXR session events\n        if (typeof ((_gl$xr = gl.xr) == null ? void 0 : _gl$xr.addEventListener) === 'function') xr.connect();\n        state.set({\n          xr\n        });\n      }\n\n      // Set shadowmap\n      if (gl.shadowMap) {\n        const oldEnabled = gl.shadowMap.enabled;\n        const oldType = gl.shadowMap.type;\n        gl.shadowMap.enabled = !!shadows;\n        if (is.boo(shadows)) {\n          gl.shadowMap.type = THREE.PCFSoftShadowMap;\n        } else if (is.str(shadows)) {\n          var _types$shadows;\n          const types = {\n            basic: THREE.BasicShadowMap,\n            percentage: THREE.PCFShadowMap,\n            soft: THREE.PCFSoftShadowMap,\n            variance: THREE.VSMShadowMap\n          };\n          gl.shadowMap.type = (_types$shadows = types[shadows]) != null ? _types$shadows : THREE.PCFSoftShadowMap;\n        } else if (is.obj(shadows)) {\n          Object.assign(gl.shadowMap, shadows);\n        }\n        if (oldEnabled !== gl.shadowMap.enabled || oldType !== gl.shadowMap.type) gl.shadowMap.needsUpdate = true;\n      }\n      THREE.ColorManagement.enabled = !legacy;\n\n      // Set color space and tonemapping preferences\n      if (!configured) {\n        gl.outputColorSpace = linear ? THREE.LinearSRGBColorSpace : THREE.SRGBColorSpace;\n        gl.toneMapping = flat ? THREE.NoToneMapping : THREE.ACESFilmicToneMapping;\n      }\n\n      // Update color management state\n      if (state.legacy !== legacy) state.set(() => ({\n        legacy\n      }));\n      if (state.linear !== linear) state.set(() => ({\n        linear\n      }));\n      if (state.flat !== flat) state.set(() => ({\n        flat\n      }));\n\n      // Set gl props\n      if (glConfig && !is.fun(glConfig) && !isRenderer(glConfig) && !is.equ(glConfig, gl, shallowLoose)) applyProps(gl, glConfig);\n\n      // Set locals\n      onCreated = onCreatedCallback;\n      configured = true;\n      resolve();\n      return this;\n    },\n    render(children) {\n      // The root has to be configured before it can be rendered\n      if (!configured && !pending) this.configure();\n      pending.then(() => {\n        reconciler.updateContainer(/*#__PURE__*/jsx(Provider, {\n          store: store,\n          children: children,\n          onCreated: onCreated,\n          rootElement: canvas\n        }), fiber, null, () => undefined);\n      });\n      return store;\n    },\n    unmount() {\n      unmountComponentAtNode(canvas);\n    }\n  };\n}\nfunction Provider(_ref4) {\n  let {\n    store,\n    children,\n    onCreated,\n    rootElement\n  } = _ref4;\n  useIsomorphicLayoutEffect(() => {\n    const state = store.getState();\n    // Flag the canvas active, rendering will now begin\n    state.set(state => ({\n      internal: _objectSpread(_objectSpread({}, state.internal), {}, {\n        active: true\n      })\n    }));\n    // Notify that init is completed, the scene graph exists, but nothing has yet rendered\n    if (onCreated) onCreated(state);\n    // Connect events to the targets parent, this is done to ensure events are registered on\n    // a shared target, and not on the canvas itself\n    if (!store.getState().events.connected) state.events.connect == null ? void 0 : state.events.connect(rootElement);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/jsx(context.Provider, {\n    value: store,\n    children: children\n  });\n}\nfunction unmountComponentAtNode(canvas, callback) {\n  const root = _roots.get(canvas);\n  const fiber = root == null ? void 0 : root.fiber;\n  if (fiber) {\n    const state = root == null ? void 0 : root.store.getState();\n    if (state) state.internal.active = false;\n    reconciler.updateContainer(null, fiber, null, () => {\n      if (state) {\n        setTimeout(() => {\n          try {\n            var _state$gl, _state$gl$renderLists, _state$gl2, _state$gl3;\n            state.events.disconnect == null ? void 0 : state.events.disconnect();\n            (_state$gl = state.gl) == null ? void 0 : (_state$gl$renderLists = _state$gl.renderLists) == null ? void 0 : _state$gl$renderLists.dispose == null ? void 0 : _state$gl$renderLists.dispose();\n            (_state$gl2 = state.gl) == null ? void 0 : _state$gl2.forceContextLoss == null ? void 0 : _state$gl2.forceContextLoss();\n            if ((_state$gl3 = state.gl) != null && _state$gl3.xr) state.xr.disconnect();\n            dispose(state.scene);\n            _roots.delete(canvas);\n            if (callback) callback(canvas);\n          } catch (e) {\n            /* ... */\n          }\n        }, 500);\n      }\n    });\n  }\n}\nfunction createPortal(children, container, state) {\n  return /*#__PURE__*/jsx(Portal, {\n    children: children,\n    container: container,\n    state: state\n  });\n}\nfunction Portal(_ref5) {\n  let {\n    state = {},\n    children,\n    container\n  } = _ref5;\n  /** This has to be a component because it would not be able to call useThree/useStore otherwise since\r\n   *  if this is our environment, then we are not in r3f's renderer but in react-dom, it would trigger\r\n   *  the \"R3F hooks can only be used within the Canvas component!\" warning:\r\n   *  <Canvas>\r\n   *    {createPortal(...)} */\n  const {\n      events,\n      size\n    } = state,\n    rest = _objectWithoutProperties(state, _excluded2);\n  const previousRoot = useStore();\n  const [raycaster] = React.useState(() => new THREE.Raycaster());\n  const [pointer] = React.useState(() => new THREE.Vector2());\n  const inject = useMutableCallback((rootState, injectState) => {\n    let viewport = undefined;\n    if (injectState.camera && size) {\n      const camera = injectState.camera;\n      // Calculate the override viewport, if present\n      viewport = rootState.viewport.getCurrentViewport(camera, new THREE.Vector3(), size);\n      // Update the portal camera, if it differs from the previous layer\n      if (camera !== rootState.camera) updateCamera(camera, size);\n    }\n    return _objectSpread(_objectSpread(_objectSpread({}, rootState), injectState), {}, {\n      // Portals have their own scene, which forms the root, a raycaster and a pointer\n      scene: container,\n      raycaster,\n      pointer,\n      mouse: pointer,\n      // Their previous root is the layer before it\n      previousRoot,\n      // Events, size and viewport can be overridden by the inject layer\n      events: _objectSpread(_objectSpread(_objectSpread({}, rootState.events), injectState.events), events),\n      size: _objectSpread(_objectSpread({}, rootState.size), size),\n      viewport: _objectSpread(_objectSpread({}, rootState.viewport), viewport),\n      // Layers are allowed to override events\n      setEvents: events => injectState.set(state => _objectSpread(_objectSpread({}, state), {}, {\n        events: _objectSpread(_objectSpread({}, state.events), events)\n      }))\n    });\n  });\n  const usePortalStore = React.useMemo(() => {\n    // Create a mirrored store, based on the previous root with a few overrides ...\n    const store = createWithEqualityFn((set, get) => _objectSpread(_objectSpread({}, rest), {}, {\n      set,\n      get\n    }));\n\n    // Subscribe to previous root-state and copy changes over to the mirrored portal-state\n    const onMutate = prev => store.setState(state => inject.current(prev, state));\n    onMutate(previousRoot.getState());\n    previousRoot.subscribe(onMutate);\n    return store;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [previousRoot, container]);\n  return (/*#__PURE__*/\n    // @ts-ignore, reconciler types are not maintained\n    jsx(Fragment, {\n      children: reconciler.createPortal(/*#__PURE__*/jsx(context.Provider, {\n        value: usePortalStore,\n        children: children\n      }), usePortalStore, null)\n    })\n  );\n}\n\n/**\r\n * Force React to flush any updates inside the provided callback synchronously and immediately.\r\n * All the same caveats documented for react-dom's `flushSync` apply here (see https://react.dev/reference/react-dom/flushSync).\r\n * Nevertheless, sometimes one needs to render synchronously, for example to keep DOM and 3D changes in lock-step without\r\n * having to revert to a non-React solution. Note: this will only flush updates within the `Canvas` root.\r\n */\nfunction flushSync(fn) {\n  // @ts-ignore - reconciler types are not maintained\n  return reconciler.flushSyncFromReconciler(fn);\n}\nfunction createSubs(callback, subs) {\n  const sub = {\n    callback\n  };\n  subs.add(sub);\n  return () => void subs.delete(sub);\n}\nconst globalEffects = new Set();\nconst globalAfterEffects = new Set();\nconst globalTailEffects = new Set();\n\n/**\r\n * Adds a global render callback which is called each frame.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#addEffect\r\n */\nconst addEffect = callback => createSubs(callback, globalEffects);\n\n/**\r\n * Adds a global after-render callback which is called each frame.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#addAfterEffect\r\n */\nconst addAfterEffect = callback => createSubs(callback, globalAfterEffects);\n\n/**\r\n * Adds a global callback which is called when rendering stops.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#addTail\r\n */\nconst addTail = callback => createSubs(callback, globalTailEffects);\nfunction run(effects, timestamp) {\n  if (!effects.size) return;\n  for (const {\n    callback\n  } of effects.values()) {\n    callback(timestamp);\n  }\n}\nfunction flushGlobalEffects(type, timestamp) {\n  switch (type) {\n    case 'before':\n      return run(globalEffects, timestamp);\n    case 'after':\n      return run(globalAfterEffects, timestamp);\n    case 'tail':\n      return run(globalTailEffects, timestamp);\n  }\n}\nlet subscribers;\nlet subscription;\nfunction update(timestamp, state, frame) {\n  // Run local effects\n  let delta = state.clock.getDelta();\n\n  // In frameloop='never' mode, clock times are updated using the provided timestamp\n  if (state.frameloop === 'never' && typeof timestamp === 'number') {\n    delta = timestamp - state.clock.elapsedTime;\n    state.clock.oldTime = state.clock.elapsedTime;\n    state.clock.elapsedTime = timestamp;\n  }\n\n  // Call subscribers (useFrame)\n  subscribers = state.internal.subscribers;\n  for (let i = 0; i < subscribers.length; i++) {\n    subscription = subscribers[i];\n    subscription.ref.current(subscription.store.getState(), delta, frame);\n  }\n\n  // Render content\n  if (!state.internal.priority && state.gl.render) state.gl.render(state.scene, state.camera);\n\n  // Decrease frame count\n  state.internal.frames = Math.max(0, state.internal.frames - 1);\n  return state.frameloop === 'always' ? 1 : state.internal.frames;\n}\nlet running = false;\nlet useFrameInProgress = false;\nlet repeat;\nlet frame;\nlet state;\nfunction loop(timestamp) {\n  frame = requestAnimationFrame(loop);\n  running = true;\n  repeat = 0;\n\n  // Run effects\n  flushGlobalEffects('before', timestamp);\n\n  // Render all roots\n  useFrameInProgress = true;\n  for (const root of _roots.values()) {\n    var _state$gl$xr;\n    state = root.store.getState();\n\n    // If the frameloop is invalidated, do not run another frame\n    if (state.internal.active && (state.frameloop === 'always' || state.internal.frames > 0) && !((_state$gl$xr = state.gl.xr) != null && _state$gl$xr.isPresenting)) {\n      repeat += update(timestamp, state);\n    }\n  }\n  useFrameInProgress = false;\n\n  // Run after-effects\n  flushGlobalEffects('after', timestamp);\n\n  // Stop the loop if nothing invalidates it\n  if (repeat === 0) {\n    // Tail call effects, they are called when rendering stops\n    flushGlobalEffects('tail', timestamp);\n\n    // Flag end of operation\n    running = false;\n    return cancelAnimationFrame(frame);\n  }\n}\n\n/**\r\n * Invalidates the view, requesting a frame to be rendered. Will globally invalidate unless passed a root's state.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#invalidate\r\n */\nfunction invalidate(state) {\n  let frames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var _state$gl$xr2;\n  if (!state) return _roots.forEach(root => invalidate(root.store.getState(), frames));\n  if ((_state$gl$xr2 = state.gl.xr) != null && _state$gl$xr2.isPresenting || !state.internal.active || state.frameloop === 'never') return;\n  if (frames > 1) {\n    // legacy support for people using frames parameters\n    // Increase frames, do not go higher than 60\n    state.internal.frames = Math.min(60, state.internal.frames + frames);\n  } else {\n    if (useFrameInProgress) {\n      //called from within a useFrame, it means the user wants an additional frame\n      state.internal.frames = 2;\n    } else {\n      //the user need a new frame, no need to increment further than 1\n      state.internal.frames = 1;\n    }\n  }\n\n  // If the render-loop isn't active, start it\n  if (!running) {\n    running = true;\n    requestAnimationFrame(loop);\n  }\n}\n\n/**\r\n * Advances the frameloop and runs render effects, useful for when manually rendering via `frameloop=\"never\"`.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#advance\r\n */\nfunction advance(timestamp) {\n  let runGlobalEffects = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  let state = arguments.length > 2 ? arguments[2] : undefined;\n  let frame = arguments.length > 3 ? arguments[3] : undefined;\n  if (runGlobalEffects) flushGlobalEffects('before', timestamp);\n  if (!state) for (const root of _roots.values()) update(timestamp, root.store.getState());else update(timestamp, state, frame);\n  if (runGlobalEffects) flushGlobalEffects('after', timestamp);\n}\nconst DOM_EVENTS = {\n  onClick: ['click', false],\n  onContextMenu: ['contextmenu', false],\n  onDoubleClick: ['dblclick', false],\n  onWheel: ['wheel', true],\n  onPointerDown: ['pointerdown', true],\n  onPointerUp: ['pointerup', true],\n  onPointerLeave: ['pointerleave', true],\n  onPointerMove: ['pointermove', true],\n  onPointerCancel: ['pointercancel', true],\n  onLostPointerCapture: ['lostpointercapture', true]\n};\n\n/** Default R3F event manager for web */\nfunction createPointerEvents(store) {\n  const {\n    handlePointer\n  } = createEvents(store);\n  return {\n    priority: 1,\n    enabled: true,\n    compute(event, state, previous) {\n      // https://github.com/pmndrs/react-three-fiber/pull/782\n      // Events trigger outside of canvas when moved, use offsetX/Y by default and allow overrides\n      state.pointer.set(event.offsetX / state.size.width * 2 - 1, -(event.offsetY / state.size.height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    },\n    connected: undefined,\n    handlers: Object.keys(DOM_EVENTS).reduce((acc, key) => _objectSpread(_objectSpread({}, acc), {}, {\n      [key]: handlePointer(key)\n    }), {}),\n    update: () => {\n      var _internal$lastEvent;\n      const {\n        events,\n        internal\n      } = store.getState();\n      if ((_internal$lastEvent = internal.lastEvent) != null && _internal$lastEvent.current && events.handlers) events.handlers.onPointerMove(internal.lastEvent.current);\n    },\n    connect: target => {\n      const {\n        set,\n        events\n      } = store.getState();\n      events.disconnect == null ? void 0 : events.disconnect();\n      set(state => ({\n        events: _objectSpread(_objectSpread({}, state.events), {}, {\n          connected: target\n        })\n      }));\n      if (events.handlers) {\n        for (const name in events.handlers) {\n          const event = events.handlers[name];\n          const [eventName, passive] = DOM_EVENTS[name];\n          target.addEventListener(eventName, event, {\n            passive\n          });\n        }\n      }\n    },\n    disconnect: () => {\n      const {\n        set,\n        events\n      } = store.getState();\n      if (events.connected) {\n        if (events.handlers) {\n          for (const name in events.handlers) {\n            const event = events.handlers[name];\n            const [eventName] = DOM_EVENTS[name];\n            events.connected.removeEventListener(eventName, event);\n          }\n        }\n        set(state => ({\n          events: _objectSpread(_objectSpread({}, state.events), {}, {\n            connected: undefined\n          })\n        }));\n      }\n    }\n  };\n}\nexport { useStore as A, Block as B, useThree as C, useFrame as D, ErrorBoundary as E, useGraph as F, useLoader as G, _roots as _, useMutableCallback as a, useIsomorphicLayoutEffect as b, createRoot as c, unmountComponentAtNode as d, extend as e, createPointerEvents as f, createEvents as g, flushGlobalEffects as h, isRef as i, addEffect as j, addAfterEffect as k, addTail as l, invalidate as m, advance as n, createPortal as o, flushSync as p, context as q, reconciler as r, applyProps as s, threeTypes as t, useBridge as u, getRootState as v, dispose as w, act as x, buildGraph as y, useInstanceHandle as z };","map":{"version":3,"names":["React","DefaultEventPriority","ContinuousEventPriority","DiscreteEventPriority","ConcurrentRoot","THREE","createWithEqualityFn","suspend","preload","clear","Reconciler","unstable_scheduleCallback","unstable_IdlePriority","jsx","Fragment","useFiber","useContextBridge","traverseFiber","threeTypes","Object","freeze","__proto__","findInitialRoot","instance","root","getState","previousRoot","act","isOrthographicCamera","def","isRef","obj","hasOwnProperty","isColorRepresentation","value","isColor","useIsomorphicLayoutEffect","_window$document","_window$navigator","window","document","createElement","navigator","product","useLayoutEffect","useEffect","useMutableCallback","fn","ref","useRef","current","useBridge","fiber","ContextBridge","useMemo","_ref","children","strict","node","type","StrictMode","Root","Block","_ref2","set","Promise","ErrorBoundary","_ErrorBoundary","Component","constructor","arguments","state","error","componentDidCatch","err","props","render","getDerivedStateFromError","calculateDpr","dpr","_window$devicePixelRa","target","devicePixelRatio","Array","isArray","Math","min","max","getRootState","_r3f","__r3f","is","a","arr","fun","str","num","boo","und","nul","equ","b","arrays","objects","length","undefined","isObj","isArr","i","keys","buildGraph","object","data","nodes","materials","meshes","traverse","name","material","isMesh","dispose","p","prop","REACT_INTERNAL_PROPS","getInstanceProps","queue","key","includes","prepare","parent","eventCount","handlers","isHidden","resolve","part","split","_target","INDEX_REGEX","attach","child","test","index","replace","previousAttach","detach","previous","RESERVED_PROPS","MEMOIZED_PROTOTYPES","Map","getMemoizedPrototype","ctor","get","e","diffProps","newProps","changedProps","other","startsWith","concat","colorMaps","EVENT_REGEX","applyProps","_instance$object","rootState","prevHandlers","Layers","mask","Color","copy","fromArray","setScalar","_root$key","linear","isTexture","format","RGBAFormat","UnsignedByteType","colorSpace","SRGBColorSpace","internal","isObject3D","interaction","indexOf","splice","raycast","push","isBufferGeometry","isMaterial","invalidateInstance","_instance$root","onUpdate","frames","invalidate","updateCamera","camera","size","manual","left","width","right","top","height","bottom","aspect","updateProjectionMatrix","makeId","event","eventObject","uuid","instanceId","releaseInternalPointerCapture","capturedMap","captures","pointerId","captureData","delete","releasePointerCapture","removeInteractivity","store","filter","o","initialHits","hovered","forEach","createEvents","calculateDistance","dx","offsetX","initialClick","dy","offsetY","round","sqrt","filterPointerEvents","some","intersect","duplicates","Set","intersections","eventsObjects","raycaster","events","compute","handleRaycast","enabled","_state$previousRoot","intersectObject","hits","flatMap","sort","aState","bState","distance","priority","item","id","has","add","hit","_r3f2","_objectSpread","values","intersection","handleIntersects","delta","callback","localState","stopped","traverseAncestors","parentState","pointer","unprojectedPoint","Vector3","x","y","unproject","hasPointerCapture","_internal$capturedMap","_internal$capturedMap2","setPointerCapture","extractEventProps","property","raycastEvent","ray","stopPropagation","capturesForPointer","from","find","higher","slice","cancelPointer","currentTarget","nativeEvent","hoveredObj","onPointerOut","onPointerLeave","pointerMissed","onPointerMissed","handlePointer","requestAnimationFrame","handleEvent","lastEvent","isPointerMove","isClickEvent","map","onIntersect","onPointerOver","onPointerEnter","hoveredItem","onPointerMove","handler","isRenderer","context","createContext","createStore","advance","rootStore","position","defaultTarget","tempTarget","getCurrentViewport","isVector3","getWorldPosition","distanceTo","zoom","factor","fov","PI","h","tan","w","performanceTimeout","setPerformanceCurrent","performance","Vector2","gl","connected","scene","xr","timestamp","runGlobalEffects","legacy","flat","controls","clock","Clock","mouse","frameloop","debounce","regress","clearTimeout","setTimeout","viewport","initialDpr","setEvents","setSize","setDpr","resolved","setFrameloop","stop","elapsedTime","start","subscribers","createRef","active","subscribe","s","oldSize","oldDpr","oldCamera","setPixelRatio","updateStyle","HTMLCanvasElement","domElement","useInstanceHandle","useImperativeHandle","useStore","useContext","Error","useThree","selector","equalityFn","useFrame","renderPriority","useGraph","memoizedLoaders","WeakMap","isConstructor$1","_value$prototype","prototype","loadingFn","extensions","onProgress","Proto","loader","_len","input","_key","all","res","reject","load","assign","message","useLoader","results","equal","createReconciler","config","reconciler","injectIntoDevTools","bundleType","process","env","NODE_ENV","rendererPackageName","version","NoEventPriority","catalogue","PREFIX_REGEX","toPascalCase","toUpperCase","isConstructor","extend","validateInstance","args","createInstance","_props$object","hideInstance","_instance$parent","visible","unhideInstance","_instance$parent2","handleContainerEffects","beforeChild","_child$props$object","_child$props$args","childIndex","existingIndex","adjustedIndex","dispatchEvent","childInstance","appendChild","insertBefore","disposeOnIdle","handleDispose","_unused","IS_REACT_ACT_ENVIRONMENT","removeChild","remove","shouldDispose","setFiberRef","publicInstance","_fiber","alternate","refCleanup","cleanup","reconstructed","swapInstances","_instance$props$objec","_instance$props$args","handleTextInstance","NO_CONTEXT","currentUpdatePriority","NoFlags","Update","isPrimaryRenderer","warnsIfNotActing","supportsMutation","supportsPersistence","supportsHydration","appendInitialChild","appendChildToContainer","container","removeChildFromContainer","insertInContainerBefore","getRootHostContext","getChildHostContext","commitUpdate","oldProps","_newProps$args","_oldProps$args","_newProps$args2","reconstruct","_oldProps$args2","isTailSibling","sibling","flags","finalizeInitialChildren","commitMount","getPublicInstance","prepareForCommit","preparePortalMount","resetAfterCommit","shouldSetTextContent","clearContainer","createTextInstance","hideTextInstance","unhideTextInstance","scheduleTimeout","cancelTimeout","noTimeout","getInstanceFromNode","beforeActiveInstanceBlur","afterActiveInstanceBlur","detachDeletedInstance","prepareScopeUpdate","getInstanceFromScope","shouldAttemptEagerTransition","trackSchedulerEvent","resolveEventType","resolveEventTimeStamp","requestPostPaintCallback","maySuspendCommit","preloadInstance","startSuspendingCommit","suspendInstance","waitForCommitToBeReady","NotPendingTransition","HostTransitionContext","setCurrentUpdatePriority","newPriority","getCurrentUpdatePriority","resolveUpdatePriority","_window$event","resetFormInstance","_roots","shallowLoose","computeInitialSize","canvas","parentElement","getBoundingClientRect","OffscreenCanvas","createRoot","prevRoot","prevFiber","prevStore","console","warn","logRecoverableError","reportError","createContainer","onCreated","lastCamera","configured","pending","configure","_resolve","glConfig","propsSize","sceneOptions","onCreatedCallback","shadows","orthographic","raycastOptions","cameraOptions","defaultProps","powerPreference","antialias","alpha","customRenderer","WebGLRenderer","Raycaster","_ref3","params","options","_objectWithoutProperties","_excluded","isCamera","OrthographicCamera","PerspectiveCamera","z","rotation","lookAt","isScene","Scene","_gl$xr","handleXRFrame","frame","handleSessionChange","isPresenting","setAnimationLoop","connect","addEventListener","disconnect","removeEventListener","shadowMap","oldEnabled","oldType","PCFSoftShadowMap","_types$shadows","types","basic","BasicShadowMap","percentage","PCFShadowMap","soft","variance","VSMShadowMap","needsUpdate","ColorManagement","outputColorSpace","LinearSRGBColorSpace","toneMapping","NoToneMapping","ACESFilmicToneMapping","then","updateContainer","Provider","rootElement","unmount","unmountComponentAtNode","_ref4","_state$gl","_state$gl$renderLists","_state$gl2","_state$gl3","renderLists","forceContextLoss","createPortal","Portal","_ref5","rest","_excluded2","useState","inject","injectState","usePortalStore","onMutate","prev","setState","flushSync","flushSyncFromReconciler","createSubs","subs","sub","globalEffects","globalAfterEffects","globalTailEffects","addEffect","addAfterEffect","addTail","run","effects","flushGlobalEffects","subscription","update","getDelta","oldTime","running","useFrameInProgress","repeat","loop","_state$gl$xr","cancelAnimationFrame","_state$gl$xr2","DOM_EVENTS","onClick","onContextMenu","onDoubleClick","onWheel","onPointerDown","onPointerUp","onPointerCancel","onLostPointerCapture","createPointerEvents","setFromCamera","reduce","acc","_internal$lastEvent","eventName","passive","A","B","C","D","E","F","G","_","c","d","f","g","j","k","l","m","n","q","r","t","u","v"],"sources":["C:/Users/waleed/Desktop/node_modules/@react-three/fiber/dist/events-e3cb66e2.esm.js"],"sourcesContent":["import * as React from 'react';\nimport { DefaultEventPriority, ContinuousEventPriority, DiscreteEventPriority, ConcurrentRoot } from 'react-reconciler/constants';\nimport * as THREE from 'three';\nimport { createWithEqualityFn } from 'zustand/traditional';\nimport { suspend, preload, clear } from 'suspend-react';\nimport Reconciler from 'react-reconciler';\nimport { unstable_scheduleCallback, unstable_IdlePriority } from 'scheduler';\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useFiber, useContextBridge, traverseFiber } from 'its-fine';\n\nvar threeTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null\n});\n\n/**\r\n * Returns the instance's initial (outmost) root.\r\n */\nfunction findInitialRoot(instance) {\n  let root = instance.root;\n  while (root.getState().previousRoot) root = root.getState().previousRoot;\n  return root;\n}\n/**\r\n * Safely flush async effects when testing, simulating a legacy root.\r\n * @deprecated Import from React instead. import { act } from 'react'\r\n */\n// Reference with computed key to break Webpack static analysis\n// https://github.com/webpack/webpack/issues/14814\nconst act = React['act' + ''];\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\nconst isRef = obj => obj && obj.hasOwnProperty('current');\nconst isColorRepresentation = value => value != null && (typeof value === 'string' || typeof value === 'number' || value.isColor);\n\n/**\r\n * An SSR-friendly useLayoutEffect.\r\n *\r\n * React currently throws a warning when using useLayoutEffect on the server.\r\n * To get around it, we can conditionally useEffect on the server (no-op) and\r\n * useLayoutEffect elsewhere.\r\n *\r\n * @see https://github.com/facebook/react/issues/14927\r\n */\nconst useIsomorphicLayoutEffect = /* @__PURE__ */((_window$document, _window$navigator) => typeof window !== 'undefined' && (((_window$document = window.document) == null ? void 0 : _window$document.createElement) || ((_window$navigator = window.navigator) == null ? void 0 : _window$navigator.product) === 'ReactNative'))() ? React.useLayoutEffect : React.useEffect;\nfunction useMutableCallback(fn) {\n  const ref = React.useRef(fn);\n  useIsomorphicLayoutEffect(() => void (ref.current = fn), [fn]);\n  return ref;\n}\n/**\r\n * Bridges renderer Context and StrictMode from a primary renderer.\r\n */\nfunction useBridge() {\n  const fiber = useFiber();\n  const ContextBridge = useContextBridge();\n  return React.useMemo(() => ({\n    children\n  }) => {\n    const strict = !!traverseFiber(fiber, true, node => node.type === React.StrictMode);\n    const Root = strict ? React.StrictMode : React.Fragment;\n    return /*#__PURE__*/jsx(Root, {\n      children: /*#__PURE__*/jsx(ContextBridge, {\n        children: children\n      })\n    });\n  }, [fiber, ContextBridge]);\n}\nfunction Block({\n  set\n}) {\n  useIsomorphicLayoutEffect(() => {\n    set(new Promise(() => null));\n    return () => set(false);\n  }, [set]);\n  return null;\n}\n\n// NOTE: static members get down-level transpiled to mutations which break tree-shaking\nconst ErrorBoundary = /* @__PURE__ */(_ErrorBoundary => (_ErrorBoundary = class ErrorBoundary extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false\n    };\n  }\n  componentDidCatch(err) {\n    this.props.set(err);\n  }\n  render() {\n    return this.state.error ? null : this.props.children;\n  }\n}, _ErrorBoundary.getDerivedStateFromError = () => ({\n  error: true\n}), _ErrorBoundary))();\nfunction calculateDpr(dpr) {\n  var _window$devicePixelRa;\n  // Err on the side of progress by assuming 2x dpr if we can't detect it\n  // This will happen in workers where window is defined but dpr isn't.\n  const target = typeof window !== 'undefined' ? (_window$devicePixelRa = window.devicePixelRatio) != null ? _window$devicePixelRa : 2 : 1;\n  return Array.isArray(dpr) ? Math.min(Math.max(dpr[0], target), dpr[1]) : dpr;\n}\n\n/**\r\n * Returns instance root state\r\n */\nfunction getRootState(obj) {\n  var _r3f;\n  return (_r3f = obj.__r3f) == null ? void 0 : _r3f.root.getState();\n}\n// A collection of compare functions\nconst is = {\n  obj: a => a === Object(a) && !is.arr(a) && typeof a !== 'function',\n  fun: a => typeof a === 'function',\n  str: a => typeof a === 'string',\n  num: a => typeof a === 'number',\n  boo: a => typeof a === 'boolean',\n  und: a => a === void 0,\n  nul: a => a === null,\n  arr: a => Array.isArray(a),\n  equ(a, b, {\n    arrays = 'shallow',\n    objects = 'reference',\n    strict = true\n  } = {}) {\n    // Wrong type or one of the two undefined, doesn't match\n    if (typeof a !== typeof b || !!a !== !!b) return false;\n    // Atomic, just compare a against b\n    if (is.str(a) || is.num(a) || is.boo(a)) return a === b;\n    const isObj = is.obj(a);\n    if (isObj && objects === 'reference') return a === b;\n    const isArr = is.arr(a);\n    if (isArr && arrays === 'reference') return a === b;\n    // Array or Object, shallow compare first to see if it's a match\n    if ((isArr || isObj) && a === b) return true;\n    // Last resort, go through keys\n    let i;\n    // Check if a has all the keys of b\n    for (i in a) if (!(i in b)) return false;\n    // Check if values between keys match\n    if (isObj && arrays === 'shallow' && objects === 'shallow') {\n      for (i in strict ? b : a) if (!is.equ(a[i], b[i], {\n        strict,\n        objects: 'reference'\n      })) return false;\n    } else {\n      for (i in strict ? b : a) if (a[i] !== b[i]) return false;\n    }\n    // If i is undefined\n    if (is.und(i)) {\n      // If both arrays are empty we consider them equal\n      if (isArr && a.length === 0 && b.length === 0) return true;\n      // If both objects are empty we consider them equal\n      if (isObj && Object.keys(a).length === 0 && Object.keys(b).length === 0) return true;\n      // Otherwise match them by value\n      if (a !== b) return false;\n    }\n    return true;\n  }\n};\n\n// Collects nodes and materials from a THREE.Object3D\nfunction buildGraph(object) {\n  const data = {\n    nodes: {},\n    materials: {},\n    meshes: {}\n  };\n  if (object) {\n    object.traverse(obj => {\n      if (obj.name) data.nodes[obj.name] = obj;\n      if (obj.material && !data.materials[obj.material.name]) data.materials[obj.material.name] = obj.material;\n      if (obj.isMesh && !data.meshes[obj.name]) data.meshes[obj.name] = obj;\n    });\n  }\n  return data;\n}\n// Disposes an object and all its properties\nfunction dispose(obj) {\n  if (obj.type !== 'Scene') obj.dispose == null ? void 0 : obj.dispose();\n  for (const p in obj) {\n    const prop = obj[p];\n    if ((prop == null ? void 0 : prop.type) !== 'Scene') prop == null ? void 0 : prop.dispose == null ? void 0 : prop.dispose();\n  }\n}\nconst REACT_INTERNAL_PROPS = ['children', 'key', 'ref'];\n\n// Gets only instance props from reconciler fibers\nfunction getInstanceProps(queue) {\n  const props = {};\n  for (const key in queue) {\n    if (!REACT_INTERNAL_PROPS.includes(key)) props[key] = queue[key];\n  }\n  return props;\n}\n\n// Each object in the scene carries a small LocalState descriptor\nfunction prepare(target, root, type, props) {\n  const object = target;\n\n  // Create instance descriptor\n  let instance = object == null ? void 0 : object.__r3f;\n  if (!instance) {\n    instance = {\n      root,\n      type,\n      parent: null,\n      children: [],\n      props: getInstanceProps(props),\n      object,\n      eventCount: 0,\n      handlers: {},\n      isHidden: false\n    };\n    if (object) object.__r3f = instance;\n  }\n  return instance;\n}\nfunction resolve(root, key) {\n  let target = root[key];\n  if (!key.includes('-')) return {\n    root,\n    key,\n    target\n  };\n\n  // Resolve pierced target\n  target = root;\n  for (const part of key.split('-')) {\n    var _target;\n    key = part;\n    root = target;\n    target = (_target = target) == null ? void 0 : _target[key];\n  }\n\n  // TODO: change key to 'foo-bar' if target is undefined?\n\n  return {\n    root,\n    key,\n    target\n  };\n}\n\n// Checks if a dash-cased string ends with an integer\nconst INDEX_REGEX = /-\\d+$/;\nfunction attach(parent, child) {\n  if (is.str(child.props.attach)) {\n    // If attaching into an array (foo-0), create one\n    if (INDEX_REGEX.test(child.props.attach)) {\n      const index = child.props.attach.replace(INDEX_REGEX, '');\n      const {\n        root,\n        key\n      } = resolve(parent.object, index);\n      if (!Array.isArray(root[key])) root[key] = [];\n    }\n    const {\n      root,\n      key\n    } = resolve(parent.object, child.props.attach);\n    child.previousAttach = root[key];\n    root[key] = child.object;\n  } else if (is.fun(child.props.attach)) {\n    child.previousAttach = child.props.attach(parent.object, child.object);\n  }\n}\nfunction detach(parent, child) {\n  if (is.str(child.props.attach)) {\n    const {\n      root,\n      key\n    } = resolve(parent.object, child.props.attach);\n    const previous = child.previousAttach;\n    // When the previous value was undefined, it means the value was never set to begin with\n    if (previous === undefined) delete root[key];\n    // Otherwise set the previous value\n    else root[key] = previous;\n  } else {\n    child.previousAttach == null ? void 0 : child.previousAttach(parent.object, child.object);\n  }\n  delete child.previousAttach;\n}\nconst RESERVED_PROPS = [...REACT_INTERNAL_PROPS,\n// Instance props\n'args', 'dispose', 'attach', 'object', 'onUpdate',\n// Behavior flags\n'dispose'];\nconst MEMOIZED_PROTOTYPES = new Map();\nfunction getMemoizedPrototype(root) {\n  let ctor = MEMOIZED_PROTOTYPES.get(root.constructor);\n  try {\n    if (!ctor) {\n      ctor = new root.constructor();\n      MEMOIZED_PROTOTYPES.set(root.constructor, ctor);\n    }\n  } catch (e) {\n    // ...\n  }\n  return ctor;\n}\n\n// This function prepares a set of changes to be applied to the instance\nfunction diffProps(instance, newProps) {\n  const changedProps = {};\n\n  // Sort through props\n  for (const prop in newProps) {\n    // Skip reserved keys\n    if (RESERVED_PROPS.includes(prop)) continue;\n    // Skip if props match\n    if (is.equ(newProps[prop], instance.props[prop])) continue;\n\n    // Props changed, add them\n    changedProps[prop] = newProps[prop];\n\n    // Reset pierced props\n    for (const other in newProps) {\n      if (other.startsWith(`${prop}-`)) changedProps[other] = newProps[other];\n    }\n  }\n\n  // Reset removed props for HMR\n  for (const prop in instance.props) {\n    if (RESERVED_PROPS.includes(prop) || newProps.hasOwnProperty(prop)) continue;\n    const {\n      root,\n      key\n    } = resolve(instance.object, prop);\n\n    // https://github.com/mrdoob/three.js/issues/21209\n    // HMR/fast-refresh relies on the ability to cancel out props, but threejs\n    // has no means to do this. Hence we curate a small collection of value-classes\n    // with their respective constructor/set arguments\n    // For removed props, try to set default values, if possible\n    if (root.constructor && root.constructor.length === 0) {\n      // create a blank slate of the instance and copy the particular parameter.\n      const ctor = getMemoizedPrototype(root);\n      if (!is.und(ctor)) changedProps[key] = ctor[key];\n    } else {\n      // instance does not have constructor, just set it to 0\n      changedProps[key] = 0;\n    }\n  }\n  return changedProps;\n}\n\n// https://github.com/mrdoob/three.js/pull/27042\n// https://github.com/mrdoob/three.js/pull/22748\nconst colorMaps = ['map', 'emissiveMap', 'sheenColorMap', 'specularColorMap', 'envMap'];\nconst EVENT_REGEX = /^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/;\n// This function applies a set of changes to the instance\nfunction applyProps(object, props) {\n  var _instance$object;\n  const instance = object.__r3f;\n  const rootState = instance && findInitialRoot(instance).getState();\n  const prevHandlers = instance == null ? void 0 : instance.eventCount;\n  for (const prop in props) {\n    let value = props[prop];\n\n    // Don't mutate reserved keys\n    if (RESERVED_PROPS.includes(prop)) continue;\n\n    // Deal with pointer events, including removing them if undefined\n    if (instance && EVENT_REGEX.test(prop)) {\n      if (typeof value === 'function') instance.handlers[prop] = value;else delete instance.handlers[prop];\n      instance.eventCount = Object.keys(instance.handlers).length;\n      continue;\n    }\n\n    // Ignore setting undefined props\n    // https://github.com/pmndrs/react-three-fiber/issues/274\n    if (value === undefined) continue;\n    let {\n      root,\n      key,\n      target\n    } = resolve(object, prop);\n\n    // Layers must be written to the mask property\n    if (target instanceof THREE.Layers && value instanceof THREE.Layers) {\n      target.mask = value.mask;\n    }\n    // Set colors if valid color representation for automatic conversion (copy)\n    else if (target instanceof THREE.Color && isColorRepresentation(value)) {\n      target.set(value);\n    }\n    // Copy if properties match signatures and implement math interface (likely read-only)\n    else if (target !== null && typeof target === 'object' && typeof target.set === 'function' && typeof target.copy === 'function' && value != null && value.constructor && target.constructor === value.constructor) {\n      target.copy(value);\n    }\n    // Set array types\n    else if (target !== null && typeof target === 'object' && typeof target.set === 'function' && Array.isArray(value)) {\n      if (typeof target.fromArray === 'function') target.fromArray(value);else target.set(...value);\n    }\n    // Set literal types\n    else if (target !== null && typeof target === 'object' && typeof target.set === 'function' && typeof value === 'number') {\n      // Allow setting array scalars\n      if (typeof target.setScalar === 'function') target.setScalar(value);\n      // Otherwise just set single value\n      else target.set(value);\n    }\n    // Else, just overwrite the value\n    else {\n      var _root$key;\n      root[key] = value;\n\n      // Auto-convert sRGB texture parameters for built-in materials\n      // https://github.com/pmndrs/react-three-fiber/issues/344\n      // https://github.com/mrdoob/three.js/pull/25857\n      if (rootState && !rootState.linear && colorMaps.includes(key) && (_root$key = root[key]) != null && _root$key.isTexture &&\n      // sRGB textures must be RGBA8 since r137 https://github.com/mrdoob/three.js/pull/23129\n      root[key].format === THREE.RGBAFormat && root[key].type === THREE.UnsignedByteType) {\n        // NOTE: this cannot be set from the renderer (e.g. sRGB source textures rendered to P3)\n        root[key].colorSpace = THREE.SRGBColorSpace;\n      }\n    }\n  }\n\n  // Register event handlers\n  if (instance != null && instance.parent && rootState != null && rootState.internal && (_instance$object = instance.object) != null && _instance$object.isObject3D && prevHandlers !== instance.eventCount) {\n    const object = instance.object;\n    // Pre-emptively remove the instance from the interaction manager\n    const index = rootState.internal.interaction.indexOf(object);\n    if (index > -1) rootState.internal.interaction.splice(index, 1);\n    // Add the instance to the interaction manager only when it has handlers\n    if (instance.eventCount && object.raycast !== null) {\n      rootState.internal.interaction.push(object);\n    }\n  }\n\n  // Auto-attach geometries and materials\n  if (instance && instance.props.attach === undefined) {\n    if (instance.object.isBufferGeometry) instance.props.attach = 'geometry';else if (instance.object.isMaterial) instance.props.attach = 'material';\n  }\n\n  // Instance was updated, request a frame\n  if (instance) invalidateInstance(instance);\n  return object;\n}\nfunction invalidateInstance(instance) {\n  var _instance$root;\n  if (!instance.parent) return;\n  instance.props.onUpdate == null ? void 0 : instance.props.onUpdate(instance.object);\n  const state = (_instance$root = instance.root) == null ? void 0 : _instance$root.getState == null ? void 0 : _instance$root.getState();\n  if (state && state.internal.frames === 0) state.invalidate();\n}\nfunction updateCamera(camera, size) {\n  // Do not mess with the camera if it belongs to the user\n  // https://github.com/pmndrs/react-three-fiber/issues/92\n  if (camera.manual) return;\n  if (isOrthographicCamera(camera)) {\n    camera.left = size.width / -2;\n    camera.right = size.width / 2;\n    camera.top = size.height / 2;\n    camera.bottom = size.height / -2;\n  } else {\n    camera.aspect = size.width / size.height;\n  }\n  camera.updateProjectionMatrix();\n}\nconst isObject3D = object => object == null ? void 0 : object.isObject3D;\n\nfunction makeId(event) {\n  return (event.eventObject || event.object).uuid + '/' + event.index + event.instanceId;\n}\n\n/**\r\n * Release pointer captures.\r\n * This is called by releasePointerCapture in the API, and when an object is removed.\r\n */\nfunction releaseInternalPointerCapture(capturedMap, obj, captures, pointerId) {\n  const captureData = captures.get(obj);\n  if (captureData) {\n    captures.delete(obj);\n    // If this was the last capturing object for this pointer\n    if (captures.size === 0) {\n      capturedMap.delete(pointerId);\n      captureData.target.releasePointerCapture(pointerId);\n    }\n  }\n}\nfunction removeInteractivity(store, object) {\n  const {\n    internal\n  } = store.getState();\n  // Removes every trace of an object from the data store\n  internal.interaction = internal.interaction.filter(o => o !== object);\n  internal.initialHits = internal.initialHits.filter(o => o !== object);\n  internal.hovered.forEach((value, key) => {\n    if (value.eventObject === object || value.object === object) {\n      // Clear out intersects, they are outdated by now\n      internal.hovered.delete(key);\n    }\n  });\n  internal.capturedMap.forEach((captures, pointerId) => {\n    releaseInternalPointerCapture(internal.capturedMap, object, captures, pointerId);\n  });\n}\nfunction createEvents(store) {\n  /** Calculates delta */\n  function calculateDistance(event) {\n    const {\n      internal\n    } = store.getState();\n    const dx = event.offsetX - internal.initialClick[0];\n    const dy = event.offsetY - internal.initialClick[1];\n    return Math.round(Math.sqrt(dx * dx + dy * dy));\n  }\n\n  /** Returns true if an instance has a valid pointer-event registered, this excludes scroll, clicks etc */\n  function filterPointerEvents(objects) {\n    return objects.filter(obj => ['Move', 'Over', 'Enter', 'Out', 'Leave'].some(name => {\n      var _r3f;\n      return (_r3f = obj.__r3f) == null ? void 0 : _r3f.handlers['onPointer' + name];\n    }));\n  }\n  function intersect(event, filter) {\n    const state = store.getState();\n    const duplicates = new Set();\n    const intersections = [];\n    // Allow callers to eliminate event objects\n    const eventsObjects = filter ? filter(state.internal.interaction) : state.internal.interaction;\n    // Reset all raycaster cameras to undefined\n    for (let i = 0; i < eventsObjects.length; i++) {\n      const state = getRootState(eventsObjects[i]);\n      if (state) {\n        state.raycaster.camera = undefined;\n      }\n    }\n    if (!state.previousRoot) {\n      // Make sure root-level pointer and ray are set up\n      state.events.compute == null ? void 0 : state.events.compute(event, state);\n    }\n    function handleRaycast(obj) {\n      const state = getRootState(obj);\n      // Skip event handling when noEvents is set, or when the raycasters camera is null\n      if (!state || !state.events.enabled || state.raycaster.camera === null) return [];\n\n      // When the camera is undefined we have to call the event layers update function\n      if (state.raycaster.camera === undefined) {\n        var _state$previousRoot;\n        state.events.compute == null ? void 0 : state.events.compute(event, state, (_state$previousRoot = state.previousRoot) == null ? void 0 : _state$previousRoot.getState());\n        // If the camera is still undefined we have to skip this layer entirely\n        if (state.raycaster.camera === undefined) state.raycaster.camera = null;\n      }\n\n      // Intersect object by object\n      return state.raycaster.camera ? state.raycaster.intersectObject(obj, true) : [];\n    }\n\n    // Collect events\n    let hits = eventsObjects\n    // Intersect objects\n    .flatMap(handleRaycast)\n    // Sort by event priority and distance\n    .sort((a, b) => {\n      const aState = getRootState(a.object);\n      const bState = getRootState(b.object);\n      if (!aState || !bState) return a.distance - b.distance;\n      return bState.events.priority - aState.events.priority || a.distance - b.distance;\n    })\n    // Filter out duplicates\n    .filter(item => {\n      const id = makeId(item);\n      if (duplicates.has(id)) return false;\n      duplicates.add(id);\n      return true;\n    });\n\n    // https://github.com/mrdoob/three.js/issues/16031\n    // Allow custom userland intersect sort order, this likely only makes sense on the root filter\n    if (state.events.filter) hits = state.events.filter(hits, state);\n\n    // Bubble up the events, find the event source (eventObject)\n    for (const hit of hits) {\n      let eventObject = hit.object;\n      // Bubble event up\n      while (eventObject) {\n        var _r3f2;\n        if ((_r3f2 = eventObject.__r3f) != null && _r3f2.eventCount) intersections.push({\n          ...hit,\n          eventObject\n        });\n        eventObject = eventObject.parent;\n      }\n    }\n\n    // If the interaction is captured, make all capturing targets part of the intersect.\n    if ('pointerId' in event && state.internal.capturedMap.has(event.pointerId)) {\n      for (let captureData of state.internal.capturedMap.get(event.pointerId).values()) {\n        if (!duplicates.has(makeId(captureData.intersection))) intersections.push(captureData.intersection);\n      }\n    }\n    return intersections;\n  }\n\n  /**  Handles intersections by forwarding them to handlers */\n  function handleIntersects(intersections, event, delta, callback) {\n    // If anything has been found, forward it to the event listeners\n    if (intersections.length) {\n      const localState = {\n        stopped: false\n      };\n      for (const hit of intersections) {\n        let state = getRootState(hit.object);\n\n        // If the object is not managed by R3F, it might be parented to an element which is.\n        // Traverse upwards until we find a managed parent and use its state instead.\n        if (!state) {\n          hit.object.traverseAncestors(obj => {\n            const parentState = getRootState(obj);\n            if (parentState) {\n              state = parentState;\n              return false;\n            }\n          });\n        }\n        if (state) {\n          const {\n            raycaster,\n            pointer,\n            camera,\n            internal\n          } = state;\n          const unprojectedPoint = new THREE.Vector3(pointer.x, pointer.y, 0).unproject(camera);\n          const hasPointerCapture = id => {\n            var _internal$capturedMap, _internal$capturedMap2;\n            return (_internal$capturedMap = (_internal$capturedMap2 = internal.capturedMap.get(id)) == null ? void 0 : _internal$capturedMap2.has(hit.eventObject)) != null ? _internal$capturedMap : false;\n          };\n          const setPointerCapture = id => {\n            const captureData = {\n              intersection: hit,\n              target: event.target\n            };\n            if (internal.capturedMap.has(id)) {\n              // if the pointerId was previously captured, we add the hit to the\n              // event capturedMap.\n              internal.capturedMap.get(id).set(hit.eventObject, captureData);\n            } else {\n              // if the pointerId was not previously captured, we create a map\n              // containing the hitObject, and the hit. hitObject is used for\n              // faster access.\n              internal.capturedMap.set(id, new Map([[hit.eventObject, captureData]]));\n            }\n            event.target.setPointerCapture(id);\n          };\n          const releasePointerCapture = id => {\n            const captures = internal.capturedMap.get(id);\n            if (captures) {\n              releaseInternalPointerCapture(internal.capturedMap, hit.eventObject, captures, id);\n            }\n          };\n\n          // Add native event props\n          let extractEventProps = {};\n          // This iterates over the event's properties including the inherited ones. Native PointerEvents have most of their props as getters which are inherited, but polyfilled PointerEvents have them all as their own properties (i.e. not inherited). We can't use Object.keys() or Object.entries() as they only return \"own\" properties; nor Object.getPrototypeOf(event) as that *doesn't* return \"own\" properties, only inherited ones.\n          for (let prop in event) {\n            let property = event[prop];\n            // Only copy over atomics, leave functions alone as these should be\n            // called as event.nativeEvent.fn()\n            if (typeof property !== 'function') extractEventProps[prop] = property;\n          }\n          let raycastEvent = {\n            ...hit,\n            ...extractEventProps,\n            pointer,\n            intersections,\n            stopped: localState.stopped,\n            delta,\n            unprojectedPoint,\n            ray: raycaster.ray,\n            camera: camera,\n            // Hijack stopPropagation, which just sets a flag\n            stopPropagation() {\n              // https://github.com/pmndrs/react-three-fiber/issues/596\n              // Events are not allowed to stop propagation if the pointer has been captured\n              const capturesForPointer = 'pointerId' in event && internal.capturedMap.get(event.pointerId);\n\n              // We only authorize stopPropagation...\n              if (\n              // ...if this pointer hasn't been captured\n              !capturesForPointer ||\n              // ... or if the hit object is capturing the pointer\n              capturesForPointer.has(hit.eventObject)) {\n                raycastEvent.stopped = localState.stopped = true;\n                // Propagation is stopped, remove all other hover records\n                // An event handler is only allowed to flush other handlers if it is hovered itself\n                if (internal.hovered.size && Array.from(internal.hovered.values()).find(i => i.eventObject === hit.eventObject)) {\n                  // Objects cannot flush out higher up objects that have already caught the event\n                  const higher = intersections.slice(0, intersections.indexOf(hit));\n                  cancelPointer([...higher, hit]);\n                }\n              }\n            },\n            // there should be a distinction between target and currentTarget\n            target: {\n              hasPointerCapture,\n              setPointerCapture,\n              releasePointerCapture\n            },\n            currentTarget: {\n              hasPointerCapture,\n              setPointerCapture,\n              releasePointerCapture\n            },\n            nativeEvent: event\n          };\n\n          // Call subscribers\n          callback(raycastEvent);\n          // Event bubbling may be interrupted by stopPropagation\n          if (localState.stopped === true) break;\n        }\n      }\n    }\n    return intersections;\n  }\n  function cancelPointer(intersections) {\n    const {\n      internal\n    } = store.getState();\n    for (const hoveredObj of internal.hovered.values()) {\n      // When no objects were hit or the the hovered object wasn't found underneath the cursor\n      // we call onPointerOut and delete the object from the hovered-elements map\n      if (!intersections.length || !intersections.find(hit => hit.object === hoveredObj.object && hit.index === hoveredObj.index && hit.instanceId === hoveredObj.instanceId)) {\n        const eventObject = hoveredObj.eventObject;\n        const instance = eventObject.__r3f;\n        internal.hovered.delete(makeId(hoveredObj));\n        if (instance != null && instance.eventCount) {\n          const handlers = instance.handlers;\n          // Clear out intersects, they are outdated by now\n          const data = {\n            ...hoveredObj,\n            intersections\n          };\n          handlers.onPointerOut == null ? void 0 : handlers.onPointerOut(data);\n          handlers.onPointerLeave == null ? void 0 : handlers.onPointerLeave(data);\n        }\n      }\n    }\n  }\n  function pointerMissed(event, objects) {\n    for (let i = 0; i < objects.length; i++) {\n      const instance = objects[i].__r3f;\n      instance == null ? void 0 : instance.handlers.onPointerMissed == null ? void 0 : instance.handlers.onPointerMissed(event);\n    }\n  }\n  function handlePointer(name) {\n    // Deal with cancelation\n    switch (name) {\n      case 'onPointerLeave':\n      case 'onPointerCancel':\n        return () => cancelPointer([]);\n      case 'onLostPointerCapture':\n        return event => {\n          const {\n            internal\n          } = store.getState();\n          if ('pointerId' in event && internal.capturedMap.has(event.pointerId)) {\n            // If the object event interface had onLostPointerCapture, we'd call it here on every\n            // object that's getting removed. We call it on the next frame because onLostPointerCapture\n            // fires before onPointerUp. Otherwise pointerUp would never be called if the event didn't\n            // happen in the object it originated from, leaving components in a in-between state.\n            requestAnimationFrame(() => {\n              // Only release if pointer-up didn't do it already\n              if (internal.capturedMap.has(event.pointerId)) {\n                internal.capturedMap.delete(event.pointerId);\n                cancelPointer([]);\n              }\n            });\n          }\n        };\n    }\n\n    // Any other pointer goes here ...\n    return function handleEvent(event) {\n      const {\n        onPointerMissed,\n        internal\n      } = store.getState();\n\n      // prepareRay(event)\n      internal.lastEvent.current = event;\n\n      // Get fresh intersects\n      const isPointerMove = name === 'onPointerMove';\n      const isClickEvent = name === 'onClick' || name === 'onContextMenu' || name === 'onDoubleClick';\n      const filter = isPointerMove ? filterPointerEvents : undefined;\n      const hits = intersect(event, filter);\n      const delta = isClickEvent ? calculateDistance(event) : 0;\n\n      // Save initial coordinates on pointer-down\n      if (name === 'onPointerDown') {\n        internal.initialClick = [event.offsetX, event.offsetY];\n        internal.initialHits = hits.map(hit => hit.eventObject);\n      }\n\n      // If a click yields no results, pass it back to the user as a miss\n      // Missed events have to come first in order to establish user-land side-effect clean up\n      if (isClickEvent && !hits.length) {\n        if (delta <= 2) {\n          pointerMissed(event, internal.interaction);\n          if (onPointerMissed) onPointerMissed(event);\n        }\n      }\n      // Take care of unhover\n      if (isPointerMove) cancelPointer(hits);\n      function onIntersect(data) {\n        const eventObject = data.eventObject;\n        const instance = eventObject.__r3f;\n\n        // Check presence of handlers\n        if (!(instance != null && instance.eventCount)) return;\n        const handlers = instance.handlers;\n\n        /*\r\n        MAYBE TODO, DELETE IF NOT: \r\n          Check if the object is captured, captured events should not have intersects running in parallel\r\n          But wouldn't it be better to just replace capturedMap with a single entry?\r\n          Also, are we OK with straight up making picking up multiple objects impossible?\r\n          \r\n        const pointerId = (data as ThreeEvent<PointerEvent>).pointerId        \r\n        if (pointerId !== undefined) {\r\n          const capturedMeshSet = internal.capturedMap.get(pointerId)\r\n          if (capturedMeshSet) {\r\n            const captured = capturedMeshSet.get(eventObject)\r\n            if (captured && captured.localState.stopped) return\r\n          }\r\n        }*/\n\n        if (isPointerMove) {\n          // Move event ...\n          if (handlers.onPointerOver || handlers.onPointerEnter || handlers.onPointerOut || handlers.onPointerLeave) {\n            // When enter or out is present take care of hover-state\n            const id = makeId(data);\n            const hoveredItem = internal.hovered.get(id);\n            if (!hoveredItem) {\n              // If the object wasn't previously hovered, book it and call its handler\n              internal.hovered.set(id, data);\n              handlers.onPointerOver == null ? void 0 : handlers.onPointerOver(data);\n              handlers.onPointerEnter == null ? void 0 : handlers.onPointerEnter(data);\n            } else if (hoveredItem.stopped) {\n              // If the object was previously hovered and stopped, we shouldn't allow other items to proceed\n              data.stopPropagation();\n            }\n          }\n          // Call mouse move\n          handlers.onPointerMove == null ? void 0 : handlers.onPointerMove(data);\n        } else {\n          // All other events ...\n          const handler = handlers[name];\n          if (handler) {\n            // Forward all events back to their respective handlers with the exception of click events,\n            // which must use the initial target\n            if (!isClickEvent || internal.initialHits.includes(eventObject)) {\n              // Missed events have to come first\n              pointerMissed(event, internal.interaction.filter(object => !internal.initialHits.includes(object)));\n              // Now call the handler\n              handler(data);\n            }\n          } else {\n            // Trigger onPointerMissed on all elements that have pointer over/out handlers, but not click and weren't hit\n            if (isClickEvent && internal.initialHits.includes(eventObject)) {\n              pointerMissed(event, internal.interaction.filter(object => !internal.initialHits.includes(object)));\n            }\n          }\n        }\n      }\n      handleIntersects(hits, event, delta, onIntersect);\n    };\n  }\n  return {\n    handlePointer\n  };\n}\n\nconst isRenderer = def => !!(def != null && def.render);\nconst context = /* @__PURE__ */React.createContext(null);\nconst createStore = (invalidate, advance) => {\n  const rootStore = createWithEqualityFn((set, get) => {\n    const position = new THREE.Vector3();\n    const defaultTarget = new THREE.Vector3();\n    const tempTarget = new THREE.Vector3();\n    function getCurrentViewport(camera = get().camera, target = defaultTarget, size = get().size) {\n      const {\n        width,\n        height,\n        top,\n        left\n      } = size;\n      const aspect = width / height;\n      if (target.isVector3) tempTarget.copy(target);else tempTarget.set(...target);\n      const distance = camera.getWorldPosition(position).distanceTo(tempTarget);\n      if (isOrthographicCamera(camera)) {\n        return {\n          width: width / camera.zoom,\n          height: height / camera.zoom,\n          top,\n          left,\n          factor: 1,\n          distance,\n          aspect\n        };\n      } else {\n        const fov = camera.fov * Math.PI / 180; // convert vertical fov to radians\n        const h = 2 * Math.tan(fov / 2) * distance; // visible height\n        const w = h * (width / height);\n        return {\n          width: w,\n          height: h,\n          top,\n          left,\n          factor: width / w,\n          distance,\n          aspect\n        };\n      }\n    }\n    let performanceTimeout = undefined;\n    const setPerformanceCurrent = current => set(state => ({\n      performance: {\n        ...state.performance,\n        current\n      }\n    }));\n    const pointer = new THREE.Vector2();\n    const rootState = {\n      set,\n      get,\n      // Mock objects that have to be configured\n      gl: null,\n      camera: null,\n      raycaster: null,\n      events: {\n        priority: 1,\n        enabled: true,\n        connected: false\n      },\n      scene: null,\n      xr: null,\n      invalidate: (frames = 1) => invalidate(get(), frames),\n      advance: (timestamp, runGlobalEffects) => advance(timestamp, runGlobalEffects, get()),\n      legacy: false,\n      linear: false,\n      flat: false,\n      controls: null,\n      clock: new THREE.Clock(),\n      pointer,\n      mouse: pointer,\n      frameloop: 'always',\n      onPointerMissed: undefined,\n      performance: {\n        current: 1,\n        min: 0.5,\n        max: 1,\n        debounce: 200,\n        regress: () => {\n          const state = get();\n          // Clear timeout\n          if (performanceTimeout) clearTimeout(performanceTimeout);\n          // Set lower bound performance\n          if (state.performance.current !== state.performance.min) setPerformanceCurrent(state.performance.min);\n          // Go back to upper bound performance after a while unless something regresses meanwhile\n          performanceTimeout = setTimeout(() => setPerformanceCurrent(get().performance.max), state.performance.debounce);\n        }\n      },\n      size: {\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0\n      },\n      viewport: {\n        initialDpr: 0,\n        dpr: 0,\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        aspect: 0,\n        distance: 0,\n        factor: 0,\n        getCurrentViewport\n      },\n      setEvents: events => set(state => ({\n        ...state,\n        events: {\n          ...state.events,\n          ...events\n        }\n      })),\n      setSize: (width, height, top = 0, left = 0) => {\n        const camera = get().camera;\n        const size = {\n          width,\n          height,\n          top,\n          left\n        };\n        set(state => ({\n          size,\n          viewport: {\n            ...state.viewport,\n            ...getCurrentViewport(camera, defaultTarget, size)\n          }\n        }));\n      },\n      setDpr: dpr => set(state => {\n        const resolved = calculateDpr(dpr);\n        return {\n          viewport: {\n            ...state.viewport,\n            dpr: resolved,\n            initialDpr: state.viewport.initialDpr || resolved\n          }\n        };\n      }),\n      setFrameloop: (frameloop = 'always') => {\n        const clock = get().clock;\n\n        // if frameloop === \"never\" clock.elapsedTime is updated using advance(timestamp)\n        clock.stop();\n        clock.elapsedTime = 0;\n        if (frameloop !== 'never') {\n          clock.start();\n          clock.elapsedTime = 0;\n        }\n        set(() => ({\n          frameloop\n        }));\n      },\n      previousRoot: undefined,\n      internal: {\n        // Events\n        interaction: [],\n        hovered: new Map(),\n        subscribers: [],\n        initialClick: [0, 0],\n        initialHits: [],\n        capturedMap: new Map(),\n        lastEvent: /*#__PURE__*/React.createRef(),\n        // Updates\n        active: false,\n        frames: 0,\n        priority: 0,\n        subscribe: (ref, priority, store) => {\n          const internal = get().internal;\n          // If this subscription was given a priority, it takes rendering into its own hands\n          // For that reason we switch off automatic rendering and increase the manual flag\n          // As long as this flag is positive there can be no internal rendering at all\n          // because there could be multiple render subscriptions\n          internal.priority = internal.priority + (priority > 0 ? 1 : 0);\n          internal.subscribers.push({\n            ref,\n            priority,\n            store\n          });\n          // Register subscriber and sort layers from lowest to highest, meaning,\n          // highest priority renders last (on top of the other frames)\n          internal.subscribers = internal.subscribers.sort((a, b) => a.priority - b.priority);\n          return () => {\n            const internal = get().internal;\n            if (internal != null && internal.subscribers) {\n              // Decrease manual flag if this subscription had a priority\n              internal.priority = internal.priority - (priority > 0 ? 1 : 0);\n              // Remove subscriber from list\n              internal.subscribers = internal.subscribers.filter(s => s.ref !== ref);\n            }\n          };\n        }\n      }\n    };\n    return rootState;\n  });\n  const state = rootStore.getState();\n  let oldSize = state.size;\n  let oldDpr = state.viewport.dpr;\n  let oldCamera = state.camera;\n  rootStore.subscribe(() => {\n    const {\n      camera,\n      size,\n      viewport,\n      gl,\n      set\n    } = rootStore.getState();\n\n    // Resize camera and renderer on changes to size and pixelratio\n    if (size.width !== oldSize.width || size.height !== oldSize.height || viewport.dpr !== oldDpr) {\n      oldSize = size;\n      oldDpr = viewport.dpr;\n      // Update camera & renderer\n      updateCamera(camera, size);\n      if (viewport.dpr > 0) gl.setPixelRatio(viewport.dpr);\n      const updateStyle = typeof HTMLCanvasElement !== 'undefined' && gl.domElement instanceof HTMLCanvasElement;\n      gl.setSize(size.width, size.height, updateStyle);\n    }\n\n    // Update viewport once the camera changes\n    if (camera !== oldCamera) {\n      oldCamera = camera;\n      // Update viewport\n      set(state => ({\n        viewport: {\n          ...state.viewport,\n          ...state.viewport.getCurrentViewport(camera)\n        }\n      }));\n    }\n  });\n\n  // Invalidate on any change\n  rootStore.subscribe(state => invalidate(state));\n\n  // Return root state\n  return rootStore;\n};\n\n/**\r\n * Exposes an object's {@link Instance}.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#useInstanceHandle\r\n *\r\n * **Note**: this is an escape hatch to react-internal fields. Expect this to change significantly between versions.\r\n */\nfunction useInstanceHandle(ref) {\n  const instance = React.useRef(null);\n  React.useImperativeHandle(instance, () => ref.current.__r3f, [ref]);\n  return instance;\n}\n\n/**\r\n * Returns the R3F Canvas' Zustand store. Useful for [transient updates](https://github.com/pmndrs/zustand#transient-updates-for-often-occurring-state-changes).\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#usestore\r\n */\nfunction useStore() {\n  const store = React.useContext(context);\n  if (!store) throw new Error('R3F: Hooks can only be used within the Canvas component!');\n  return store;\n}\n\n/**\r\n * Accesses R3F's internal state, containing renderer, canvas, scene, etc.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#usethree\r\n */\nfunction useThree(selector = state => state, equalityFn) {\n  return useStore()(selector, equalityFn);\n}\n\n/**\r\n * Executes a callback before render in a shared frame loop.\r\n * Can order effects with render priority or manually render with a positive priority.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#useframe\r\n */\nfunction useFrame(callback, renderPriority = 0) {\n  const store = useStore();\n  const subscribe = store.getState().internal.subscribe;\n  // Memoize ref\n  const ref = useMutableCallback(callback);\n  // Subscribe on mount, unsubscribe on unmount\n  useIsomorphicLayoutEffect(() => subscribe(ref, renderPriority, store), [renderPriority, subscribe, store]);\n  return null;\n}\n\n/**\r\n * Returns a node graph of an object with named nodes & materials.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#usegraph\r\n */\nfunction useGraph(object) {\n  return React.useMemo(() => buildGraph(object), [object]);\n}\nconst memoizedLoaders = new WeakMap();\nconst isConstructor$1 = value => {\n  var _value$prototype;\n  return typeof value === 'function' && (value == null ? void 0 : (_value$prototype = value.prototype) == null ? void 0 : _value$prototype.constructor) === value;\n};\nfunction loadingFn(extensions, onProgress) {\n  return function (Proto, ...input) {\n    let loader;\n\n    // Construct and cache loader if constructor was passed\n    if (isConstructor$1(Proto)) {\n      loader = memoizedLoaders.get(Proto);\n      if (!loader) {\n        loader = new Proto();\n        memoizedLoaders.set(Proto, loader);\n      }\n    } else {\n      loader = Proto;\n    }\n\n    // Apply loader extensions\n    if (extensions) extensions(loader);\n\n    // Go through the urls and load them\n    return Promise.all(input.map(input => new Promise((res, reject) => loader.load(input, data => {\n      if (isObject3D(data == null ? void 0 : data.scene)) Object.assign(data, buildGraph(data.scene));\n      res(data);\n    }, onProgress, error => reject(new Error(`Could not load ${input}: ${error == null ? void 0 : error.message}`))))));\n  };\n}\n\n/**\r\n * Synchronously loads and caches assets with a three loader.\r\n *\r\n * Note: this hook's caller must be wrapped with `React.Suspense`\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#useloader\r\n */\nfunction useLoader(loader, input, extensions, onProgress) {\n  // Use suspense to load async assets\n  const keys = Array.isArray(input) ? input : [input];\n  const results = suspend(loadingFn(extensions, onProgress), [loader, ...keys], {\n    equal: is.equ\n  });\n  // Return the object(s)\n  return Array.isArray(input) ? results : results[0];\n}\n\n/**\r\n * Preloads an asset into cache as a side-effect.\r\n */\nuseLoader.preload = function (loader, input, extensions) {\n  const keys = Array.isArray(input) ? input : [input];\n  return preload(loadingFn(extensions), [loader, ...keys]);\n};\n\n/**\r\n * Removes a loaded asset from cache.\r\n */\nuseLoader.clear = function (loader, input) {\n  const keys = Array.isArray(input) ? input : [input];\n  return clear([loader, ...keys]);\n};\n\nfunction createReconciler(config) {\n  const reconciler = Reconciler(config);\n  reconciler.injectIntoDevTools({\n    bundleType: typeof process !== 'undefined' && process.env.NODE_ENV !== 'production' ? 1 : 0,\n    rendererPackageName: '@react-three/fiber',\n    version: React.version\n  });\n  return reconciler;\n}\nconst NoEventPriority = 0;\n\n// TODO: handle constructor overloads\n// https://github.com/pmndrs/react-three-fiber/pull/2931\n// https://github.com/microsoft/TypeScript/issues/37079\n\nconst catalogue = {};\nconst PREFIX_REGEX = /^three(?=[A-Z])/;\nconst toPascalCase = type => `${type[0].toUpperCase()}${type.slice(1)}`;\nlet i = 0;\nconst isConstructor = object => typeof object === 'function';\nfunction extend(objects) {\n  if (isConstructor(objects)) {\n    const Component = `${i++}`;\n    catalogue[Component] = objects;\n    return Component;\n  } else {\n    Object.assign(catalogue, objects);\n  }\n}\nfunction validateInstance(type, props) {\n  // Get target from catalogue\n  const name = toPascalCase(type);\n  const target = catalogue[name];\n\n  // Validate element target\n  if (type !== 'primitive' && !target) throw new Error(`R3F: ${name} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);\n\n  // Validate primitives\n  if (type === 'primitive' && !props.object) throw new Error(`R3F: Primitives without 'object' are invalid!`);\n\n  // Throw if an object or literal was passed for args\n  if (props.args !== undefined && !Array.isArray(props.args)) throw new Error('R3F: The args prop must be an array!');\n}\nfunction createInstance(type, props, root) {\n  var _props$object;\n  // Remove three* prefix from elements if native element not present\n  type = toPascalCase(type) in catalogue ? type : type.replace(PREFIX_REGEX, '');\n  validateInstance(type, props);\n\n  // Regenerate the R3F instance for primitives to simulate a new object\n  if (type === 'primitive' && (_props$object = props.object) != null && _props$object.__r3f) delete props.object.__r3f;\n  return prepare(props.object, root, type, props);\n}\nfunction hideInstance(instance) {\n  if (!instance.isHidden) {\n    var _instance$parent;\n    if (instance.props.attach && (_instance$parent = instance.parent) != null && _instance$parent.object) {\n      detach(instance.parent, instance);\n    } else if (isObject3D(instance.object)) {\n      instance.object.visible = false;\n    }\n    instance.isHidden = true;\n    invalidateInstance(instance);\n  }\n}\nfunction unhideInstance(instance) {\n  if (instance.isHidden) {\n    var _instance$parent2;\n    if (instance.props.attach && (_instance$parent2 = instance.parent) != null && _instance$parent2.object) {\n      attach(instance.parent, instance);\n    } else if (isObject3D(instance.object) && instance.props.visible !== false) {\n      instance.object.visible = true;\n    }\n    instance.isHidden = false;\n    invalidateInstance(instance);\n  }\n}\n\n// https://github.com/facebook/react/issues/20271\n// This will make sure events and attach are only handled once when trees are complete\nfunction handleContainerEffects(parent, child, beforeChild) {\n  // Bail if tree isn't mounted or parent is not a container.\n  // This ensures that the tree is finalized and React won't discard results to Suspense\n  const state = child.root.getState();\n  if (!parent.parent && parent.object !== state.scene) return;\n\n  // Create & link object on first run\n  if (!child.object) {\n    var _child$props$object, _child$props$args;\n    // Get target from catalogue\n    const target = catalogue[toPascalCase(child.type)];\n\n    // Create object\n    child.object = (_child$props$object = child.props.object) != null ? _child$props$object : new target(...((_child$props$args = child.props.args) != null ? _child$props$args : []));\n    child.object.__r3f = child;\n  }\n\n  // Set initial props\n  applyProps(child.object, child.props);\n\n  // Append instance\n  if (child.props.attach) {\n    attach(parent, child);\n  } else if (isObject3D(child.object) && isObject3D(parent.object)) {\n    const childIndex = parent.object.children.indexOf(beforeChild == null ? void 0 : beforeChild.object);\n    if (beforeChild && childIndex !== -1) {\n      // If the child is already in the parent's children array, move it to the new position\n      // Otherwise, just insert it at the target position\n      const existingIndex = parent.object.children.indexOf(child.object);\n      if (existingIndex !== -1) {\n        parent.object.children.splice(existingIndex, 1);\n        const adjustedIndex = existingIndex < childIndex ? childIndex - 1 : childIndex;\n        parent.object.children.splice(adjustedIndex, 0, child.object);\n      } else {\n        child.object.parent = parent.object;\n        parent.object.children.splice(childIndex, 0, child.object);\n        child.object.dispatchEvent({\n          type: 'added'\n        });\n        parent.object.dispatchEvent({\n          type: 'childadded',\n          child: child.object\n        });\n      }\n    } else {\n      parent.object.add(child.object);\n    }\n  }\n\n  // Link subtree\n  for (const childInstance of child.children) handleContainerEffects(child, childInstance);\n\n  // Tree was updated, request a frame\n  invalidateInstance(child);\n}\nfunction appendChild(parent, child) {\n  if (!child) return;\n\n  // Link instances\n  child.parent = parent;\n  parent.children.push(child);\n\n  // Attach tree once complete\n  handleContainerEffects(parent, child);\n}\nfunction insertBefore(parent, child, beforeChild) {\n  if (!child || !beforeChild) return;\n\n  // Link instances\n  child.parent = parent;\n  const childIndex = parent.children.indexOf(beforeChild);\n  if (childIndex !== -1) parent.children.splice(childIndex, 0, child);else parent.children.push(child);\n\n  // Attach tree once complete\n  handleContainerEffects(parent, child, beforeChild);\n}\nfunction disposeOnIdle(object) {\n  if (typeof object.dispose === 'function') {\n    const handleDispose = () => {\n      try {\n        object.dispose();\n      } catch {\n        // no-op\n      }\n    };\n\n    // In a testing environment, cleanup immediately\n    if (typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined') handleDispose();\n    // Otherwise, using a real GPU so schedule cleanup to prevent stalls\n    else unstable_scheduleCallback(unstable_IdlePriority, handleDispose);\n  }\n}\nfunction removeChild(parent, child, dispose) {\n  if (!child) return;\n\n  // Unlink instances\n  child.parent = null;\n  const childIndex = parent.children.indexOf(child);\n  if (childIndex !== -1) parent.children.splice(childIndex, 1);\n\n  // Eagerly tear down tree\n  if (child.props.attach) {\n    detach(parent, child);\n  } else if (isObject3D(child.object) && isObject3D(parent.object)) {\n    parent.object.remove(child.object);\n    removeInteractivity(findInitialRoot(child), child.object);\n  }\n\n  // Allow objects to bail out of unmount disposal with dispose={null}\n  const shouldDispose = child.props.dispose !== null && dispose !== false;\n\n  // Recursively remove instance children\n  for (let i = child.children.length - 1; i >= 0; i--) {\n    const node = child.children[i];\n    removeChild(child, node, shouldDispose);\n  }\n  child.children.length = 0;\n\n  // Unlink instance object\n  delete child.object.__r3f;\n\n  // Dispose object whenever the reconciler feels like it.\n  // Never dispose of primitives because their state may be kept outside of React!\n  // In order for an object to be able to dispose it\n  //   - has a dispose method\n  //   - cannot be a <primitive object={...} />\n  //   - cannot be a THREE.Scene, because three has broken its own API\n  if (shouldDispose && child.type !== 'primitive' && child.object.type !== 'Scene') {\n    disposeOnIdle(child.object);\n  }\n\n  // Tree was updated, request a frame for top-level instance\n  if (dispose === undefined) invalidateInstance(child);\n}\nfunction setFiberRef(fiber, publicInstance) {\n  for (const _fiber of [fiber, fiber.alternate]) {\n    if (_fiber !== null) {\n      if (typeof _fiber.ref === 'function') {\n        _fiber.refCleanup == null ? void 0 : _fiber.refCleanup();\n        const cleanup = _fiber.ref(publicInstance);\n        if (typeof cleanup === 'function') _fiber.refCleanup = cleanup;\n      } else if (_fiber.ref) {\n        _fiber.ref.current = publicInstance;\n      }\n    }\n  }\n}\nconst reconstructed = [];\nfunction swapInstances() {\n  // Detach instance\n  for (const [instance] of reconstructed) {\n    const parent = instance.parent;\n    if (parent) {\n      if (instance.props.attach) {\n        detach(parent, instance);\n      } else if (isObject3D(instance.object) && isObject3D(parent.object)) {\n        parent.object.remove(instance.object);\n      }\n      for (const child of instance.children) {\n        if (child.props.attach) {\n          detach(instance, child);\n        } else if (isObject3D(child.object) && isObject3D(instance.object)) {\n          instance.object.remove(child.object);\n        }\n      }\n    }\n\n    // If the old instance is hidden, we need to unhide it.\n    // React assumes it can discard instances since they're pure for DOM.\n    // This isn't true for us since our lifetimes are impure and longliving.\n    // So, we manually check if an instance was hidden and unhide it.\n    if (instance.isHidden) unhideInstance(instance);\n\n    // Dispose of old object if able\n    if (instance.object.__r3f) delete instance.object.__r3f;\n    if (instance.type !== 'primitive') disposeOnIdle(instance.object);\n  }\n\n  // Update instance\n  for (const [instance, props, fiber] of reconstructed) {\n    instance.props = props;\n    const parent = instance.parent;\n    if (parent) {\n      var _instance$props$objec, _instance$props$args;\n      // Get target from catalogue\n      const target = catalogue[toPascalCase(instance.type)];\n\n      // Create object\n      instance.object = (_instance$props$objec = instance.props.object) != null ? _instance$props$objec : new target(...((_instance$props$args = instance.props.args) != null ? _instance$props$args : []));\n      instance.object.__r3f = instance;\n      setFiberRef(fiber, instance.object);\n\n      // Set initial props\n      applyProps(instance.object, instance.props);\n      if (instance.props.attach) {\n        attach(parent, instance);\n      } else if (isObject3D(instance.object) && isObject3D(parent.object)) {\n        parent.object.add(instance.object);\n      }\n      for (const child of instance.children) {\n        if (child.props.attach) {\n          attach(instance, child);\n        } else if (isObject3D(child.object) && isObject3D(instance.object)) {\n          instance.object.add(child.object);\n        }\n      }\n\n      // Tree was updated, request a frame\n      invalidateInstance(instance);\n    }\n  }\n  reconstructed.length = 0;\n}\n\n// Don't handle text instances, make it no-op\nconst handleTextInstance = () => {};\nconst NO_CONTEXT = {};\nlet currentUpdatePriority = NoEventPriority;\n\n// https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberFlags.js\nconst NoFlags = 0;\nconst Update = 4;\nconst reconciler = /* @__PURE__ */createReconciler({\n  isPrimaryRenderer: false,\n  warnsIfNotActing: false,\n  supportsMutation: true,\n  supportsPersistence: false,\n  supportsHydration: false,\n  createInstance,\n  removeChild,\n  appendChild,\n  appendInitialChild: appendChild,\n  insertBefore,\n  appendChildToContainer(container, child) {\n    const scene = container.getState().scene.__r3f;\n    if (!child || !scene) return;\n    appendChild(scene, child);\n  },\n  removeChildFromContainer(container, child) {\n    const scene = container.getState().scene.__r3f;\n    if (!child || !scene) return;\n    removeChild(scene, child);\n  },\n  insertInContainerBefore(container, child, beforeChild) {\n    const scene = container.getState().scene.__r3f;\n    if (!child || !beforeChild || !scene) return;\n    insertBefore(scene, child, beforeChild);\n  },\n  getRootHostContext: () => NO_CONTEXT,\n  getChildHostContext: () => NO_CONTEXT,\n  commitUpdate(instance, type, oldProps, newProps, fiber) {\n    var _newProps$args, _oldProps$args, _newProps$args2;\n    validateInstance(type, newProps);\n    let reconstruct = false;\n\n    // Reconstruct primitives if object prop changes\n    if (instance.type === 'primitive' && oldProps.object !== newProps.object) reconstruct = true;\n    // Reconstruct instance if args were added or removed\n    else if (((_newProps$args = newProps.args) == null ? void 0 : _newProps$args.length) !== ((_oldProps$args = oldProps.args) == null ? void 0 : _oldProps$args.length)) reconstruct = true;\n    // Reconstruct instance if args were changed\n    else if ((_newProps$args2 = newProps.args) != null && _newProps$args2.some((value, index) => {\n      var _oldProps$args2;\n      return value !== ((_oldProps$args2 = oldProps.args) == null ? void 0 : _oldProps$args2[index]);\n    })) reconstruct = true;\n\n    // Reconstruct when args or <primitive object={...} have changes\n    if (reconstruct) {\n      reconstructed.push([instance, {\n        ...newProps\n      }, fiber]);\n    } else {\n      // Create a diff-set, flag if there are any changes\n      const changedProps = diffProps(instance, newProps);\n      if (Object.keys(changedProps).length) {\n        Object.assign(instance.props, changedProps);\n        applyProps(instance.object, changedProps);\n      }\n    }\n\n    // Flush reconstructed siblings when we hit the last updated child in a sequence\n    const isTailSibling = fiber.sibling === null || (fiber.flags & Update) === NoFlags;\n    if (isTailSibling) swapInstances();\n  },\n  finalizeInitialChildren: () => false,\n  commitMount() {},\n  getPublicInstance: instance => instance == null ? void 0 : instance.object,\n  prepareForCommit: () => null,\n  preparePortalMount: container => prepare(container.getState().scene, container, '', {}),\n  resetAfterCommit: () => {},\n  shouldSetTextContent: () => false,\n  clearContainer: () => false,\n  hideInstance,\n  unhideInstance,\n  createTextInstance: handleTextInstance,\n  hideTextInstance: handleTextInstance,\n  unhideTextInstance: handleTextInstance,\n  scheduleTimeout: typeof setTimeout === 'function' ? setTimeout : undefined,\n  cancelTimeout: typeof clearTimeout === 'function' ? clearTimeout : undefined,\n  noTimeout: -1,\n  getInstanceFromNode: () => null,\n  beforeActiveInstanceBlur() {},\n  afterActiveInstanceBlur() {},\n  detachDeletedInstance() {},\n  prepareScopeUpdate() {},\n  getInstanceFromScope: () => null,\n  shouldAttemptEagerTransition: () => false,\n  trackSchedulerEvent: () => {},\n  resolveEventType: () => null,\n  resolveEventTimeStamp: () => -1.1,\n  requestPostPaintCallback() {},\n  maySuspendCommit: () => false,\n  preloadInstance: () => true,\n  // true indicates already loaded\n  startSuspendingCommit() {},\n  suspendInstance() {},\n  waitForCommitToBeReady: () => null,\n  NotPendingTransition: null,\n  // The reconciler types use the internal ReactContext with all the hidden properties\n  // so we have to cast from the public React.Context type\n  HostTransitionContext: /* @__PURE__ */React.createContext(null),\n  setCurrentUpdatePriority(newPriority) {\n    currentUpdatePriority = newPriority;\n  },\n  getCurrentUpdatePriority() {\n    return currentUpdatePriority;\n  },\n  resolveUpdatePriority() {\n    var _window$event;\n    if (currentUpdatePriority !== NoEventPriority) return currentUpdatePriority;\n    switch (typeof window !== 'undefined' && ((_window$event = window.event) == null ? void 0 : _window$event.type)) {\n      case 'click':\n      case 'contextmenu':\n      case 'dblclick':\n      case 'pointercancel':\n      case 'pointerdown':\n      case 'pointerup':\n        return DiscreteEventPriority;\n      case 'pointermove':\n      case 'pointerout':\n      case 'pointerover':\n      case 'pointerenter':\n      case 'pointerleave':\n      case 'wheel':\n        return ContinuousEventPriority;\n      default:\n        return DefaultEventPriority;\n    }\n  },\n  resetFormInstance() {}\n});\n\nconst _roots = new Map();\nconst shallowLoose = {\n  objects: 'shallow',\n  strict: false\n};\nfunction computeInitialSize(canvas, size) {\n  if (!size && typeof HTMLCanvasElement !== 'undefined' && canvas instanceof HTMLCanvasElement && canvas.parentElement) {\n    const {\n      width,\n      height,\n      top,\n      left\n    } = canvas.parentElement.getBoundingClientRect();\n    return {\n      width,\n      height,\n      top,\n      left\n    };\n  } else if (!size && typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return {\n      width: canvas.width,\n      height: canvas.height,\n      top: 0,\n      left: 0\n    };\n  }\n  return {\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n    ...size\n  };\n}\nfunction createRoot(canvas) {\n  // Check against mistaken use of createRoot\n  const prevRoot = _roots.get(canvas);\n  const prevFiber = prevRoot == null ? void 0 : prevRoot.fiber;\n  const prevStore = prevRoot == null ? void 0 : prevRoot.store;\n  if (prevRoot) console.warn('R3F.createRoot should only be called once!');\n\n  // Report when an error was detected in a previous render\n  // https://github.com/pmndrs/react-three-fiber/pull/2261\n  const logRecoverableError = typeof reportError === 'function' ?\n  // In modern browsers, reportError will dispatch an error event,\n  // emulating an uncaught JavaScript error.\n  reportError :\n  // In older browsers and test environments, fallback to console.error.\n  console.error;\n\n  // Create store\n  const store = prevStore || createStore(invalidate, advance);\n  // Create renderer\n  const fiber = prevFiber || reconciler.createContainer(store,\n  // container\n  ConcurrentRoot,\n  // tag\n  null,\n  // hydration callbacks\n  false,\n  // isStrictMode\n  null,\n  // concurrentUpdatesByDefaultOverride\n  '',\n  // identifierPrefix\n  logRecoverableError,\n  // onUncaughtError\n  logRecoverableError,\n  // onCaughtError\n  logRecoverableError,\n  // onRecoverableError\n  null // transitionCallbacks\n  );\n  // Map it\n  if (!prevRoot) _roots.set(canvas, {\n    fiber,\n    store\n  });\n\n  // Locals\n  let onCreated;\n  let lastCamera;\n  let configured = false;\n  let pending = null;\n  return {\n    async configure(props = {}) {\n      let resolve;\n      pending = new Promise(_resolve => resolve = _resolve);\n      let {\n        gl: glConfig,\n        size: propsSize,\n        scene: sceneOptions,\n        events,\n        onCreated: onCreatedCallback,\n        shadows = false,\n        linear = false,\n        flat = false,\n        legacy = false,\n        orthographic = false,\n        frameloop = 'always',\n        dpr = [1, 2],\n        performance,\n        raycaster: raycastOptions,\n        camera: cameraOptions,\n        onPointerMissed\n      } = props;\n      let state = store.getState();\n\n      // Set up renderer (one time only!)\n      let gl = state.gl;\n      if (!state.gl) {\n        const defaultProps = {\n          canvas: canvas,\n          powerPreference: 'high-performance',\n          antialias: true,\n          alpha: true\n        };\n        const customRenderer = typeof glConfig === 'function' ? await glConfig(defaultProps) : glConfig;\n        if (isRenderer(customRenderer)) {\n          gl = customRenderer;\n        } else {\n          gl = new THREE.WebGLRenderer({\n            ...defaultProps,\n            ...glConfig\n          });\n        }\n        state.set({\n          gl\n        });\n      }\n\n      // Set up raycaster (one time only!)\n      let raycaster = state.raycaster;\n      if (!raycaster) state.set({\n        raycaster: raycaster = new THREE.Raycaster()\n      });\n\n      // Set raycaster options\n      const {\n        params,\n        ...options\n      } = raycastOptions || {};\n      if (!is.equ(options, raycaster, shallowLoose)) applyProps(raycaster, {\n        ...options\n      });\n      if (!is.equ(params, raycaster.params, shallowLoose)) applyProps(raycaster, {\n        params: {\n          ...raycaster.params,\n          ...params\n        }\n      });\n\n      // Create default camera, don't overwrite any user-set state\n      if (!state.camera || state.camera === lastCamera && !is.equ(lastCamera, cameraOptions, shallowLoose)) {\n        lastCamera = cameraOptions;\n        const isCamera = cameraOptions == null ? void 0 : cameraOptions.isCamera;\n        const camera = isCamera ? cameraOptions : orthographic ? new THREE.OrthographicCamera(0, 0, 0, 0, 0.1, 1000) : new THREE.PerspectiveCamera(75, 0, 0.1, 1000);\n        if (!isCamera) {\n          camera.position.z = 5;\n          if (cameraOptions) {\n            applyProps(camera, cameraOptions);\n            // Preserve user-defined frustum if possible\n            // https://github.com/pmndrs/react-three-fiber/issues/3160\n            if (!camera.manual) {\n              if ('aspect' in cameraOptions || 'left' in cameraOptions || 'right' in cameraOptions || 'bottom' in cameraOptions || 'top' in cameraOptions) {\n                camera.manual = true;\n                camera.updateProjectionMatrix();\n              }\n            }\n          }\n          // Always look at center by default\n          if (!state.camera && !(cameraOptions != null && cameraOptions.rotation)) camera.lookAt(0, 0, 0);\n        }\n        state.set({\n          camera\n        });\n\n        // Configure raycaster\n        // https://github.com/pmndrs/react-xr/issues/300\n        raycaster.camera = camera;\n      }\n\n      // Set up scene (one time only!)\n      if (!state.scene) {\n        let scene;\n        if (sceneOptions != null && sceneOptions.isScene) {\n          scene = sceneOptions;\n          prepare(scene, store, '', {});\n        } else {\n          scene = new THREE.Scene();\n          prepare(scene, store, '', {});\n          if (sceneOptions) applyProps(scene, sceneOptions);\n        }\n        state.set({\n          scene\n        });\n      }\n\n      // Store events internally\n      if (events && !state.events.handlers) state.set({\n        events: events(store)\n      });\n      // Check size, allow it to take on container bounds initially\n      const size = computeInitialSize(canvas, propsSize);\n      if (!is.equ(size, state.size, shallowLoose)) {\n        state.setSize(size.width, size.height, size.top, size.left);\n      }\n      // Check pixelratio\n      if (dpr && state.viewport.dpr !== calculateDpr(dpr)) state.setDpr(dpr);\n      // Check frameloop\n      if (state.frameloop !== frameloop) state.setFrameloop(frameloop);\n      // Check pointer missed\n      if (!state.onPointerMissed) state.set({\n        onPointerMissed\n      });\n      // Check performance\n      if (performance && !is.equ(performance, state.performance, shallowLoose)) state.set(state => ({\n        performance: {\n          ...state.performance,\n          ...performance\n        }\n      }));\n\n      // Set up XR (one time only!)\n      if (!state.xr) {\n        var _gl$xr;\n        // Handle frame behavior in WebXR\n        const handleXRFrame = (timestamp, frame) => {\n          const state = store.getState();\n          if (state.frameloop === 'never') return;\n          advance(timestamp, true, state, frame);\n        };\n\n        // Toggle render switching on session\n        const handleSessionChange = () => {\n          const state = store.getState();\n          state.gl.xr.enabled = state.gl.xr.isPresenting;\n          state.gl.xr.setAnimationLoop(state.gl.xr.isPresenting ? handleXRFrame : null);\n          if (!state.gl.xr.isPresenting) invalidate(state);\n        };\n\n        // WebXR session manager\n        const xr = {\n          connect() {\n            const gl = store.getState().gl;\n            gl.xr.addEventListener('sessionstart', handleSessionChange);\n            gl.xr.addEventListener('sessionend', handleSessionChange);\n          },\n          disconnect() {\n            const gl = store.getState().gl;\n            gl.xr.removeEventListener('sessionstart', handleSessionChange);\n            gl.xr.removeEventListener('sessionend', handleSessionChange);\n          }\n        };\n\n        // Subscribe to WebXR session events\n        if (typeof ((_gl$xr = gl.xr) == null ? void 0 : _gl$xr.addEventListener) === 'function') xr.connect();\n        state.set({\n          xr\n        });\n      }\n\n      // Set shadowmap\n      if (gl.shadowMap) {\n        const oldEnabled = gl.shadowMap.enabled;\n        const oldType = gl.shadowMap.type;\n        gl.shadowMap.enabled = !!shadows;\n        if (is.boo(shadows)) {\n          gl.shadowMap.type = THREE.PCFSoftShadowMap;\n        } else if (is.str(shadows)) {\n          var _types$shadows;\n          const types = {\n            basic: THREE.BasicShadowMap,\n            percentage: THREE.PCFShadowMap,\n            soft: THREE.PCFSoftShadowMap,\n            variance: THREE.VSMShadowMap\n          };\n          gl.shadowMap.type = (_types$shadows = types[shadows]) != null ? _types$shadows : THREE.PCFSoftShadowMap;\n        } else if (is.obj(shadows)) {\n          Object.assign(gl.shadowMap, shadows);\n        }\n        if (oldEnabled !== gl.shadowMap.enabled || oldType !== gl.shadowMap.type) gl.shadowMap.needsUpdate = true;\n      }\n      THREE.ColorManagement.enabled = !legacy;\n\n      // Set color space and tonemapping preferences\n      if (!configured) {\n        gl.outputColorSpace = linear ? THREE.LinearSRGBColorSpace : THREE.SRGBColorSpace;\n        gl.toneMapping = flat ? THREE.NoToneMapping : THREE.ACESFilmicToneMapping;\n      }\n\n      // Update color management state\n      if (state.legacy !== legacy) state.set(() => ({\n        legacy\n      }));\n      if (state.linear !== linear) state.set(() => ({\n        linear\n      }));\n      if (state.flat !== flat) state.set(() => ({\n        flat\n      }));\n\n      // Set gl props\n      if (glConfig && !is.fun(glConfig) && !isRenderer(glConfig) && !is.equ(glConfig, gl, shallowLoose)) applyProps(gl, glConfig);\n\n      // Set locals\n      onCreated = onCreatedCallback;\n      configured = true;\n      resolve();\n      return this;\n    },\n    render(children) {\n      // The root has to be configured before it can be rendered\n      if (!configured && !pending) this.configure();\n      pending.then(() => {\n        reconciler.updateContainer( /*#__PURE__*/jsx(Provider, {\n          store: store,\n          children: children,\n          onCreated: onCreated,\n          rootElement: canvas\n        }), fiber, null, () => undefined);\n      });\n      return store;\n    },\n    unmount() {\n      unmountComponentAtNode(canvas);\n    }\n  };\n}\nfunction Provider({\n  store,\n  children,\n  onCreated,\n  rootElement\n}) {\n  useIsomorphicLayoutEffect(() => {\n    const state = store.getState();\n    // Flag the canvas active, rendering will now begin\n    state.set(state => ({\n      internal: {\n        ...state.internal,\n        active: true\n      }\n    }));\n    // Notify that init is completed, the scene graph exists, but nothing has yet rendered\n    if (onCreated) onCreated(state);\n    // Connect events to the targets parent, this is done to ensure events are registered on\n    // a shared target, and not on the canvas itself\n    if (!store.getState().events.connected) state.events.connect == null ? void 0 : state.events.connect(rootElement);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/jsx(context.Provider, {\n    value: store,\n    children: children\n  });\n}\nfunction unmountComponentAtNode(canvas, callback) {\n  const root = _roots.get(canvas);\n  const fiber = root == null ? void 0 : root.fiber;\n  if (fiber) {\n    const state = root == null ? void 0 : root.store.getState();\n    if (state) state.internal.active = false;\n    reconciler.updateContainer(null, fiber, null, () => {\n      if (state) {\n        setTimeout(() => {\n          try {\n            var _state$gl, _state$gl$renderLists, _state$gl2, _state$gl3;\n            state.events.disconnect == null ? void 0 : state.events.disconnect();\n            (_state$gl = state.gl) == null ? void 0 : (_state$gl$renderLists = _state$gl.renderLists) == null ? void 0 : _state$gl$renderLists.dispose == null ? void 0 : _state$gl$renderLists.dispose();\n            (_state$gl2 = state.gl) == null ? void 0 : _state$gl2.forceContextLoss == null ? void 0 : _state$gl2.forceContextLoss();\n            if ((_state$gl3 = state.gl) != null && _state$gl3.xr) state.xr.disconnect();\n            dispose(state.scene);\n            _roots.delete(canvas);\n            if (callback) callback(canvas);\n          } catch (e) {\n            /* ... */\n          }\n        }, 500);\n      }\n    });\n  }\n}\nfunction createPortal(children, container, state) {\n  return /*#__PURE__*/jsx(Portal, {\n    children: children,\n    container: container,\n    state: state\n  });\n}\nfunction Portal({\n  state = {},\n  children,\n  container\n}) {\n  /** This has to be a component because it would not be able to call useThree/useStore otherwise since\r\n   *  if this is our environment, then we are not in r3f's renderer but in react-dom, it would trigger\r\n   *  the \"R3F hooks can only be used within the Canvas component!\" warning:\r\n   *  <Canvas>\r\n   *    {createPortal(...)} */\n  const {\n    events,\n    size,\n    ...rest\n  } = state;\n  const previousRoot = useStore();\n  const [raycaster] = React.useState(() => new THREE.Raycaster());\n  const [pointer] = React.useState(() => new THREE.Vector2());\n  const inject = useMutableCallback((rootState, injectState) => {\n    let viewport = undefined;\n    if (injectState.camera && size) {\n      const camera = injectState.camera;\n      // Calculate the override viewport, if present\n      viewport = rootState.viewport.getCurrentViewport(camera, new THREE.Vector3(), size);\n      // Update the portal camera, if it differs from the previous layer\n      if (camera !== rootState.camera) updateCamera(camera, size);\n    }\n    return {\n      // The intersect consists of the previous root state\n      ...rootState,\n      ...injectState,\n      // Portals have their own scene, which forms the root, a raycaster and a pointer\n      scene: container,\n      raycaster,\n      pointer,\n      mouse: pointer,\n      // Their previous root is the layer before it\n      previousRoot,\n      // Events, size and viewport can be overridden by the inject layer\n      events: {\n        ...rootState.events,\n        ...injectState.events,\n        ...events\n      },\n      size: {\n        ...rootState.size,\n        ...size\n      },\n      viewport: {\n        ...rootState.viewport,\n        ...viewport\n      },\n      // Layers are allowed to override events\n      setEvents: events => injectState.set(state => ({\n        ...state,\n        events: {\n          ...state.events,\n          ...events\n        }\n      }))\n    };\n  });\n  const usePortalStore = React.useMemo(() => {\n    // Create a mirrored store, based on the previous root with a few overrides ...\n    const store = createWithEqualityFn((set, get) => ({\n      ...rest,\n      set,\n      get\n    }));\n\n    // Subscribe to previous root-state and copy changes over to the mirrored portal-state\n    const onMutate = prev => store.setState(state => inject.current(prev, state));\n    onMutate(previousRoot.getState());\n    previousRoot.subscribe(onMutate);\n    return store;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [previousRoot, container]);\n  return (\n    /*#__PURE__*/\n    // @ts-ignore, reconciler types are not maintained\n    jsx(Fragment, {\n      children: reconciler.createPortal( /*#__PURE__*/jsx(context.Provider, {\n        value: usePortalStore,\n        children: children\n      }), usePortalStore, null)\n    })\n  );\n}\n\n/**\r\n * Force React to flush any updates inside the provided callback synchronously and immediately.\r\n * All the same caveats documented for react-dom's `flushSync` apply here (see https://react.dev/reference/react-dom/flushSync).\r\n * Nevertheless, sometimes one needs to render synchronously, for example to keep DOM and 3D changes in lock-step without\r\n * having to revert to a non-React solution. Note: this will only flush updates within the `Canvas` root.\r\n */\nfunction flushSync(fn) {\n  // @ts-ignore - reconciler types are not maintained\n  return reconciler.flushSyncFromReconciler(fn);\n}\n\nfunction createSubs(callback, subs) {\n  const sub = {\n    callback\n  };\n  subs.add(sub);\n  return () => void subs.delete(sub);\n}\nconst globalEffects = new Set();\nconst globalAfterEffects = new Set();\nconst globalTailEffects = new Set();\n\n/**\r\n * Adds a global render callback which is called each frame.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#addEffect\r\n */\nconst addEffect = callback => createSubs(callback, globalEffects);\n\n/**\r\n * Adds a global after-render callback which is called each frame.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#addAfterEffect\r\n */\nconst addAfterEffect = callback => createSubs(callback, globalAfterEffects);\n\n/**\r\n * Adds a global callback which is called when rendering stops.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#addTail\r\n */\nconst addTail = callback => createSubs(callback, globalTailEffects);\nfunction run(effects, timestamp) {\n  if (!effects.size) return;\n  for (const {\n    callback\n  } of effects.values()) {\n    callback(timestamp);\n  }\n}\nfunction flushGlobalEffects(type, timestamp) {\n  switch (type) {\n    case 'before':\n      return run(globalEffects, timestamp);\n    case 'after':\n      return run(globalAfterEffects, timestamp);\n    case 'tail':\n      return run(globalTailEffects, timestamp);\n  }\n}\nlet subscribers;\nlet subscription;\nfunction update(timestamp, state, frame) {\n  // Run local effects\n  let delta = state.clock.getDelta();\n\n  // In frameloop='never' mode, clock times are updated using the provided timestamp\n  if (state.frameloop === 'never' && typeof timestamp === 'number') {\n    delta = timestamp - state.clock.elapsedTime;\n    state.clock.oldTime = state.clock.elapsedTime;\n    state.clock.elapsedTime = timestamp;\n  }\n\n  // Call subscribers (useFrame)\n  subscribers = state.internal.subscribers;\n  for (let i = 0; i < subscribers.length; i++) {\n    subscription = subscribers[i];\n    subscription.ref.current(subscription.store.getState(), delta, frame);\n  }\n\n  // Render content\n  if (!state.internal.priority && state.gl.render) state.gl.render(state.scene, state.camera);\n\n  // Decrease frame count\n  state.internal.frames = Math.max(0, state.internal.frames - 1);\n  return state.frameloop === 'always' ? 1 : state.internal.frames;\n}\nlet running = false;\nlet useFrameInProgress = false;\nlet repeat;\nlet frame;\nlet state;\nfunction loop(timestamp) {\n  frame = requestAnimationFrame(loop);\n  running = true;\n  repeat = 0;\n\n  // Run effects\n  flushGlobalEffects('before', timestamp);\n\n  // Render all roots\n  useFrameInProgress = true;\n  for (const root of _roots.values()) {\n    var _state$gl$xr;\n    state = root.store.getState();\n\n    // If the frameloop is invalidated, do not run another frame\n    if (state.internal.active && (state.frameloop === 'always' || state.internal.frames > 0) && !((_state$gl$xr = state.gl.xr) != null && _state$gl$xr.isPresenting)) {\n      repeat += update(timestamp, state);\n    }\n  }\n  useFrameInProgress = false;\n\n  // Run after-effects\n  flushGlobalEffects('after', timestamp);\n\n  // Stop the loop if nothing invalidates it\n  if (repeat === 0) {\n    // Tail call effects, they are called when rendering stops\n    flushGlobalEffects('tail', timestamp);\n\n    // Flag end of operation\n    running = false;\n    return cancelAnimationFrame(frame);\n  }\n}\n\n/**\r\n * Invalidates the view, requesting a frame to be rendered. Will globally invalidate unless passed a root's state.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#invalidate\r\n */\nfunction invalidate(state, frames = 1) {\n  var _state$gl$xr2;\n  if (!state) return _roots.forEach(root => invalidate(root.store.getState(), frames));\n  if ((_state$gl$xr2 = state.gl.xr) != null && _state$gl$xr2.isPresenting || !state.internal.active || state.frameloop === 'never') return;\n  if (frames > 1) {\n    // legacy support for people using frames parameters\n    // Increase frames, do not go higher than 60\n    state.internal.frames = Math.min(60, state.internal.frames + frames);\n  } else {\n    if (useFrameInProgress) {\n      //called from within a useFrame, it means the user wants an additional frame\n      state.internal.frames = 2;\n    } else {\n      //the user need a new frame, no need to increment further than 1\n      state.internal.frames = 1;\n    }\n  }\n\n  // If the render-loop isn't active, start it\n  if (!running) {\n    running = true;\n    requestAnimationFrame(loop);\n  }\n}\n\n/**\r\n * Advances the frameloop and runs render effects, useful for when manually rendering via `frameloop=\"never\"`.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#advance\r\n */\nfunction advance(timestamp, runGlobalEffects = true, state, frame) {\n  if (runGlobalEffects) flushGlobalEffects('before', timestamp);\n  if (!state) for (const root of _roots.values()) update(timestamp, root.store.getState());else update(timestamp, state, frame);\n  if (runGlobalEffects) flushGlobalEffects('after', timestamp);\n}\n\nconst DOM_EVENTS = {\n  onClick: ['click', false],\n  onContextMenu: ['contextmenu', false],\n  onDoubleClick: ['dblclick', false],\n  onWheel: ['wheel', true],\n  onPointerDown: ['pointerdown', true],\n  onPointerUp: ['pointerup', true],\n  onPointerLeave: ['pointerleave', true],\n  onPointerMove: ['pointermove', true],\n  onPointerCancel: ['pointercancel', true],\n  onLostPointerCapture: ['lostpointercapture', true]\n};\n\n/** Default R3F event manager for web */\nfunction createPointerEvents(store) {\n  const {\n    handlePointer\n  } = createEvents(store);\n  return {\n    priority: 1,\n    enabled: true,\n    compute(event, state, previous) {\n      // https://github.com/pmndrs/react-three-fiber/pull/782\n      // Events trigger outside of canvas when moved, use offsetX/Y by default and allow overrides\n      state.pointer.set(event.offsetX / state.size.width * 2 - 1, -(event.offsetY / state.size.height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    },\n    connected: undefined,\n    handlers: Object.keys(DOM_EVENTS).reduce((acc, key) => ({\n      ...acc,\n      [key]: handlePointer(key)\n    }), {}),\n    update: () => {\n      var _internal$lastEvent;\n      const {\n        events,\n        internal\n      } = store.getState();\n      if ((_internal$lastEvent = internal.lastEvent) != null && _internal$lastEvent.current && events.handlers) events.handlers.onPointerMove(internal.lastEvent.current);\n    },\n    connect: target => {\n      const {\n        set,\n        events\n      } = store.getState();\n      events.disconnect == null ? void 0 : events.disconnect();\n      set(state => ({\n        events: {\n          ...state.events,\n          connected: target\n        }\n      }));\n      if (events.handlers) {\n        for (const name in events.handlers) {\n          const event = events.handlers[name];\n          const [eventName, passive] = DOM_EVENTS[name];\n          target.addEventListener(eventName, event, {\n            passive\n          });\n        }\n      }\n    },\n    disconnect: () => {\n      const {\n        set,\n        events\n      } = store.getState();\n      if (events.connected) {\n        if (events.handlers) {\n          for (const name in events.handlers) {\n            const event = events.handlers[name];\n            const [eventName] = DOM_EVENTS[name];\n            events.connected.removeEventListener(eventName, event);\n          }\n        }\n        set(state => ({\n          events: {\n            ...state.events,\n            connected: undefined\n          }\n        }));\n      }\n    }\n  };\n}\n\nexport { useStore as A, Block as B, useThree as C, useFrame as D, ErrorBoundary as E, useGraph as F, useLoader as G, _roots as _, useMutableCallback as a, useIsomorphicLayoutEffect as b, createRoot as c, unmountComponentAtNode as d, extend as e, createPointerEvents as f, createEvents as g, flushGlobalEffects as h, isRef as i, addEffect as j, addAfterEffect as k, addTail as l, invalidate as m, advance as n, createPortal as o, flushSync as p, context as q, reconciler as r, applyProps as s, threeTypes as t, useBridge as u, getRootState as v, dispose as w, act as x, buildGraph as y, useInstanceHandle as z };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}